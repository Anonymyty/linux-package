diff -uNr kernel.org/conftest/patches.h kernel/conftest/patches.h
--- kernel.org/conftest/patches.h	1970-01-01 08:00:00.000000000 +0800
+++ kernel/conftest/patches.h	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,5 @@
+static struct {
+	const char *short_description;
+	const char *description;
+} __nv_patches[] = {
+{ NULL, NULL } };
diff -uNr kernel.org/conftest.h kernel/conftest.h
--- kernel.org/conftest.h	1970-01-01 08:00:00.000000000 +0800
+++ kernel/conftest.h	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,783 @@
+/* synchronized with conftest.sh from 358.16, 355.11, 352.63, 349.16, 346.96, 343.36, 340.96, 304.131, 173.14.39, 96.43.23, 71.86.15 */
+
+#ifndef LINUX_VERSION_CODE
+#include <linux/version.h>
+#endif
+
+#if !defined(IS_ENABLED) && LINUX_VERSION_CODE < KERNEL_VERSION(3,1,0)
+#define __ARG_PLACEHOLDER_1 0,
+#define config_enabled(cfg) _config_enabled(cfg)
+#define _config_enabled(value) __config_enabled(__ARG_PLACEHOLDER_##value)
+#define __config_enabled(arg1_or_junk) ___config_enabled(arg1_or_junk 1, 0)
+#define ___config_enabled(__ignored, val, ...) val
+#define IS_ENABLED(option) (config_enabled(option) || config_enabled(option##_MODULE))
+#endif
+
+/* Implement conftest.sh function nvidiafb_sanity_check */
+#if IS_ENABLED(CONFIG_FB_NVIDIA)
+#warning "The nvidia module is incompatible with nvidiafb!"
+#endif
+
+/* Implement conftest.sh function xen_sanity_check */
+#if IS_ENABLED(CONFIG_XEN) && ! IS_ENABLED(CONFIG_PARAVIRT)
+#warning "Xen kernels are not supported!"
+#endif
+
+/* Implement conftest.sh function preempt_rt_sanity_check */
+#if IS_ENABLED(CONFIG_PREEMPT_RT) || IS_ENABLED(CONFIG_PREEMPT_RT_FULL)
+#warning "PREEMPT_RT kernels are not supported!"
+#endif
+
+/* Implement conftest.sh function remap_page_range */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,11)
+ #if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
+  #define NV_REMAP_PAGE_RANGE_PRESENT
+  #define NV_REMAP_PAGE_RANGE_ARGUMENT_COUNT 4
+ #else
+  #define NV_REMAP_PAGE_RANGE_PRESENT
+  #define NV_REMAP_PAGE_RANGE_ARGUMENT_COUNT 5
+ #endif
+#else
+ #undef NV_REMAP_PAGE_RANGE_PRESENT
+#endif
+
+/* Implement conftest.sh function set_memory_uc */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25) && IS_ENABLED(CONFIG_X86)
+ #define NV_SET_MEMORY_UC_PRESENT
+#else
+ #undef NV_SET_MEMORY_UC_PRESENT
+#endif
+
+/* Implement conftest.sh function set_memory_array_uc */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28) && IS_ENABLED(CONFIG_X86)
+ #define NV_SET_MEMORY_ARRAY_UC_PRESENT
+#else
+ #undef NV_SET_MEMORY_ARRAY_UC_PRESENT
+#endif
+
+/* Implement conftest.sh function set_pages_uc */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25) && IS_ENABLED(CONFIG_X86)
+ #define NV_SET_PAGES_UC_PRESENT
+#else
+ #undef NV_SET_PAGES_UC_PRESENT
+#endif
+
+/* Implement conftest.sh function outer_flush_all */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,34) && IS_ENABLED(CONFIG_ARM)
+ #define NV_OUTER_FLUSH_ALL_PRESENT
+#else
+ #undef NV_OUTER_FLUSH_ALL_PRESENT
+#endif
+
+/* Implement conftest.sh function change_page_attr */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,20) && \
+               LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,25)
+ #define NV_CHANGE_PAGE_ATTR_PRESENT
+#else
+ #undef NV_CHANGE_PAGE_ATTR_PRESENT
+#endif
+
+/* Implement conftest.sh function pci_get_class */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,10)
+ #define NV_PCI_GET_CLASS_PRESENT
+#else
+ #undef NV_PCI_GET_CLASS_PRESENT
+#endif
+
+/* Implement conftest.sh function pci_get_domain_bus_and_slot */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,33)
+ #define NV_PCI_GET_DOMAIN_BUS_AND_SLOT_PRESENT
+#else
+ #undef NV_PCI_GET_DOMAIN_BUS_AND_SLOT_PRESENT
+#endif
+
+/* Implement conftest.sh function pci_save_state */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,10)
+ #define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 1
+#else
+ #define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 2
+#endif
+
+/* Implement conftest.sh function remap_pfn_range */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,10)
+ #define NV_REMAP_PFN_RANGE_PRESENT
+#else
+ #undef NV_REMAP_PFN_RANGE_PRESENT
+#endif
+
+/* Implement conftest.sh function agp_backend_acquire */
+/* Only kernels sometime before 2.4.0 don't have this function, and who */
+/* cares anymore */
+#define NV_AGP_BACKEND_ACQUIRE_PRESENT
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12)
+ #define NV_AGP_BACKEND_ACQUIRE_ARGUMENT_COUNT 1
+#else
+ #define NV_AGP_BACKEND_ACQUIRE_ARGUMENT_COUNT 0
+#endif
+
+/* Implement conftest.sh function follow_pfn */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
+ #define NV_FOLLOW_PFN_PRESENT
+#else
+ #undef NV_FOLLOW_PFN_PRESENT
+#endif
+
+/* removed in 349.xx */
+/* Implement conftest.sh function vmap */
+/* I can not find any released kernel that uses the 2 argument variant */
+/* of vmap */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,22)
+ #define NV_VMAP_PRESENT
+ #define NV_VMAP_ARGUMENT_COUNT 4
+#else
+ #undef NV_VMAP_PRESENT
+#endif
+
+/* Implement conftest.sh function i2c_adapter */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
+ #define NV_I2C_ADAPTER_HAS_INC_USE
+ #define NV_I2C_ADAPTER_HAS_DEC_USE
+ #define NV_I2C_ADAPTER_HAS_CLIENT_REGISTER
+#else
+ #undef NV_I2C_ADAPTER_HAS_INC_USE
+ #undef NV_I2C_ADAPTER_HAS_DEC_USE
+ #undef NV_I2C_ADAPTER_HAS_CLIENT_REGISTER
+#endif
+
+/* Implement conftest.sh function pm_message_t */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,11)
+ #define NV_PM_MESSAGE_T_PRESENT
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,14)
+  #define NV_PM_MESSAGE_T_HAS_EVENT
+ #else
+  #undef NV_PM_MESSAGE_T_HAS_EVENT
+ #endif
+#else
+ #undef NV_PM_MESSAGE_T_PRESENT
+ #undef NV_PM_MESSAGE_T_HAS_EVENT
+#endif
+
+/* Implement conftest.sh function pci_choose_state */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,11)
+ #define NV_PCI_CHOOSE_STATE_PRESENT
+#else
+ #undef NV_PCI_CHOOSE_STATE_PRESENT
+#endif
+
+/* Implement conftest.sh function vm_insert_page */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
+ #define NV_VM_INSERT_PAGE_PRESENT
+#else
+ #undef NV_VM_INSERT_PAGE_PRESENT
+#endif
+
+/* Implement conftest.sh function irq_handler_t */
+/* I can not find any released kernel that uses the 3 argument variant */
+/* of irq_handler_t */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+ #define NV_IRQ_HANDLER_T_PRESENT
+ #define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 2
+#else
+ #undef NV_IRQ_HANDLER_T_PRESENT
+#endif
+
+/* Implement conftest.sh function acpi_device_ops */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,10) && \
+               LINUX_VERSION_CODE < KERNEL_VERSION(2,6,21)
+ #define NV_ACPI_DEVICE_OPS_HAS_MATCH
+#else
+ #undef NV_ACPI_DEVICE_OPS_HAS_MATCH
+#endif
+
+/* Implement conftest.sh function acpi_op_remove */
+/* All versions since 2.6.0 have this, didn't check earlier kernels */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0)
+ #define NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT 1
+#else
+ #define NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT 2
+#endif
+
+/* Implement conftest.sh function acpi_device_id */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,23)
+ #define NV_ACPI_DEVICE_ID_HAS_DRIVER_DATA
+#else
+ #undef NV_ACPI_DEVICE_ID_HAS_DRIVER_DATA
+#endif
+
+/* Implement conftest.sh function acquire_console_sem */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,10) && \
+    LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38)
+ #define NV_ACQUIRE_CONSOLE_SEM_PRESENT
+#else
+ #undef NV_ACQUIRE_CONSOLE_SEM_PRESENT
+#endif
+
+/* Implement conftest.sh function console_lock */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+ #define NV_CONSOLE_LOCK_PRESENT
+#else
+ #undef NV_CONSOLE_LOCK_PRESENT
+#endif
+
+/* Implement conftest.sh function kmem_cache_create */
+/* Only kernels sometime before 2.4.0 don't have this function, and who */
+/* cares anymore */
+#define NV_KMEM_CACHE_CREATE_PRESENT
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,23)
+ #define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 5
+#else
+ #define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 6
+#endif
+
+/* Implement conftest.sh function smp_call_function */
+/* Only kernels sometime before 2.4.0 don't have this function, and who */
+/* cares anymore */
+#define NV_SMP_CALL_FUNCTION_PRESENT
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+ #define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 3
+#else
+ #define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 4
+#endif
+
+/* Implement conftest.sh function on_each_cpu */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
+ #define NV_ON_EACH_CPU_PRESENT
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+  #define NV_ON_EACH_CPU_ARGUMENT_COUNT 3
+ #else
+  #define NV_ON_EACH_CPU_ARGUMENT_COUNT 4
+ #endif
+#else
+ #undef NV_ON_EACH_CPU_PRESENT
+#endif
+
+/* Implement conftest.sh function vmm_support */
+/* nv-xen.h does not exist */
+#undef HAVE_NV_XEN
+
+/* removed in 352 */
+/* Implement conftest.sh function nvmap_support */
+/* nv-android.h does not exist */
+#undef HAVE_NV_ANDROID
+
+/* Implement conftest.sh function acpi_evaluate_integer */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,19)
+ #define NV_ACPI_EVALUATE_INTEGER_PRESENT
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
+  typedef unsigned long long nv_acpi_integer_t;
+ #else
+  typedef unsigned long nv_acpi_integer_t;
+ #endif
+#else
+ #undef NV_ACPI_EVALUATE_INTEGER_PRESENT
+ typedef unsigned long nv_acpi_integer_t;
+#endif
+
+/* Implement conftest.sh function acpi_walk_namespace */
+/* Only kernels sometime before 2.4.0 don't have this function, and who */
+/* cares anymore */
+#define NV_ACPI_WALK_NAMESPACE_PRESENT
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,33)
+ #define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 7
+#else
+ #define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 6
+#endif
+
+/* Implement conftest.sh function acpi_os_wait_events_complete */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,7)
+ #define NV_ACPI_OS_WAIT_EVENTS_COMPLETE_PRESENT
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0)
+  #define NV_ACPI_OS_WAIT_EVENTS_COMPLETE_ARGUMENT_COUNT 0
+ #else
+  #define NV_ACPI_OS_WAIT_EVENTS_COMPLETE_ARGUMENT_COUNT 1
+ #endif
+#else
+ #undef NV_ACPI_OS_WAIT_EVENTS_COMPLETE_PRESENT
+#endif
+
+/* Implement conftest.sh function ioremap_cache */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25) && IS_ENABLED(CONFIG_X86)
+ #define NV_IOREMAP_CACHE_PRESENT
+#else
+ #undef NV_IOREMAP_CACHE_PRESENT
+#endif
+
+/* Implement conftest.sh function ioremap_wc */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,26)
+ #define NV_IOREMAP_WC_PRESENT
+#else
+ #undef NV_IOREMAP_WC_PRESENT
+#endif
+
+/* Implement conftest.sh function proc_dir_entry */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
+ #define NV_PROC_DIR_ENTRY_HAS_OWNER
+#else
+ #undef NV_PROC_DIR_ENTRY_HAS_OWNER
+#endif
+
+/* Implement conftest.sh function INIT_WORK */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,41)
+ #define NV_INIT_WORK_PRESENT
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20)
+  #define NV_INIT_WORK_ARGUMENT_COUNT 2
+ #else
+  #define NV_INIT_WORK_ARGUMENT_COUNT 3
+ #endif
+#else
+ #undef NV_INIT_WORK_PRESENT
+#endif
+
+/* Implement conftest.sh function pci_dma_mapping_error */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,5)
+ #define NV_PCI_DMA_MAPPING_ERROR_PRESENT
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+  #define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 2
+ #else
+  #define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 1
+ #endif
+#else
+ #undef NV_PCI_DMA_MAPPING_ERROR_PRESENT
+#endif
+
+/* Implement conftest.sh function agp_memory */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
+ #define NV_AGP_MEMORY_HAS_PAGES
+#else
+ #undef NV_AGP_MEMORY_HAS_PAGES
+#endif
+
+/* Implement conftest.sh function scatterlist */
+/* The logic and the define were reversed from HAS_PAGE
+   to HAS_PAGE_LINK in 304.131/340.96/352.63 */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
+ #undef NV_SCATTERLIST_HAS_PAGE_LINK
+ #define NV_SCATTERLIST_HAS_PAGE
+#else
+ #define NV_SCATTERLIST_HAS_PAGE_LINK
+ #undef NV_SCATTERLIST_HAS_PAGE
+#endif
+
+/* Implement conftest.sh function pci_domain_nr */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,71)
+ #define NV_PCI_DOMAIN_NR_PRESENT
+#else
+ #undef NV_PCI_DOMAIN_NR_PRESENT
+#endif
+
+/* Implement conftest.sh function file_operations */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,36)
+ #define NV_FILE_OPERATIONS_HAS_IOCTL
+#else
+ #undef NV_FILE_OPERATIONS_HAS_IOCTL
+#endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,11)
+ #define NV_FILE_OPERATIONS_HAS_UNLOCKED_IOCTL
+ #define NV_FILE_OPERATIONS_HAS_COMPAT_IOCTL
+#else
+ #undef NV_FILE_OPERATIONS_HAS_UNLOCKED_IOCTL
+ #undef NV_FILE_OPERATIONS_HAS_COMPAT_IOCTL
+#endif
+
+/* removed in 352 */
+/* Implement conftest.sh function sg_init_table */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
+ #define NV_SG_INIT_TABLE_PRESENT
+#else
+ #undef NV_SG_INIT_TABLE_PRESENT
+#endif
+
+/* Implement conftest.sh function sg_table */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25)
+ #define NV_SG_TABLE_PRESENT
+#else
+ #undef NV_SG_TABLE_PRESENT
+#endif
+
+/* Implement conftest.sh function sg_alloc_table */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25)
+ #define NV_SG_ALLOC_TABLE_PRESENT
+#else
+ #undef NV_SG_ALLOC_TABLE_PRESENT
+#endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0)
+ #define NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT
+#else
+ #undef NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT
+#endif
+
+/* Implement conftest.sh function efi_enabled */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,1)
+ #define NV_EFI_ENABLED_PRESENT
+#else
+ #undef NV_EFI_ENABLED_PRESENT
+#endif
+
+/* Implement conftest.sh function dom0_kernel_present */
+#if 0
+ #define NV_DOM0_KERNEL_PRESENT
+#else
+ #undef NV_DOM0_KERNEL_PRESENT
+#endif
+
+/* Implement conftest.sh function nvidia_grid_build */
+#if 0
+ #define NV_GRID_BUILD
+#else
+ #undef NV_GRID_BUILD
+#endif
+
+/* Implement conftest.sh function drm_available */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0) && IS_ENABLED(CONFIG_DRM)
+ #define NV_DRM_AVAILABLE
+#else
+ #undef NV_DRM_AVAILABLE
+#endif
+
+/* Implement conftest.sh function proc_create_data */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,26)
+ #define NV_PROC_CREATE_DATA_PRESENT
+#else
+ #undef NV_PROC_CREATE_DATA_PRESENT
+#endif
+
+/* Implement conftest.sh function pde_data */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
+ #define NV_PDE_DATA_PRESENT
+#else
+ #undef NV_PDE_DATA_PRESENT
+#endif
+
+/* Implement conftest.sh function get_num_physpages */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,11,0)
+ #define NV_GET_NUM_PHYSPAGES_PRESENT
+#else
+ #undef NV_GET_NUM_PHYSPAGES_PRESENT
+#endif
+
+/* Implement conftest.sh function proc_remove */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
+ #define NV_PROC_REMOVE_PRESENT
+#else
+ #undef NV_PROC_REMOVE_PRESENT
+#endif
+
+/* Implement conftest.sh function vm_operations_struct */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,23)
+ #define NV_VM_OPERATIONS_STRUCT_HAS_FAULT
+#else
+ #undef NV_VM_OPERATIONS_STRUCT_HAS_FAULT
+#endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+ #define NV_VM_OPERATIONS_STRUCT_HAS_ACCESS
+#else
+ #undef NV_VM_OPERATIONS_STRUCT_HAS_ACCESS
+#endif
+
+/* Implement conftest.sh function fault_flags */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,23)
+ #define NV_FAULT_FLAG_PRESENT
+#else
+ #undef NV_FAULT_FLAG_PRESENT
+#endif
+
+/* Implement conftest.sh function atomic64_type */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
+ #define NV_ATOMIC64_PRESENT
+#else
+ #undef NV_ATOMIC64_PRESENT
+#endif
+
+/* Implement conftest.sh function task_struct */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29)
+ #define NV_TASK_STRUCT_HAS_CRED
+#else
+ #undef NV_TASK_STRUCT_HAS_CRED
+#endif
+
+/* Implement conftest.sh function backing_dev_info */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
+ #define NV_ADDRESS_SPACE_HAS_BACKING_DEV_INFO
+#else
+ #undef NV_ADDRESS_SPACE_HAS_BACKING_DEV_INFO
+#endif
+
+/* Implement conftest.sh function address_space */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12) && \
+                LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27)
+ #define NV_ADDRESS_SPACE_HAS_RWLOCK_TREE_LOCK
+#else
+ #undef NV_ADDRESS_SPACE_HAS_RWLOCK_TREE_LOCK
+#endif
+
+/* Implement conftest.sh function address_space_init_once */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)  /* 2.6.37.3 */
+ #define NV_ADDRESS_SPACE_INIT_ONCE_PRESENT
+#else
+ #undef NV_ADDRESS_SPACE_INIT_ONCE_PRESENT
+#endif
+
+/* Implement conftest.sh function kbasename */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0)
+ #define NV_KBASENAME_PRESENT
+#else
+ #undef NV_KBASENAME_PRESENT
+#endif
+
+/* Implement conftest.sh function fatal_signal_pending */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25)
+ #define NV_FATAL_SIGNAL_PENDING_PRESENT
+#else
+ #undef NV_FATAL_SIGNAL_PENDING_PRESENT
+#endif
+
+/* Implement conftest.sh function kuid_t */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0)
+ #define NV_KUID_T_PRESENT
+#else
+ #undef NV_KUID_T_PRESENT
+#endif
+
+/* Implement conftest.sh function pm_vt_switch_required */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
+ #define NV_PM_VT_SWITCH_REQUIRED_PRESENT
+#else
+ #undef NV_PM_VT_SWITCH_REQUIRED_PRESENT
+#endif
+
+/* Implement conftest.sh function list_cut_position */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+ #define NV_LIST_CUT_POSITION_PRESENT
+#else
+ #undef NV_LIST_CUT_POSITION_PRESENT
+#endif
+
+/* Implement conftest.sh function hlist_for_each_entry */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0)
+ #define NV_HLIST_FOR_EACH_ENTRY_ARGUMENT_COUNT 3
+#else
+ #define NV_HLIST_FOR_EACH_ENTRY_ARGUMENT_COUNT 4
+#endif
+
+/* Implement conftest.sh function file_inode */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0)
+ #define NV_FILE_HAS_INODE
+#else
+ #undef NV_FILE_HAS_INODE
+#endif
+
+/* Implement conftest.sh function drm_pci_set_busid */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,18,0)
+ #define NV_DRM_PCI_SET_BUSID_PRESENT
+#else
+ #undef NV_DRM_PCI_SET_BUSID_PRESENT
+#endif
+
+/* Implement conftest.sh function xen_ioemu_inject_msi */
+/* this seems to require some xen patch for the kernel */
+#if 0
+ #define NV_XEN_IOEMU_INJECT_MSI
+#else
+ #undef NV_XEN_IOEMU_INJECT_MSI
+#endif
+
+/* Implement conftest.sh function phys_to_dma */
+#if ((IS_ENABLED(CONFIG_X86) || (IS_ENABLED(CONFIG_PPC)) \
+    && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,32)) || \
+  (IS_ENABLED(CONFIG_ARM64) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)) || \
+  (IS_ENABLED(CONFIG_ARM) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)))
+ #define NV_PHYS_TO_DMA_PRESENT
+#else
+ #undef NV_PHYS_TO_DMA_PRESENT
+#endif
+
+/* Implement conftest.sh function dma_ops */
+#if (IS_ENABLED(CONFIG_X86) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,26)) || \
+  (IS_ENABLED(CONFIG_X86_64) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,16)) || \
+  (IS_ENABLED(CONFIG_ARM64) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)) || \
+  (IS_ENABLED(CONFIG_ARM) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0)) || \
+  (IS_ENABLED(CONFIG_PPC) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)) || \
+  (IS_ENABLED(CONFIG_PPC64) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
+ #define NV_DMA_OPS_PRESENT
+#else
+ #undef NV_DMA_OPS_PRESENT
+#endif
+
+/* Implement conftest.sh function dma_map_ops */
+#if (IS_ENABLED(CONFIG_X86) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)) || \
+  (IS_ENABLED(CONFIG_ARM64) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)) || \
+  (IS_ENABLED(CONFIG_ARM) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0)) || \
+  (IS_ENABLED(CONFIG_PPC) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,32)) || \
+  (IS_ENABLED(CONFIG_PPC64) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,32))
+ #define NV_DMA_MAP_OPS_PRESENT
+#else
+ #undef NV_DMA_MAP_OPS_PRESENT
+#endif
+
+/* Implement conftest.sh function get_dma_ops */
+#if (IS_ENABLED(CONFIG_X86) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)) || \
+  (IS_ENABLED(CONFIG_ARM64) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)) || \
+  (IS_ENABLED(CONFIG_ARM) && LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0)) || \
+  (IS_ENABLED(CONFIG_PPC) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)) || \
+  (IS_ENABLED(CONFIG_PPC64) && LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
+ #define NV_GET_DMA_OPS_PRESENT
+#else
+ #undef NV_GET_DMA_OPS_PRESENT
+#endif
+
+/* Implement conftest.sh function noncoherent_swiotlb_dma_ops */
+#if IS_ENABLED(CONFIG_ARM64) && LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0) && \
+  LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
+ #define NV_NONCOHERENT_SWIOTLB_DMA_OPS_PRESENT
+#else
+ #undef NV_NONCOHERENT_SWIOTLB_DMA_OPS_PRESENT
+#endif
+
+/* Implement conftest.sh function write_cr4 */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20) && \
+    LINUX_VERSION_CODE < KERNEL_VERSION(3,20,0)
+ #define NV_WRITE_CR4_PRESENT
+#else
+ #undef NV_WRITE_CR4_PRESENT
+#endif
+
+/* Implement conftest.sh function of_parse_phandle */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
+ #define NV_OF_PARSE_PHANDLE_PRESENT
+#else
+ #undef NV_OF_PARSE_PHANDLE_PRESENT
+#endif
+
+/* Implement conftest.sh function for_each_online_node */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
+ #define NV_FOR_EACH_ONLINE_NODE_PRESENT
+#else
+ #undef NV_FOR_EACH_ONLINE_NODE_PRESENT
+#endif
+
+/* Implement conftest.sh function node_end_pfn */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,0,0) || \
+    ((IS_ENABLED(CONFIG_X86) || IS_ENABLED(CONFIG_PPC)) && \
+    LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
+ #define NV_NODE_END_PFN_PRESENT
+#else
+ #undef NV_NODE_END_PFN_PRESENT
+#endif
+
+/* Check for linux/semaphore.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,26)
+ #define NV_LINUX_SEMAPHORE_H_PRESENT
+#else
+ #undef NV_LINUX_SEMAPHORE_H_PRESENT
+#endif
+
+/* Check for linux/cred.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+ #define NV_LINUX_CRED_H_PRESENT
+#else
+ #undef NV_LINUX_CRED_H_PRESENT
+#endif
+
+/* Check for drm/drmP.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+ #define NV_DRM_DRMP_H_PRESENT
+#else
+ #undef NV_DRM_DRMP_H_PRESENT
+#endif
+
+/* Check for drm/drm_gem.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,18,0)
+ #define NV_DRM_DRM_GEM_H_PRESENT
+#else
+ #undef NV_DRM_DRM_GEM_H_PRESENT
+#endif
+
+/* Check for generated/autoconf.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,33)
+ #define NV_GENERATED_AUTOCONF_H_PRESENT
+#else
+ #undef NV_GENERATED_AUTOCONF_H_PRESENT
+#endif
+
+/* Check for generated/compile.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,33)
+ #define NV_GENERATED_COMPILE_H_PRESENT
+#else
+ #undef NV_GENERATED_COMPILE_H_PRESENT
+#endif
+
+/* Check for generated/utsrelease.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,33)
+ #define NV_GENERATED_UTSRELEASE_H_PRESENT
+#else
+ #undef NV_GENERATED_UTSRELEASE_H_PRESENT
+#endif
+
+/* Check for asm/system.h */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,4,0)
+ #define NV_ASM_SYSTEM_H_PRESENT
+#else
+ #undef NV_ASM_SYSTEM_H_PRESENT
+#endif
+
+/* Check for linux/efi.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,33)
+ #define NV_LINUX_EFI_H_PRESENT
+#else
+ #undef NV_LINUX_EFI_H_PRESENT
+#endif
+
+/* Check for linux/kconfig.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,1,0)
+ #define NV_LINUX_KCONFIG_H_PRESENT
+#else
+ #undef NV_LINUX_KCONFIG_H_PRESENT
+#endif
+
+/* Check for linux/screen_info.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,16)
+ #define NV_LINUX_SCREEN_INFO_H_PRESENT
+#else
+ #undef NV_LINUX_SCREEN_INFO_H_PRESENT
+#endif
+
+/* removed in 352 */
+/* Check for linux/nvmap.h */
+// does not (yet) exist in kernel source
+ #undef NV_LINUX_NVMAP_H_PRESENT
+
+/* Check for linux/printk.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)
+ #define NV_LINUX_PRINTK_H_PRESENT
+#else
+ #undef NV_LINUX_PRINTK_H_PRESENT
+#endif
+
+/* Check for linux/ratelimit.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
+ #define NV_LINUX_RATELIMIT_H_PRESENT
+#else
+ #undef NV_LINUX_RATELIMIT_H_PRESENT
+#endif
+
+/* Check for linux/prio_tree.h */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,7,0)
+ #define NV_LINUX_PRIO_TREE_H_PRESENT
+#else
+ #undef NV_LINUX_PRIO_TREE_H_PRESENT
+#endif
+
+/* Check for linux/log2.h */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20)
+ #define NV_LINUX_LOG2_H_PRESENT
+#else
+ #undef NV_LINUX_LOG2_H_PRESENT
+#endif
+
+/* Check for xen/ioemu.h */
+/* this seems to require some xen patch for the kernel */
+#if 0
+ #define NV_XEN_IOEMU_H_PRESENT
+#else
+ #undef NV_XEN_IOEMU_H_PRESENT
+#endif
diff -uNr kernel.org/conftest_nvidia.sh kernel/conftest_nvidia.sh
--- kernel.org/conftest_nvidia.sh	1970-01-01 08:00:00.000000000 +0800
+++ kernel/conftest_nvidia.sh	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,2180 @@
+#!/bin/sh
+
+PATH="${PATH}:/bin:/sbin:/usr/bin"
+
+# make sure we are in the directory containing this script
+SCRIPTDIR=`dirname $0`
+cd $SCRIPTDIR
+
+#
+# HOSTCC vs. CC - if a conftest needs to build and execute a test
+# binary, like get_uname, then $HOSTCC needs to be used for this
+# conftest in order for the host/build system to be able to execute
+# it in X-compile environments.
+# In all other cases, $CC should be used to minimize the risk of
+# false failures due to conflicts with architecture specific header
+# files.
+#
+CC="$1"
+HOSTCC="$2"
+ARCH=$3
+ISYSTEM=`$CC -print-file-name=include 2> /dev/null`
+SOURCES=$4
+HEADERS=$SOURCES/include
+OUTPUT=$5
+XEN_PRESENT=1
+PREEMPT_RT_PRESENT=0
+COMPILE_TEST_HEADERS="macros functions symbols types generic headers"
+
+# VGX_BUILD parameter defined only for VGX builds
+
+test_xen() {
+    #
+    # Determine if the target kernel is a Xen kernel. It used to be
+    # sufficient to check for CONFIG_XEN, but the introduction of
+    # modular para-virtualization (CONFIG_PARAVIRT, etc.) and
+    # Xen guest support, it is no longer possible to determine the
+    # target environment at build time. Therefore, if both
+    # CONFIG_XEN and CONFIG_PARAVIRT are present, text_xen() treats
+    # the kernel as a stand-alone kernel.
+    #
+    if ! test_configuration_option CONFIG_XEN ||
+         test_configuration_option CONFIG_PARAVIRT; then
+        XEN_PRESENT=0
+    fi
+}
+
+append_conftest() {
+    #
+    # Append data from stdin to a temporary conftest/*.h file.
+    #
+    TEMPORARY_HEADER=conftest/$1-$$.h
+
+    while read LINE; do
+        echo ${LINE} >> $TEMPORARY_HEADER
+    done
+}
+
+compare_files() {
+    #
+    # Compare two files. Return 0 if checksums and sizes match; 1 otherwise.
+    # In case of any errors, assume the files differ, just to be safe.
+    #
+    FILE_1_CKSUM_RESULT=`cksum $1` || return 1
+    FILE_2_CKSUM_RESULT=`cksum $2` || return 1
+
+    FILE_1_SUM=`echo $FILE_1_CKSUM_RESULT | cut -f 1 -d ' '` || return 1
+    FILE_2_SUM=`echo $FILE_2_CKSUM_RESULT | cut -f 1 -d ' '` || return 1
+    if ! [ $FILE_1_SUM = $FILE_2_SUM ]; then
+        return 1
+    fi
+
+    FILE_1_SIZE=`echo $FILE_1_CKSUM_RESULT | cut -f 2 -d ' '` || return 1
+    FILE_2_SIZE=`echo $FILE_2_CKSUM_RESULT | cut -f 2 -d ' '` || return 1
+    if ! [ $FILE_1_SIZE = $FILE_2_SIZE ]; then
+        return 1
+    fi
+
+    return 0
+}
+
+update_conftest() {
+    #
+    # Check for a generated temporary header file generated by append_conftest:
+    # if present, compare against any existing header file of the same type.
+    # Update the header using the temporary one if no existing header is present
+    # or the existing header differs from the newly generated one. Otherwise,
+    # delete the temporary header. If the header is newly generated, then also
+    # regenerate the master conftest.h file.
+    #
+    TEMPORARY_HEADER=conftest/$1-$$.h
+    HEADER=conftest/$1.h
+
+    if ! [ -f $TEMPORARY_HEADER ]; then
+        return
+    fi
+
+    if ! [ -f $HEADER ] || ! compare_files $TEMPORARY_HEADER $HEADER; then
+        mv $TEMPORARY_HEADER $HEADER
+
+        # regenerate conftest.h to include any include existing subheaders
+        rm -f conftest.h
+        for i in $COMPILE_TEST_HEADERS; do
+            if [ -f conftest/$i.h ]; then
+                echo "#include \"conftest/$i.h\"" >> conftest.h
+            fi
+        done
+    else
+        rm -f $TEMPORARY_HEADER
+    fi 
+}
+
+test_headers() {
+    #
+    # Determine which header files (of a set that may or may not be
+    # present) are provided by the target kernel.
+    #
+    FILES="asm/system.h"
+    FILES="$FILES drm/drmP.h"
+    FILES="$FILES drm/drm_gem.h"
+    FILES="$FILES generated/autoconf.h"
+    FILES="$FILES generated/compile.h"
+    FILES="$FILES generated/utsrelease.h"
+    FILES="$FILES linux/efi.h"
+    FILES="$FILES linux/kconfig.h"
+    FILES="$FILES linux/screen_info.h"
+    FILES="$FILES linux/semaphore.h"
+    FILES="$FILES linux/nvmap.h"
+    FILES="$FILES linux/printk.h"
+    FILES="$FILES linux/ratelimit.h"
+    FILES="$FILES linux/prio_tree.h"
+
+    for FILE in $FILES; do
+        FILE_DEFINE=NV_`echo $FILE | tr '/.' '_' | tr 'a-z' 'A-Z'`_PRESENT
+        if [ -f $HEADERS/$FILE -o -f $OUTPUT/include/$FILE ]; then
+            echo "#define $FILE_DEFINE" | append_conftest "headers"
+        else
+            echo "#undef $FILE_DEFINE" | append_conftest "headers"
+        fi
+    done
+    update_conftest "headers"
+}
+
+create_skeleton_headers() {
+    mkdir -p conftest
+
+    for header in $COMPILE_TEST_HEADERS; do
+        if [ ! -f conftest/$header.h ]; then
+            touch conftest/$header.h
+        fi
+    done
+}
+
+build_cflags() {
+    BASE_CFLAGS="-O2 -D__KERNEL__ \
+-DKBUILD_BASENAME=\"#conftest$$\" -DKBUILD_MODNAME=\"#conftest$$\" \
+-nostdinc -isystem $ISYSTEM"
+
+    if [ "$OUTPUT" != "$SOURCES" ]; then
+        OUTPUT_CFLAGS="-I$OUTPUT/include2 -I$OUTPUT/include"
+        if [ -f "$OUTPUT/include/generated/autoconf.h" ]; then
+            AUTOCONF_CFLAGS="-include $OUTPUT/include/generated/autoconf.h"
+        else
+            AUTOCONF_CFLAGS="-include $OUTPUT/include/linux/autoconf.h"
+        fi
+    else
+        if [ -f "$HEADERS/generated/autoconf.h" ]; then
+            AUTOCONF_CFLAGS="-include $HEADERS/generated/autoconf.h"
+        else
+            AUTOCONF_CFLAGS="-include $HEADERS/linux/autoconf.h"
+        fi
+    fi
+
+    CFLAGS="$CFLAGS $OUTPUT_CFLAGS -I$HEADERS $AUTOCONF_CFLAGS"
+
+    test_xen
+
+    if [ "$OUTPUT" != "$SOURCES" ]; then
+        MACH_CFLAGS="-I$HEADERS/asm-$ARCH/mach-default"
+        if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/asm-x86/mach-default"
+            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/x86/include/asm/mach-default"
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/x86/include/uapi"
+        elif [ "$ARCH" = "arm" ]; then
+            MACH_CFLAGS="$MACH_CFLAGS -D__LINUX_ARM_ARCH__=7"
+            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/arm/mach-tegra/include"
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/arm/include/uapi"
+        elif [ "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include"
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include/uapi"
+        fi
+        if [ "$XEN_PRESENT" != "0" ]; then
+            MACH_CFLAGS="-I$HEADERS/asm-$ARCH/mach-xen $MACH_CFLAGS"
+        fi
+    else
+        MACH_CFLAGS="-I$HEADERS/asm/mach-default"
+        if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/asm-x86/mach-default"
+            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/x86/include/asm/mach-default"
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/x86/include/uapi"
+        elif [ "$ARCH" = "arm" ]; then
+            MACH_CFLAGS="$MACH_CFLAGS -D__LINUX_ARM_ARCH__=7"
+            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/arm/mach-tegra/include"
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/arm/include/uapi"
+        elif [ "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include"
+            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include/uapi"
+        fi
+        if [ "$XEN_PRESENT" != "0" ]; then
+            MACH_CFLAGS="-I$HEADERS/asm/mach-xen $MACH_CFLAGS"
+        fi
+    fi
+
+    CFLAGS="$BASE_CFLAGS $MACH_CFLAGS $OUTPUT_CFLAGS $AUTOCONF_CFLAGS"
+    CFLAGS="$CFLAGS -I$HEADERS -I$HEADERS/uapi -I$OUTPUT/include/generated/uapi"
+
+    if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
+        CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include"
+        CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include/uapi"
+        CFLAGS="$CFLAGS -I$OUTPUT/arch/x86/include/generated"
+        CFLAGS="$CFLAGS -I$OUTPUT/arch/x86/include/generated/uapi"
+    elif [ "$ARCH" = "arm" -o "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
+        CFLAGS="$CFLAGS -I$SOURCES/arch/$ARCH/include"
+        CFLAGS="$CFLAGS -I$SOURCES/arch/$ARCH/include/uapi"
+        CFLAGS="$CFLAGS -I$OUTPUT/arch/$ARCH/include/generated"
+        CFLAGS="$CFLAGS -I$OUTPUT/arch/$ARCH/include/generated/uapi"
+    fi
+    if [ -n "$BUILD_PARAMS" ]; then
+        CFLAGS="$CFLAGS -D$BUILD_PARAMS"
+    fi
+}
+
+CONFTEST_PREAMBLE="#include \"conftest.h\"
+    #if defined(NV_LINUX_KCONFIG_H_PRESENT)
+    #include <linux/kconfig.h>
+    #endif
+    #if defined(NV_GENERATED_AUTOCONF_H_PRESENT)
+    #include <generated/autoconf.h>
+    #else
+    #include <linux/autoconf.h>
+    #endif
+    #if defined(CONFIG_XEN) && \
+        defined(CONFIG_XEN_INTERFACE_VERSION) &&  !defined(__XEN_INTERFACE_VERSION__)
+    #define __XEN_INTERFACE_VERSION__ CONFIG_XEN_INTERFACE_VERSION
+    #endif"
+
+test_configuration_option() {
+    #
+    # Check to see if the given configuration option is defined
+    #
+
+    get_configuration_option $1 >/dev/null 2>&1
+
+    return $?
+
+}
+
+compile_check_conftest() {
+    #
+    # Compile the current conftest C file and check+output the result
+    #
+    CODE="$1"
+    DEF="$2"
+    VAL="$3"
+    CAT="$4"
+
+    echo "$CONFTEST_PREAMBLE
+    $CODE" > conftest$$.c
+
+    $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+    rm -f conftest$$.c
+
+    if [ -f conftest$$.o ]; then
+        rm -f conftest$$.o
+        if [ "${CAT}" = "functions" ]; then
+            #
+            # The logic for "functions" compilation tests is inverted compared to
+            # other compilation steps: if the function is present, the code
+            # snippet will fail to compile because the function call won't match
+            # the prototype. If the function is not present, the code snippet
+            # will produce an object file with the function as an unresolved
+            # symbol.
+            #
+            echo "#undef ${DEF}" | append_conftest "${CAT}"
+        else
+            echo "#define ${DEF} ${VAL}" | append_conftest "${CAT}"
+        fi
+        return
+    else
+        if [ "${CAT}" = "functions" ]; then
+            echo "#define ${DEF} ${VAL}" | append_conftest "${CAT}"
+        else
+            echo "#undef ${DEF}" | append_conftest "${CAT}"
+        fi
+        return
+    fi
+}
+
+get_configuration_option() {
+    #
+    # Print the value of given configuration option, if defined
+    #
+    RET=1
+    OPTION=$1
+
+    OLD_FILE="linux/autoconf.h"
+    NEW_FILE="generated/autoconf.h"
+    FILE=""
+
+    if [ -f $HEADERS/$NEW_FILE -o -f $OUTPUT/include/$NEW_FILE ]; then
+        FILE=$NEW_FILE
+    elif [ -f $HEADERS/$OLD_FILE -o -f $OUTPUT/include/$OLD_FILE ]; then
+        FILE=$OLD_FILE
+    fi
+
+    if [ -n "$FILE" ]; then
+        #
+        # We are looking at a configured source tree; verify
+        # that its configuration includes the given option
+        # via a compile check, and print the option's value.
+        #
+
+        if [ -f $HEADERS/$FILE ]; then
+            INCLUDE_DIRECTORY=$HEADERS
+        elif [ -f $OUTPUT/include/$FILE ]; then
+            INCLUDE_DIRECTORY=$OUTPUT/include
+        else
+            return 1
+        fi
+
+        echo "#include <$FILE>
+        #ifndef $OPTION
+        #error $OPTION not defined!
+        #endif
+
+        $OPTION
+        " > conftest$$.c
+
+        $CC -E -P -I$INCLUDE_DIRECTORY -o conftest$$ conftest$$.c > /dev/null 2>&1
+
+        if [ -e conftest$$ ]; then
+            tr -d '\r\n\t ' < conftest$$
+            RET=$?
+        fi
+
+        rm -f conftest$$.c conftest$$
+    else
+        CONFIG=$OUTPUT/.config
+        if [ -f $CONFIG ] && grep "^$OPTION=" $CONFIG; then
+            grep "^$OPTION=" $CONFIG | cut -f 2- -d "="
+            RET=$?
+        fi
+    fi
+
+    return $RET
+
+}
+
+compile_test() {
+    case "$1" in
+        set_memory_uc)
+            #
+            # Determine if the set_memory_uc() function is present.
+            #
+            CODE="
+            #include <asm/cacheflush.h>
+            void conftest_set_memory_uc(void) {
+                set_memory_uc();
+            }"
+
+            compile_check_conftest "$CODE" "NV_SET_MEMORY_UC_PRESENT" "" "functions"
+        ;;
+
+        set_memory_array_uc)
+            #
+            # Determine if the set_memory_array_uc() function is present.
+            #
+            CODE="
+            #include <asm/cacheflush.h>
+            void conftest_set_memory_array_uc(void) {
+                set_memory_array_uc();
+            }"
+
+            compile_check_conftest "$CODE" "NV_SET_MEMORY_ARRAY_UC_PRESENT" "" "functions"
+        ;;
+
+        set_pages_uc)
+            #
+            # Determine if the set_pages_uc() function is present.
+            #
+            CODE="
+            #include <asm/cacheflush.h>
+            void conftest_set_pages_uc(void) {
+                set_pages_uc();
+            }"
+
+            compile_check_conftest "$CODE" "NV_SET_PAGES_UC_PRESENT" "" "functions"
+        ;;
+
+        outer_flush_all)
+            #
+            # Determine if the outer_cache_fns struct has flush_all member.
+            #
+            CODE="
+            #include <asm/outercache.h>
+            int conftest_outer_flush_all(void) {
+                return offsetof(struct outer_cache_fns, flush_all);
+            }"
+
+            compile_check_conftest "$CODE" "NV_OUTER_FLUSH_ALL_PRESENT" "" "types"
+        ;;
+
+        change_page_attr)
+            #
+            # Determine if the change_page_attr() function is
+            # present.
+            #
+            CODE="
+            #include <linux/version.h>
+            #include <linux/utsname.h>
+            #include <linux/mm.h>
+            #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 0)
+              #include <asm/cacheflush.h>
+            #endif
+            void conftest_change_page_attr(void) {
+                change_page_attr();
+            }"
+
+            compile_check_conftest "$CODE" "NV_CHANGE_PAGE_ATTR_PRESENT" "" "functions"
+        ;;
+
+        pci_get_class)
+            #
+            # Determine if the pci_get_class() function is
+            # present.
+            #
+            CODE="
+            #include <linux/pci.h>
+            void conftest_pci_get_class(void) {
+                pci_get_class();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PCI_GET_CLASS_PRESENT" "" "functions"
+        ;;
+
+        pci_get_domain_bus_and_slot)
+            #
+            # Determine if the pci_get_domain_bus_and_slot() function
+            # is present.
+            #
+            CODE="
+            #include <linux/pci.h>
+            void conftest_pci_get_domain_bus_and_slot(void) {
+                pci_get_domain_bus_and_slot();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PCI_GET_DOMAIN_BUS_AND_SLOT_PRESENT" "" "functions"
+        ;;
+
+        pci_save_state)
+            #
+            # Determine the number of arguments of pci_(save|restore)_state().
+            # The explicit buffer argument is only present on 2.6.9. Assume the
+            # interface is always present.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/pci.h>
+            void conftest_pci_save_state(void) {
+                pci_save_state(NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 1" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 2" | append_conftest "functions"
+                return
+            fi
+        ;;
+
+        remap_pfn_range)
+            #
+            # Determine if the remap_pfn_range() function is
+            # present.
+            #
+            CODE="
+            #include <linux/mm.h>
+            void conftest_remap_pfn_range(void) {
+                remap_pfn_range();
+            }"
+
+            compile_check_conftest "$CODE" "NV_REMAP_PFN_RANGE_PRESENT" "" "functions"
+        ;;
+
+        vmap)
+            #
+            # Determine if the vmap() function is present and how
+            # many arguments it takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/vmalloc.h>
+            void conftest_vmap(void) {
+                vmap();
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#undef NV_VMAP_PRESENT" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/vmalloc.h>
+            void *conftest_vmap(struct page **pages, int count) {
+                return vmap(pages, count);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_VMAP_PRESENT" | append_conftest "functions"
+                echo "#define NV_VMAP_ARGUMENT_COUNT 2" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/vmalloc.h>
+            #include <linux/mm.h>
+            void *conftest_vmap(struct page **pages, int count) {
+                return vmap(pages, count, 0, PAGE_KERNEL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_VMAP_PRESENT" | append_conftest "functions"
+                echo "#define NV_VMAP_ARGUMENT_COUNT 4" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#error vmap() conftest failed!" | append_conftest "functions"
+                return
+            fi
+        ;;
+
+        i2c_adapter)
+            #
+            # Determine if the 'i2c_adapter' structure has the
+            # client_register() field.
+            #
+            CODE="
+            #include <linux/i2c.h>
+            int conftest_i2c_adapter(void) {
+                return offsetof(struct i2c_adapter, client_register);
+            }"
+
+            compile_check_conftest "$CODE" "NV_I2C_ADAPTER_HAS_CLIENT_REGISTER" "" "types"
+        ;;
+
+        pm_message_t)
+            #
+            # Determine if the 'pm_message_t' data type is present
+            # and if it as an 'event' member.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/pm.h>
+            void conftest_pm_message_t(pm_message_t state) {
+                pm_message_t *p = &state;
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_PM_MESSAGE_T_PRESENT" | append_conftest "types"
+                rm -f conftest$$.o
+            else
+                echo "#undef NV_PM_MESSAGE_T_PRESENT" | append_conftest "types"
+                echo "#undef NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/pm.h>  
+            int conftest_pm_message_t(void) {
+                return offsetof(pm_message_t, event);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#undef NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
+                return
+            fi
+        ;;
+
+        pci_choose_state)
+            #
+            # Determine if the pci_choose_state() function is
+            # present.
+            #
+            CODE="
+            #include <linux/pci.h>
+            void conftest_pci_choose_state(void) {
+                pci_choose_state();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PCI_CHOOSE_STATE_PRESENT" "" "functions"
+        ;;
+
+        vm_insert_page)
+            #
+            # Determine if the vm_insert_page() function is
+            # present.
+            #
+            CODE="
+            #include <linux/mm.h>
+            void conftest_vm_insert_page(void) {
+                vm_insert_page();
+            }"
+
+            compile_check_conftest "$CODE" "NV_VM_INSERT_PAGE_PRESENT" "" "functions"
+        ;;
+
+        irq_handler_t)
+            #
+            # Determine if the 'irq_handler_t' type is present and
+            # if it takes a 'struct ptregs *' argument.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/interrupt.h>
+            irq_handler_t conftest_isr;
+            " > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ ! -f conftest$$.o ]; then
+                echo "#undef NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
+                rm -f conftest$$.o
+                return
+            fi
+
+            rm -f conftest$$.o
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/interrupt.h>
+            irq_handler_t conftest_isr;
+            int conftest_irq_handler_t(int irq, void *arg) {
+                return conftest_isr(irq, arg);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
+                echo "#define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 2" | append_conftest "types"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/interrupt.h>
+            irq_handler_t conftest_isr;
+            int conftest_irq_handler_t(int irq, void *arg, struct pt_regs *regs) {
+                return conftest_isr(irq, arg, regs);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
+                echo "#define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 3" | append_conftest "types"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#error irq_handler_t() conftest failed!" | append_conftest "types"
+                return
+            fi
+        ;;
+
+        acpi_device_ops)
+            #
+            # Determine if the 'acpi_device_ops' structure has
+            # a match() member.
+            #
+            CODE="
+            #include <linux/acpi.h>
+            int conftest_acpi_device_ops(void) {
+                return offsetof(struct acpi_device_ops, match);
+            }"
+
+            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_OPS_HAS_MATCH" "" "types"
+        ;;
+
+        acpi_op_remove)
+            #
+            # Determine the number of arguments to pass to the
+            # 'acpi_op_remove' routine.
+            #
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/acpi.h>
+
+            acpi_op_remove conftest_op_remove_routine;
+
+            int conftest_acpi_device_ops_remove(struct acpi_device *device) {
+                return conftest_op_remove_routine(device);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT 1" | append_conftest "types"
+                return
+            fi
+
+            CODE="
+            #include <linux/acpi.h>
+
+            acpi_op_remove conftest_op_remove_routine;
+
+            int conftest_acpi_device_ops_remove(struct acpi_device *device, int type) {
+                return conftest_op_remove_routine(device, type);
+            }"
+
+            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT" "2" "types"
+        ;;
+
+        acpi_device_id)
+            #
+            # Determine if the 'acpi_device_id' structure has 
+            # a 'driver_data' member.
+            #
+            CODE="
+            #include <linux/acpi.h>
+            int conftest_acpi_device_id(void) {
+                return offsetof(struct acpi_device_id, driver_data);
+            }"
+
+            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_ID_HAS_DRIVER_DATA" "" "types"
+        ;;
+
+        acquire_console_sem)
+            #
+            # Determine if the acquire_console_sem() function
+            # is present.
+            #
+            CODE="
+            #include <linux/console.h>
+            void conftest_acquire_console_sem(void) {
+                acquire_console_sem(NULL);
+            }"
+
+            compile_check_conftest "$CODE" "NV_ACQUIRE_CONSOLE_SEM_PRESENT" "" "functions"
+        ;;
+
+        console_lock)
+            #
+            # Determine if the console_lock() function is present.
+            #
+            CODE="
+            #include <linux/console.h>
+            void conftest_console_lock(void) {
+                console_lock(NULL);
+            }"
+
+            compile_check_conftest "$CODE" "NV_CONSOLE_LOCK_PRESENT" "" "functions"
+        ;;
+
+        kmem_cache_create)
+            #
+            # Determine if the kmem_cache_create() function is
+            # present and how many arguments it takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/slab.h>
+            void conftest_kmem_cache_create(void) {
+                kmem_cache_create();
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#undef NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/slab.h>
+            void conftest_kmem_cache_create(void) {
+                kmem_cache_create(NULL, 0, 0, 0L, NULL, NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
+                echo "#define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 6" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/slab.h>
+            void conftest_kmem_cache_create(void) {
+                kmem_cache_create(NULL, 0, 0, 0L, NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
+                echo "#define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 5" | append_conftest "functions"
+                return
+            else
+                echo "#error kmem_cache_create() conftest failed!" | append_conftest "functions"
+            fi
+        ;;
+
+        smp_call_function)
+            #
+            # Determine if the smp_call_function() function is
+            # present and how many arguments it takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/smp.h>
+            void conftest_smp_call_function(void) {
+            #ifdef CONFIG_SMP
+                smp_call_function();
+            #endif
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#undef NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/smp.h>
+            void conftest_smp_call_function(void) {
+                smp_call_function(NULL, NULL, 0, 0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
+                echo "#define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 4" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/smp.h>
+            void conftest_smp_call_function(void) {
+                smp_call_function(NULL, NULL, 0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
+                echo "#define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 3" | append_conftest "functions"
+                return
+            else
+                echo "#error smp_call_function() conftest failed!" | append_conftest "functions"
+            fi
+        ;;
+
+        on_each_cpu)
+            #
+            # Determine if the on_each_cpu() function is present
+            # and how many arguments it takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/smp.h>
+            void conftest_on_each_cpu(void) {
+            #ifdef CONFIG_SMP
+                on_each_cpu();
+            #endif
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#undef NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/smp.h>
+            void conftest_on_each_cpu(void) {
+                on_each_cpu(NULL, NULL, 0, 0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
+                echo "#define NV_ON_EACH_CPU_ARGUMENT_COUNT 4" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/smp.h>
+            void conftest_on_each_cpu(void) {
+                on_each_cpu(NULL, NULL, 0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
+                echo "#define NV_ON_EACH_CPU_ARGUMENT_COUNT 3" | append_conftest "functions"
+                return
+            else
+                echo "#error on_each_cpu() conftest failed!" | append_conftest "functions"
+            fi
+        ;;
+
+        nvmap_support)
+            # check if nvmap is supported.
+            if [ -f nv-android.h ]; then
+                echo "#define HAVE_NV_ANDROID" | append_conftest "generic"
+                return
+            else
+                echo "#undef HAVE_NV_ANDROID" | append_conftest "generic"
+            fi
+        ;;
+
+        acpi_evaluate_integer)
+            #
+            # Determine if the acpi_evaluate_integer() function is
+            # present and the type of its 'data' argument.
+            #
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/acpi.h>
+            acpi_status acpi_evaluate_integer(acpi_handle h, acpi_string s,
+                struct acpi_object_list *l, unsigned long long *d) {
+                return AE_OK;
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
+                echo "typedef unsigned long long nv_acpi_integer_t;" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/acpi.h>
+            acpi_status acpi_evaluate_integer(acpi_handle h, acpi_string s,
+                struct acpi_object_list *l, unsigned long *d) {
+                return AE_OK;
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
+                echo "typedef unsigned long nv_acpi_integer_t;" | append_conftest "functions"
+                return
+            else
+                #
+                # We can't report a compile test failure here because
+                # this is a catch-all for both kernels that don't
+                # have acpi_evaluate_integer() and kernels that have
+                # broken header files that make it impossible to
+                # tell if the function is present.
+                #
+                echo "#undef NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
+                echo "typedef unsigned long nv_acpi_integer_t;" | append_conftest "functions"
+            fi
+        ;;
+
+        acpi_walk_namespace)
+            #
+            # Determine if the acpi_walk_namespace() function is present
+            # and how many arguments it takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/acpi.h>
+            void conftest_acpi_walk_namespace(void) {
+                acpi_walk_namespace();
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#undef NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/acpi.h>
+            void conftest_acpi_walk_namespace(void) {
+                acpi_walk_namespace(0, NULL, 0, NULL, NULL, NULL, NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
+                echo "#define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 7" | append_conftest "functions"
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/acpi.h>
+            void conftest_acpi_walk_namespace(void) {
+                acpi_walk_namespace(0, NULL, 0, NULL, NULL, NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                rm -f conftest$$.o
+                echo "#define NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
+                echo "#define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 6" | append_conftest "functions"
+                return
+            else
+                echo "#error acpi_walk_namespace() conftest failed!" | append_conftest "functions"
+            fi
+        ;;
+
+        ioremap_cache)
+            #
+            # Determine if the ioremap_cache() function is present.
+            #
+            CODE="
+            #include <asm/io.h>
+            void conftest_ioremap_cache(void) {
+                ioremap_cache();
+            }"
+
+            compile_check_conftest "$CODE" "NV_IOREMAP_CACHE_PRESENT" "" "functions"
+        ;;
+
+        ioremap_wc)
+            #
+            # Determine if the ioremap_wc() function is present.
+            #
+            CODE="
+            #include <asm/io.h>
+            void conftest_ioremap_wc(void) {
+                ioremap_wc();
+            }"
+
+            compile_check_conftest "$CODE" "NV_IOREMAP_WC_PRESENT" "" "functions"
+        ;;
+
+        proc_dir_entry)
+            #
+            # Determine if the 'proc_dir_entry' structure has 
+            # an 'owner' member.
+            #
+            CODE="
+            #include <linux/proc_fs.h>
+            int conftest_proc_dir_entry(void) {
+                return offsetof(struct proc_dir_entry, owner);
+            }"
+
+            compile_check_conftest "$CODE" "NV_PROC_DIR_ENTRY_HAS_OWNER" "" "types"
+        ;;
+
+      INIT_WORK)
+            #
+            # Determine how many arguments the INIT_WORK() macro
+            # takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/workqueue.h>
+            void conftest_INIT_WORK(void) {
+                INIT_WORK();
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#undef NV_INIT_WORK_PRESENT" | append_conftest "macros"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/workqueue.h>
+            void conftest_INIT_WORK(void) {
+                INIT_WORK((struct work_struct *)NULL, NULL, NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_INIT_WORK_PRESENT" | append_conftest "macros"
+                echo "#define NV_INIT_WORK_ARGUMENT_COUNT 3" | append_conftest "macros"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/workqueue.h>
+            void conftest_INIT_WORK(void) {
+                INIT_WORK((struct work_struct *)NULL, NULL);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_INIT_WORK_PRESENT" | append_conftest "macros"
+                echo "#define NV_INIT_WORK_ARGUMENT_COUNT 2" | append_conftest "macros"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#error INIT_WORK() conftest failed!" | append_conftest "macros"
+                return
+            fi
+        ;;
+
+      pci_dma_mapping_error)
+            #
+            # Determine how many arguments pci_dma_mapping_error()
+            # takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/pci.h>
+            int conftest_pci_dma_mapping_error(void) {
+                return pci_dma_mapping_error(NULL, 0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_PCI_DMA_MAPPING_ERROR_PRESENT" | append_conftest "functions"
+                echo "#define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 2" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/pci.h>
+            int conftest_pci_dma_mapping_error(void) {
+                return pci_dma_mapping_error(0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_PCI_DMA_MAPPING_ERROR_PRESENT" | append_conftest "functions"
+                echo "#define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 1" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#error pci_dma_mapping_error() conftest failed!" | append_conftest "functions"
+                return
+            fi
+        ;;
+
+        scatterlist)
+            #
+            # Determine if the 'scatterlist' structure has
+            # a 'page_link' member.
+            #
+            CODE="
+            #include <linux/types.h>
+            #include <linux/scatterlist.h>
+            int conftest_scatterlist(void) {
+                return offsetof(struct scatterlist, page_link);
+            }"
+
+            compile_check_conftest "$CODE" "NV_SCATTERLIST_HAS_PAGE_LINK" "" "types"
+        ;;
+
+        pci_domain_nr)
+            #
+            # Determine if the pci_domain_nr() function is present.
+            #
+            CODE="
+            #include <linux/types.h>
+            #include <linux/pci.h>
+            int conftest_pci_domain_nr(struct pci_dev *dev) {
+                return pci_domain_nr();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PCI_DOMAIN_NR_PRESENT" "" "functions"
+        ;;
+
+        file_operations)
+            #
+            # Determine if the 'file_operations' structure has
+            # 'ioctl', 'unlocked_ioctl' and 'compat_ioctl' fields.
+            #
+            CODE="
+            #include <linux/fs.h>
+            int conftest_file_operations(void) {
+                return offsetof(struct file_operations, ioctl);
+            }"
+
+            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_IOCTL" "" "types"
+
+            CODE="
+            #include <linux/fs.h>
+            int conftest_file_operations(void) {
+                return offsetof(struct file_operations, unlocked_ioctl);
+            }"
+
+            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_UNLOCKED_IOCTL" "" "types"
+
+            CODE="
+            #include <linux/fs.h>
+            int conftest_file_operations(void) {
+                return offsetof(struct file_operations, compat_ioctl);
+            }"
+
+            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_COMPAT_IOCTL" "" "types"
+        ;;
+
+        sg_init_table)
+            #
+            # Determine if the sg_init_table() function is present.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/scatterlist.h>
+            void conftest_sg_init_table(struct scatterlist *sgl,
+                    unsigned int nents) {
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ ! -f conftest$$.o ]; then
+                echo "#undef NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
+                return
+
+            fi
+            rm -f conftest$$.o
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/types.h>
+            #include <linux/scatterlist.h>
+            void conftest_sg_init_table(struct scatterlist *sgl,
+                    unsigned int nents) {
+                sg_init_table();
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#undef NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#define NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
+                return
+            fi
+        ;;
+
+        sg_table)
+            #
+            # Determine if the struct sg_table type is present.
+            #
+            CODE="
+            #include <linux/scatterlist.h>
+            struct sg_table conftest_sg_table;
+            "
+
+            compile_check_conftest "$CODE" "NV_SG_TABLE_PRESENT" "" "types"
+        ;;
+
+        sg_alloc_table)
+            #
+            # Determine if include/linux/scatterlist.h exists and which table
+            # allocation functions are present if so.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/scatterlist.h>
+            int conftest_sg_alloc_table(void) {
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ ! -f conftest$$.o ]; then
+                echo "#undef NV_SG_ALLOC_TABLE_PRESENT" | append_conftest "functions"
+                echo "#undef NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" | append_conftest "functions"
+                return
+            fi
+            
+            rm -f conftest$$.o
+
+            CODE="
+            #include <linux/scatterlist.h>
+            int conftest_sg_alloc_table(void) {
+                sg_alloc_table();
+            }"
+
+            compile_check_conftest "$CODE" "NV_SG_ALLOC_TABLE_PRESENT" "" "functions"
+
+            CODE="
+            #include <linux/scatterlist.h>
+            void conftest_sg_alloc_table_from_pages(void) {
+                sg_alloc_table_from_pages();
+            }"
+
+            compile_check_conftest "$CODE" "NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" "" "functions"
+        ;;
+
+        efi_enabled)
+            #
+            # Determine if the efi_enabled symbol is present, or if
+            # the efi_enabled() function is present and how many
+            # arguments it takes.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #if defined(NV_LINUX_EFI_H_PRESENT)
+            #include <linux/efi.h> 
+            #endif
+            int conftest_efi_enabled(void) {
+                return efi_enabled();
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#undef NV_EFI_ENABLED_PRESENT" | append_conftest "symbols"
+                echo "#undef NV_EFI_ENABLED_PRESENT" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            fi
+
+            echo "$CONFTEST_PREAMBLE
+            #if defined(NV_LINUX_EFI_H_PRESENT)
+            #include <linux/efi.h> 
+            #endif
+            int conftest_efi_enabled(void) {
+                return efi_enabled(0);
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_EFI_ENABLED_PRESENT" | append_conftest "functions"
+                echo "#define NV_EFI_ENABLED_ARGUMENT_COUNT 1" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            else
+                echo "#define NV_EFI_ENABLED_PRESENT" | append_conftest "symbols"
+                return
+            fi
+        ;;
+
+        dom0_kernel_present)
+            #
+            # Add config parameter if running on DOM0.
+            #
+            if [ -n "$VGX_BUILD" ]; then
+                echo "#define NV_DOM0_KERNEL_PRESENT" | append_conftest "generic"
+            else
+                echo "#undef NV_DOM0_KERNEL_PRESENT" | append_conftest "generic"
+            fi
+            return
+        ;;
+
+        drm_available)
+            #
+            # Determine if the DRM subsystem is usable
+            #
+            CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
+            #include <drm/drmP.h>
+            #endif
+            #if !defined(CONFIG_DRM) && !defined(CONFIG_DRM_MODULE)
+            #error DRM not enabled
+            #endif
+            void conftest_drm_available(void) {
+                struct drm_driver drv;
+                drv.gem_prime_pin = 0;
+                drv.gem_prime_get_sg_table = 0;
+                drv.gem_prime_vmap = 0;
+                drv.gem_prime_vunmap = 0;
+                (void)drm_gem_prime_import;
+                (void)drm_gem_prime_export;
+            }"
+
+            compile_check_conftest "$CODE" "NV_DRM_AVAILABLE" "" "generic"
+        ;;
+
+        proc_create_data)
+            #
+            # Determine if the proc_create_data() function is present.
+            #
+            CODE="
+            #include <linux/proc_fs.h>
+            void conftest_proc_create_data(void) {
+                proc_create_data();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PROC_CREATE_DATA_PRESENT" "" "functions"
+        ;;
+
+
+        pde_data)
+            #
+            # Determine if the PDE_DATA() function is present.
+            #
+            CODE="
+            #include <linux/proc_fs.h>
+            void conftest_PDE_DATA(void) {
+                PDE_DATA();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PDE_DATA_PRESENT" "" "functions"
+        ;;
+
+        get_num_physpages)
+            #
+            # Determine if the get_num_physpages() function is
+            # present.
+            #
+            CODE="
+            #include <linux/mm.h>
+            void conftest_get_num_physpages(void) {
+                get_num_physpages(NULL);
+            }"
+
+            compile_check_conftest "$CODE" "NV_GET_NUM_PHYSPAGES_PRESENT" "" "functions"
+        ;;
+
+        proc_remove)
+            #
+            # Determine if the proc_remove() function is present.
+            #
+            CODE="
+            #include <linux/proc_fs.h>
+            void conftest_proc_remove(void) {
+                proc_remove();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PROC_REMOVE_PRESENT" "" "functions"
+        ;;
+
+        vm_operations_struct)
+            #
+            # Determine if the 'vm_operations_struct' structure has
+            # a 'fault' field.
+            #
+            CODE="
+            #include <linux/mm.h>
+            int conftest_vm_operations_struct(void) {
+                return offsetof(struct vm_operations_struct, fault);
+            }"
+
+            compile_check_conftest "$CODE" "NV_VM_OPERATIONS_STRUCT_HAS_FAULT" "" "types"
+        ;;
+
+        task_struct)
+            #
+            # Determine if the 'task_struct' structure has
+            # a 'cred' field.
+            #
+            CODE="
+            #include <linux/sched.h>
+            int conftest_task_struct(void) {
+                return offsetof(struct task_struct, cred);
+            }"
+
+            compile_check_conftest "$CODE" "NV_TASK_STRUCT_HAS_CRED" "" "types"
+        ;;
+
+        address_space)
+            #
+            # Determine if the 'address_space' structure has
+            # a 'tree_lock' field of type rwlock_t.
+            #
+            CODE="
+            #include <linux/fs.h>
+            int conftest_address_space(void) {
+                struct address_space as;
+                rwlock_init(&as.tree_lock);
+                return offsetof(struct address_space, tree_lock);
+            }"
+
+            compile_check_conftest "$CODE" "NV_ADDRESS_SPACE_HAS_RWLOCK_TREE_LOCK" "" "types"
+        ;;
+
+        address_space_init_once)
+            #
+            # Determine if address_space_init_once is present.
+            #
+            CODE="
+            #include <linux/fs.h>
+            void conftest_address_space_init_once(void) {
+                address_space_init_once();
+            }"
+
+            compile_check_conftest "$CODE" "NV_ADDRESS_SPACE_INIT_ONCE_PRESENT" "" "functions"
+        ;;
+
+        kbasename)
+            #
+            # Determine if the kbasename() function is present.
+            #
+            CODE="
+            #include <linux/string.h>
+            void conftest_kbasename(void) {
+                kbasename();
+            }"
+
+            compile_check_conftest "$CODE" "NV_KBASENAME_PRESENT" "" "functions"
+        ;;
+
+        fatal_signal_pending)
+            #
+            # Determine if fatal_signal_pending is present.
+            #
+            CODE="
+            #include <linux/sched.h>
+            void conftest_fatal_signal_pending(void) {
+                fatal_signal_pending();
+            }"
+
+            compile_check_conftest "$CODE" "NV_FATAL_SIGNAL_PENDING_PRESENT" "" "functions"
+        ;;
+
+        kuid_t)
+            #
+            # Determine if the 'kuid_t' type is present.
+            #
+            CODE="
+            #include <linux/sched.h>
+            kuid_t conftest_kuid_t;
+            "
+
+            compile_check_conftest "$CODE" "NV_KUID_T_PRESENT" "" "types"
+        ;;
+
+        pm_vt_switch_required)
+            #
+            # Determine if the pm_vt_switch_required() function is present.
+            #
+            CODE="
+            #include <linux/pm.h>
+            void conftest_pm_vt_switch_required(void) {
+                pm_vt_switch_required();
+            }"
+
+            compile_check_conftest "$CODE" "NV_PM_VT_SWITCH_REQUIRED_PRESENT" "" "functions"
+        ;;
+
+        file_inode)
+            #
+            # Determine if the 'file' structure has
+            # a 'f_inode' field.
+            #
+            CODE="
+            #include <linux/fs.h>
+            int conftest_file_inode(void) {
+                return offsetof(struct file, f_inode);
+            }"
+
+            compile_check_conftest "$CODE" "NV_FILE_HAS_INODE" "" "types"
+        ;;
+
+        drm_pci_set_busid)
+            #
+            # Determine if the drm_pci_set_busid function is present.
+            #
+            CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
+            #include <drm/drmP.h>
+            #endif
+            void conftest_drm_pci_set_busid(void) {
+                drm_pci_set_busid();
+            }"
+
+            compile_check_conftest "$CODE" "NV_DRM_PCI_SET_BUSID_PRESENT" "" "functions"
+        ;;
+
+        write_cr4)
+            #
+            # Determine if the write_cr4() function is present.
+            #
+            CODE="
+            #include <asm/processor.h>
+            void conftest_write_cr4(void) {
+                write_cr4();
+            }"
+
+            compile_check_conftest "$CODE" "NV_WRITE_CR4_PRESENT" "" "functions"
+        ;;
+
+        for_each_online_node)
+            #
+            # Determine if the for_each_online_node() function is present.
+            #
+            CODE="
+            #include <linux/mm.h>
+            void conftest_for_each_online_node() {
+                for_each_online_node();
+            }"
+
+            compile_check_conftest "$CODE" "NV_FOR_EACH_ONLINE_NODE_PRESENT" "" "functions"
+        ;;
+
+        node_end_pfn)
+            #
+            # Determine if the node_end_pfn() function is present.
+            #
+            CODE="
+            #include <linux/mm.h>
+            void conftest_node_end_pfn() {
+                node_end_pfn();
+            }"
+
+            compile_check_conftest "$CODE" "NV_NODE_END_PFN_PRESENT" "" "functions"
+        ;;
+
+        get_user_pages_remote)
+            #
+            # Determine if the function get_user_pages_remote() is
+            # present.
+            #
+            # get_user_pages_remote() was added by:
+            #   2016 Feb 12: 1e9877902dc7e11d2be038371c6fbf2dfcd469d7
+            #
+            CODE="
+            #include <linux/mm.h>
+            int conftest_get_user_pages_remote(void) {
+                get_user_pages_remote();
+            }"
+
+            compile_check_conftest "$CODE" "NV_GET_USER_PAGES_REMOTE_PRESENT" "" "functions"
+        ;;
+    esac
+}
+
+create_skeleton_headers
+build_cflags
+
+case "$6" in
+    cc_sanity_check)
+        #
+        # Check if the selected compiler can create object files
+        # in the current environment.
+        #
+        VERBOSE=$7
+
+        echo "int cc_sanity_check(void) {
+            return 0;
+        }" > conftest$$.c
+
+        $CC -c conftest$$.c > /dev/null 2>&1
+        rm -f conftest$$.c
+
+        if [ ! -f conftest$$.o ]; then
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "";
+            fi
+            if [ "$CC" != "cc" ]; then
+                echo "The C compiler '$CC' does not appear to be able to"
+                echo "create object files.  Please make sure you have "
+                echo "your Linux distribution's libc development package"
+                echo "installed and that '$CC' is a valid C compiler";
+                echo "name."
+            else
+                echo "The C compiler '$CC' does not appear to be able to"
+                echo "create executables.  Please make sure you have "
+                echo "your Linux distribution's gcc and libc development"
+                echo "packages installed."
+            fi
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "";
+                echo "*** Failed CC sanity check. Bailing out! ***";
+                echo "";
+            fi
+            exit 1
+        else
+            rm -f conftest$$.o
+            exit 0
+        fi
+    ;;
+
+    cc_version_check)
+        #
+        # Verify that the same compiler is used for the kernel and kernel
+        # module.
+        #
+        VERBOSE=$7
+        
+        if [ ! -f gcc-version-check.c ]; then
+          #
+          # gcc-version-check.c is not in the current working directory.
+          # This can happen when building the kernel module from an
+          # NVIDIA-internal intermediate directory prior to creating an
+          # NVIDIA driver package.  Since the version check below is less
+          # useful than it used to be, just silently skip the test if
+          # gcc-version-check.c is missing.
+          #
+          IGNORE_CC_MISMATCH=1
+        fi
+
+        if [ -n "$IGNORE_CC_MISMATCH" -o -n "$SYSSRC" -o -n "$SYSINCLUDE" ]; then
+          #
+          # The user chose to disable the CC version test (which may or
+          # may not be wise) or is building the module for a kernel not
+          # currently running, which renders the test meaningless.
+          #
+          exit 0
+        fi
+
+        rm -f gcc-version-check
+        $HOSTCC gcc-version-check.c -o gcc-version-check > /dev/null 2>&1
+        if [ ! -f gcc-version-check ]; then
+            if [ "$CC" != "cc" ]; then
+                MSG="Could not compile 'gcc-version-check.c'.  Please be "
+                MSG="$MSG sure you have your Linux distribution's libc "
+                MSG="$MSG development package installed and that '$CC' "
+                MSG="$MSG is a valid C compiler name."
+            else
+                MSG="Could not compile 'gcc-version-check.c'.  Please be "
+                MSG="$MSG sure you have your Linux distribution's gcc "
+                MSG="$MSG and libc development packages installed."
+            fi
+            RET=1
+        else
+            PROC_VERSION="/proc/version"
+            if [ -f $PROC_VERSION ]; then
+                MSG=`./gcc-version-check "$(cat $PROC_VERSION)"`
+                RET=$?
+            else
+                MSG="$PROC_VERSION does not exist."
+                RET=1
+            fi
+            rm -f gcc-version-check
+        fi
+
+        if [ "$RET" != "0" ]; then
+            #
+            # The gcc version check failed
+            #
+            
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "";
+                echo "gcc-version-check failed:";
+                echo "";
+                echo "$MSG" | fmt -w 52
+                echo "";
+                echo "If you know what you are doing and want to override";
+                echo "the gcc version check, you can do so by setting the";
+                echo "IGNORE_CC_MISMATCH environment variable to \"1\".";
+                echo "";
+                echo "In any other case, set the CC environment variable";
+                echo "to the name of the compiler that was used to compile";
+                echo "the kernel.";
+                echo ""
+                echo "*** Failed CC version check. Bailing out! ***";
+                echo "";
+            else
+                echo "$MSG";
+            fi
+            exit 1;
+        else
+            exit 0
+        fi
+    ;;
+
+    suser_sanity_check)
+        #
+        # Determine the caller's user id to determine if we have sufficient
+        # privileges for the requested operation.
+        #
+        if [ $(id -ur) != 0 ]; then
+            echo "";
+            echo "Please run \"make install\" as root.";
+            echo "";
+            echo "*** Failed super-user sanity check. Bailing out! ***";
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    rmmod_sanity_check)
+        #
+        # Make sure that any currently loaded NVIDIA kernel module can be
+        # unloaded.
+        #
+        MODULE="nvidia"
+
+        if [ -n "$SYSSRC" -o -n "$SYSINCLUDE" ]; then
+          #
+          # Don't attempt to remove the kernel module if we're not
+          # building against the running kernel.
+          #
+          exit 0
+        fi
+
+        if lsmod | grep -wq $MODULE; then
+          rmmod $MODULE > /dev/null 2>&1
+        fi
+
+        if lsmod | grep -wq $MODULE; then
+            #
+            # The NVIDIA kernel module is still loaded, most likely because
+            # it is busy.
+            #
+            echo "";
+            echo "Unable to remove existing NVIDIA kernel module.";
+            echo "Please be sure you have exited X before attempting";
+            echo "to install the NVIDIA kernel module.";
+            echo "";
+            echo "*** Failed rmmod sanity check. Bailing out! ***";
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    get_uname)
+        #
+        # Print UTS_RELEASE from the kernel sources, if the kernel header
+        # file ../linux/version.h or ../linux/utsrelease.h exists. If
+        # neither header file is found, but a Makefile is found, extract
+        # PATCHLEVEL and SUBLEVEL, and use them to build the kernel
+        # release name.
+        #
+        # If no source file is found, or if an error occurred, return the
+        # output of `uname -r`.
+        #
+        RET=1
+        DIRS="generated linux"
+        FILE=""
+        
+        for DIR in $DIRS; do
+            if [ -f $HEADERS/$DIR/utsrelease.h ]; then
+                FILE="$HEADERS/$DIR/utsrelease.h"
+                break
+            elif [ -f $OUTPUT/include/$DIR/utsrelease.h ]; then
+                FILE="$OUTPUT/include/$DIR/utsrelease.h"
+                break
+            fi
+        done
+
+        if [ -z "$FILE" ]; then
+            if [ -f $HEADERS/linux/version.h ]; then
+                FILE="$HEADERS/linux/version.h"
+            elif [ -f $OUTPUT/include/linux/version.h ]; then
+                FILE="$OUTPUT/include/linux/version.h"
+            fi
+        fi
+
+        if [ -n "$FILE" ]; then
+            #
+            # We are either looking at a configured kernel source tree
+            # or at headers shipped for a specific kernel.  Determine
+            # the kernel version using a CPP check.
+            #
+            VERSION=`echo "UTS_RELEASE" | $CC - -E -P -include $FILE 2>&1`
+
+            if [ "$?" = "0" -a "VERSION" != "UTS_RELEASE" ]; then
+                echo "$VERSION"
+                RET=0
+            fi
+        else
+            #
+            # If none of the kernel headers ar found, but a Makefile is,
+            # extract PATCHLEVEL and SUBLEVEL and use them to find
+            # the kernel version.
+            #
+            MAKEFILE=$HEADERS/../Makefile
+
+            if [ -f $MAKEFILE ]; then
+                #
+                # This source tree is not configured, but includes
+                # the top-level Makefile.
+                #
+                PATCHLEVEL=$(grep "^PATCHLEVEL =" $MAKEFILE | cut -d " " -f 3)
+                SUBLEVEL=$(grep "^SUBLEVEL =" $MAKEFILE | cut -d " " -f 3)
+
+                if [ -n "$PATCHLEVEL" -a -n "$SUBLEVEL" ]; then
+                    echo 2.$PATCHLEVEL.$SUBLEVEL
+                    RET=0
+                fi
+            fi
+        fi
+
+        if [ "$RET" != "0" ]; then
+            uname -r
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    rivafb_sanity_check)
+        #
+        # Check if the kernel was compiled with rivafb support. If so, then
+        # exit, since the driver no longer works with rivafb.
+        #
+
+        if test_configuration_option CONFIG_FB_RIVA; then
+            echo "Your kernel was configured to include rivafb support!";
+            echo "";
+            echo "The rivafb driver conflicts with the NVIDIA driver, please";
+            echo "reconfigure your kernel and *disable* rivafb support, then";
+            echo "try installing the NVIDIA kernel module again.";
+            echo "";
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "*** Failed rivafb sanity check. Bailing out! ***";
+                echo "";
+            fi
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    nvidiafb_sanity_check)
+        #
+        # Check if the kernel was compiled with nvidiafb support. If so, then
+        # exit, since the driver doesn't work with nvidiafb.
+        #
+
+        if test_configuration_option CONFIG_FB_NVIDIA; then
+            echo "Your kernel was configured to include nvidiafb support!";
+            echo "";
+            echo "The nvidiafb driver conflicts with the NVIDIA driver, please";
+            echo "reconfigure your kernel and *disable* nvidiafb support, then";
+            echo "try installing the NVIDIA kernel module again.";
+            echo "";
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "*** Failed nvidiafb sanity check. Bailing out! ***";
+                echo "";
+            fi
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    xen_sanity_check)
+        #
+        # Check if the target kernel is a Xen kernel. If so, exit, since
+        # the RM doesn't currently support Xen.
+        #
+        VERBOSE=$7
+
+        if [ -n "$IGNORE_XEN_PRESENCE" -o -n "$VGX_BUILD" ]; then
+            exit 0
+        fi
+
+        if [ "$XEN_PRESENT" != "0" ]; then
+            echo "The kernel you are installing for is a Xen kernel!";
+            echo "";
+            echo "The NVIDIA driver does not currently support Xen kernels. If ";
+            echo "you are using a stock distribution kernel, please install ";
+            echo "a variant of this kernel without Xen support; if this is a ";
+            echo "custom kernel, please install a standard Linux kernel.  Then ";
+            echo "try installing the NVIDIA kernel module again.";
+            echo "";
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "*** Failed Xen sanity check. Bailing out! ***";
+                echo "";
+            fi
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    preempt_rt_sanity_check)
+        #
+        # Check if the target kernel has the PREEMPT_RT patch set applied. If
+        # so, exit, since the RM doesn't support this configuration.
+        #
+        VERBOSE=$7
+
+        if [ -n "$IGNORE_PREEMPT_RT_PRESENCE" ]; then
+            exit 0
+        fi
+
+        if test_configuration_option CONFIG_PREEMPT_RT; then
+            PREEMPT_RT_PRESENT=1
+        elif test_configuration_option CONFIG_PREEMPT_RT_FULL; then
+            PREEMPT_RT_PRESENT=1
+        fi
+
+        if [ "$PREEMPT_RT_PRESENT" != "0" ]; then
+            echo "The kernel you are installing for is a PREEMPT_RT kernel!";
+            echo "";
+            echo "The NVIDIA driver does not support real-time kernels. If you ";
+            echo "are using a stock distribution kernel, please install ";
+            echo "a variant of this kernel that does not have the PREEMPT_RT ";
+            echo "patch set applied; if this is a custom kernel, please ";
+            echo "install a standard Linux kernel.  Then try installing the ";
+            echo "NVIDIA kernel module again.";
+            echo "";
+            if [ "$VERBOSE" = "full_output" ]; then
+                echo "*** Failed PREEMPT_RT sanity check. Bailing out! ***";
+                echo "";
+            fi
+            exit 1
+        else
+            exit 0
+        fi
+    ;;
+
+    patch_check)
+        #
+        # Check for any "official" patches that may have been applied and
+        # construct a description table for reporting purposes.
+        #
+        PATCHES=""
+
+        for PATCH in patch-*.h; do
+            if [ -f $PATCH ]; then
+                echo "#include \"$PATCH\"" | append_conftest "patches"
+                PATCHES="$PATCHES "`echo $PATCH | sed -s 's/patch-\(.*\)\.h/\1/'`
+            fi
+        done
+
+        echo "static struct {
+                const char *short_description;
+                const char *description;
+              } __nv_patches[] = {" | append_conftest "patches"
+            for i in $PATCHES; do
+                echo "{ \"$i\", NV_PATCH_${i}_DESCRIPTION }," | \
+                append_conftest "patches"
+            done
+        echo "{ NULL, NULL } };" | append_conftest "patches"
+
+        update_conftest "patches"
+
+        exit 0
+    ;;
+
+    compile_tests)
+        #
+        # Run a series of compile tests to determine the set of interfaces
+        # and features available in the target kernel.
+        #
+        shift 5
+
+        test_headers
+
+        for i in $*; do compile_test $i; done
+
+        if [ -n "$SHOW_COMPILE_TEST_RESULTS" -a -f conftest.h ]; then
+            cat conftest.h conftest/*.h
+        fi
+
+        for header in $COMPILE_TEST_HEADERS; do
+            update_conftest "$header"
+        done
+
+        exit 0
+    ;;
+
+    dom0_sanity_check)
+        #
+        # Determine whether running in DOM0.
+        #
+        VERBOSE=$7
+
+        if [ -n "$VGX_BUILD" ]; then
+            if [ -f /proc/xen/capabilities ]; then
+                if [ "`cat /proc/xen/capabilities`" == "control_d" ]; then
+                    exit 0
+                fi
+            else
+                echo "The kernel is not running in DOM0.";
+                echo "";
+                if [ "$VERBOSE" = "full_output" ]; then
+                    echo "*** Failed DOM0 sanity check. Bailing out! ***";
+                    echo "";
+                fi
+            fi
+            exit 1
+        fi
+    ;;
+
+    test_configuration_option)
+        #
+        # Check to see if the given config option is set.
+        #
+        OPTION=$7
+
+        test_configuration_option $OPTION
+        exit $?
+    ;;
+
+    get_configuration_option)
+        #
+        # Get the value of the given config option.
+        #
+        OPTION=$7
+
+        get_configuration_option $OPTION
+        exit $?
+    ;;
+
+
+    guess_module_signing_hash)
+        #
+        # Determine the best cryptographic hash to use for module signing,
+        # to the extent that is possible.
+        #
+
+        HASH=$(get_configuration_option CONFIG_MODULE_SIG_HASH)
+
+        if [ $? -eq 0 ] && [ -n $HASH ]; then
+            echo $HASH
+            exit 0
+        else
+            for SHA in 512 384 256 224 1; do
+                if test_configuration_option CONFIG_MODULE_SIG_SHA$SHA; then
+                    echo sha$SHA
+                    exit 0
+                fi
+            done
+        fi
+        exit 1
+    ;;
+
+esac
diff -uNr kernel.org/conftest.sh kernel/conftest.sh
--- kernel.org/conftest.sh	2015-11-09 13:44:53.000000000 +0800
+++ kernel/conftest.sh	2016-07-31 10:11:11.000000000 +0800
@@ -1,2163 +1,7 @@
 #!/bin/sh
-
-PATH="${PATH}:/bin:/sbin:/usr/bin"
-
-# make sure we are in the directory containing this script
-SCRIPTDIR=`dirname $0`
-cd $SCRIPTDIR
-
+# This is a replacement for nvidia's conftest.sh
 #
-# HOSTCC vs. CC - if a conftest needs to build and execute a test
-# binary, like get_uname, then $HOSTCC needs to be used for this
-# conftest in order for the host/build system to be able to execute
-# it in X-compile environments.
-# In all other cases, $CC should be used to minimize the risk of
-# false failures due to conflicts with architecture specific header
-# files.
-#
-CC="$1"
-HOSTCC="$2"
-ARCH=$3
-ISYSTEM=`$CC -print-file-name=include 2> /dev/null`
-SOURCES=$4
-HEADERS=$SOURCES/include
-OUTPUT=$5
-XEN_PRESENT=1
-PREEMPT_RT_PRESENT=0
-COMPILE_TEST_HEADERS="macros functions symbols types generic headers"
-
-# VGX_BUILD parameter defined only for VGX builds
-
-test_xen() {
-    #
-    # Determine if the target kernel is a Xen kernel. It used to be
-    # sufficient to check for CONFIG_XEN, but the introduction of
-    # modular para-virtualization (CONFIG_PARAVIRT, etc.) and
-    # Xen guest support, it is no longer possible to determine the
-    # target environment at build time. Therefore, if both
-    # CONFIG_XEN and CONFIG_PARAVIRT are present, text_xen() treats
-    # the kernel as a stand-alone kernel.
-    #
-    if ! test_configuration_option CONFIG_XEN ||
-         test_configuration_option CONFIG_PARAVIRT; then
-        XEN_PRESENT=0
-    fi
-}
-
-append_conftest() {
-    #
-    # Append data from stdin to a temporary conftest/*.h file.
-    #
-    TEMPORARY_HEADER=conftest/$1-$$.h
-
-    while read LINE; do
-        echo ${LINE} >> $TEMPORARY_HEADER
-    done
-}
-
-compare_files() {
-    #
-    # Compare two files. Return 0 if checksums and sizes match; 1 otherwise.
-    # In case of any errors, assume the files differ, just to be safe.
-    #
-    FILE_1_CKSUM_RESULT=`cksum $1` || return 1
-    FILE_2_CKSUM_RESULT=`cksum $2` || return 1
-
-    FILE_1_SUM=`echo $FILE_1_CKSUM_RESULT | cut -f 1 -d ' '` || return 1
-    FILE_2_SUM=`echo $FILE_2_CKSUM_RESULT | cut -f 1 -d ' '` || return 1
-    if ! [ $FILE_1_SUM = $FILE_2_SUM ]; then
-        return 1
-    fi
-
-    FILE_1_SIZE=`echo $FILE_1_CKSUM_RESULT | cut -f 2 -d ' '` || return 1
-    FILE_2_SIZE=`echo $FILE_2_CKSUM_RESULT | cut -f 2 -d ' '` || return 1
-    if ! [ $FILE_1_SIZE = $FILE_2_SIZE ]; then
-        return 1
-    fi
-
-    return 0
-}
-
-update_conftest() {
-    #
-    # Check for a generated temporary header file generated by append_conftest:
-    # if present, compare against any existing header file of the same type.
-    # Update the header using the temporary one if no existing header is present
-    # or the existing header differs from the newly generated one. Otherwise,
-    # delete the temporary header. If the header is newly generated, then also
-    # regenerate the master conftest.h file.
-    #
-    TEMPORARY_HEADER=conftest/$1-$$.h
-    HEADER=conftest/$1.h
-
-    if ! [ -f $TEMPORARY_HEADER ]; then
-        return
-    fi
-
-    if ! [ -f $HEADER ] || ! compare_files $TEMPORARY_HEADER $HEADER; then
-        mv $TEMPORARY_HEADER $HEADER
-
-        # regenerate conftest.h to include any include existing subheaders
-        rm -f conftest.h
-        for i in $COMPILE_TEST_HEADERS; do
-            if [ -f conftest/$i.h ]; then
-                echo "#include \"conftest/$i.h\"" >> conftest.h
-            fi
-        done
-    else
-        rm -f $TEMPORARY_HEADER
-    fi 
-}
-
-test_headers() {
-    #
-    # Determine which header files (of a set that may or may not be
-    # present) are provided by the target kernel.
-    #
-    FILES="asm/system.h"
-    FILES="$FILES drm/drmP.h"
-    FILES="$FILES drm/drm_gem.h"
-    FILES="$FILES generated/autoconf.h"
-    FILES="$FILES generated/compile.h"
-    FILES="$FILES generated/utsrelease.h"
-    FILES="$FILES linux/efi.h"
-    FILES="$FILES linux/kconfig.h"
-    FILES="$FILES linux/screen_info.h"
-    FILES="$FILES linux/semaphore.h"
-    FILES="$FILES linux/nvmap.h"
-    FILES="$FILES linux/printk.h"
-    FILES="$FILES linux/ratelimit.h"
-    FILES="$FILES linux/prio_tree.h"
-
-    for FILE in $FILES; do
-        FILE_DEFINE=NV_`echo $FILE | tr '/.' '_' | tr 'a-z' 'A-Z'`_PRESENT
-        if [ -f $HEADERS/$FILE -o -f $OUTPUT/include/$FILE ]; then
-            echo "#define $FILE_DEFINE" | append_conftest "headers"
-        else
-            echo "#undef $FILE_DEFINE" | append_conftest "headers"
-        fi
-    done
-    update_conftest "headers"
-}
-
-create_skeleton_headers() {
-    mkdir -p conftest
-
-    for header in $COMPILE_TEST_HEADERS; do
-        if [ ! -f conftest/$header.h ]; then
-            touch conftest/$header.h
-        fi
-    done
-}
-
-build_cflags() {
-    BASE_CFLAGS="-O2 -D__KERNEL__ \
--DKBUILD_BASENAME=\"#conftest$$\" -DKBUILD_MODNAME=\"#conftest$$\" \
--nostdinc -isystem $ISYSTEM"
-
-    if [ "$OUTPUT" != "$SOURCES" ]; then
-        OUTPUT_CFLAGS="-I$OUTPUT/include2 -I$OUTPUT/include"
-        if [ -f "$OUTPUT/include/generated/autoconf.h" ]; then
-            AUTOCONF_CFLAGS="-include $OUTPUT/include/generated/autoconf.h"
-        else
-            AUTOCONF_CFLAGS="-include $OUTPUT/include/linux/autoconf.h"
-        fi
-    else
-        if [ -f "$HEADERS/generated/autoconf.h" ]; then
-            AUTOCONF_CFLAGS="-include $HEADERS/generated/autoconf.h"
-        else
-            AUTOCONF_CFLAGS="-include $HEADERS/linux/autoconf.h"
-        fi
-    fi
-
-    CFLAGS="$CFLAGS $OUTPUT_CFLAGS -I$HEADERS $AUTOCONF_CFLAGS"
-
-    test_xen
-
-    if [ "$OUTPUT" != "$SOURCES" ]; then
-        MACH_CFLAGS="-I$HEADERS/asm-$ARCH/mach-default"
-        if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/asm-x86/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/x86/include/asm/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/x86/include/uapi"
-        elif [ "$ARCH" = "arm" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -D__LINUX_ARM_ARCH__=7"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/arm/mach-tegra/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/arm/include/uapi"
-        elif [ "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include/uapi"
-        fi
-        if [ "$XEN_PRESENT" != "0" ]; then
-            MACH_CFLAGS="-I$HEADERS/asm-$ARCH/mach-xen $MACH_CFLAGS"
-        fi
-    else
-        MACH_CFLAGS="-I$HEADERS/asm/mach-default"
-        if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/asm-x86/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/x86/include/asm/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/x86/include/uapi"
-        elif [ "$ARCH" = "arm" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -D__LINUX_ARM_ARCH__=7"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/arm/mach-tegra/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/arm/include/uapi"
-        elif [ "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include/uapi"
-        fi
-        if [ "$XEN_PRESENT" != "0" ]; then
-            MACH_CFLAGS="-I$HEADERS/asm/mach-xen $MACH_CFLAGS"
-        fi
-    fi
-
-    CFLAGS="$BASE_CFLAGS $MACH_CFLAGS $OUTPUT_CFLAGS $AUTOCONF_CFLAGS"
-    CFLAGS="$CFLAGS -I$HEADERS -I$HEADERS/uapi -I$OUTPUT/include/generated/uapi"
-
-    if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
-        CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include"
-        CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include/uapi"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/x86/include/generated"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/x86/include/generated/uapi"
-    elif [ "$ARCH" = "arm" -o "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
-        CFLAGS="$CFLAGS -I$SOURCES/arch/$ARCH/include"
-        CFLAGS="$CFLAGS -I$SOURCES/arch/$ARCH/include/uapi"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/$ARCH/include/generated"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/$ARCH/include/generated/uapi"
-    fi
-    if [ -n "$BUILD_PARAMS" ]; then
-        CFLAGS="$CFLAGS -D$BUILD_PARAMS"
-    fi
-}
-
-CONFTEST_PREAMBLE="#include \"conftest.h\"
-    #if defined(NV_LINUX_KCONFIG_H_PRESENT)
-    #include <linux/kconfig.h>
-    #endif
-    #if defined(NV_GENERATED_AUTOCONF_H_PRESENT)
-    #include <generated/autoconf.h>
-    #else
-    #include <linux/autoconf.h>
-    #endif
-    #if defined(CONFIG_XEN) && \
-        defined(CONFIG_XEN_INTERFACE_VERSION) &&  !defined(__XEN_INTERFACE_VERSION__)
-    #define __XEN_INTERFACE_VERSION__ CONFIG_XEN_INTERFACE_VERSION
-    #endif"
-
-test_configuration_option() {
-    #
-    # Check to see if the given configuration option is defined
-    #
-
-    get_configuration_option $1 >/dev/null 2>&1
-
-    return $?
-
-}
-
-compile_check_conftest() {
-    #
-    # Compile the current conftest C file and check+output the result
-    #
-    CODE="$1"
-    DEF="$2"
-    VAL="$3"
-    CAT="$4"
-
-    echo "$CONFTEST_PREAMBLE
-    $CODE" > conftest$$.c
-
-    $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-    rm -f conftest$$.c
-
-    if [ -f conftest$$.o ]; then
-        rm -f conftest$$.o
-        if [ "${CAT}" = "functions" ]; then
-            #
-            # The logic for "functions" compilation tests is inverted compared to
-            # other compilation steps: if the function is present, the code
-            # snippet will fail to compile because the function call won't match
-            # the prototype. If the function is not present, the code snippet
-            # will produce an object file with the function as an unresolved
-            # symbol.
-            #
-            echo "#undef ${DEF}" | append_conftest "${CAT}"
-        else
-            echo "#define ${DEF} ${VAL}" | append_conftest "${CAT}"
-        fi
-        return
-    else
-        if [ "${CAT}" = "functions" ]; then
-            echo "#define ${DEF} ${VAL}" | append_conftest "${CAT}"
-        else
-            echo "#undef ${DEF}" | append_conftest "${CAT}"
-        fi
-        return
-    fi
-}
-
-get_configuration_option() {
-    #
-    # Print the value of given configuration option, if defined
-    #
-    RET=1
-    OPTION=$1
-
-    OLD_FILE="linux/autoconf.h"
-    NEW_FILE="generated/autoconf.h"
-    FILE=""
-
-    if [ -f $HEADERS/$NEW_FILE -o -f $OUTPUT/include/$NEW_FILE ]; then
-        FILE=$NEW_FILE
-    elif [ -f $HEADERS/$OLD_FILE -o -f $OUTPUT/include/$OLD_FILE ]; then
-        FILE=$OLD_FILE
-    fi
-
-    if [ -n "$FILE" ]; then
-        #
-        # We are looking at a configured source tree; verify
-        # that its configuration includes the given option
-        # via a compile check, and print the option's value.
-        #
-
-        if [ -f $HEADERS/$FILE ]; then
-            INCLUDE_DIRECTORY=$HEADERS
-        elif [ -f $OUTPUT/include/$FILE ]; then
-            INCLUDE_DIRECTORY=$OUTPUT/include
-        else
-            return 1
-        fi
-
-        echo "#include <$FILE>
-        #ifndef $OPTION
-        #error $OPTION not defined!
-        #endif
-
-        $OPTION
-        " > conftest$$.c
-
-        $CC -E -P -I$INCLUDE_DIRECTORY -o conftest$$ conftest$$.c > /dev/null 2>&1
-
-        if [ -e conftest$$ ]; then
-            tr -d '\r\n\t ' < conftest$$
-            RET=$?
-        fi
-
-        rm -f conftest$$.c conftest$$
-    else
-        CONFIG=$OUTPUT/.config
-        if [ -f $CONFIG ] && grep "^$OPTION=" $CONFIG; then
-            grep "^$OPTION=" $CONFIG | cut -f 2- -d "="
-            RET=$?
-        fi
-    fi
-
-    return $RET
-
-}
-
-compile_test() {
-    case "$1" in
-        set_memory_uc)
-            #
-            # Determine if the set_memory_uc() function is present.
-            #
-            CODE="
-            #include <asm/cacheflush.h>
-            void conftest_set_memory_uc(void) {
-                set_memory_uc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SET_MEMORY_UC_PRESENT" "" "functions"
-        ;;
-
-        set_memory_array_uc)
-            #
-            # Determine if the set_memory_array_uc() function is present.
-            #
-            CODE="
-            #include <asm/cacheflush.h>
-            void conftest_set_memory_array_uc(void) {
-                set_memory_array_uc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SET_MEMORY_ARRAY_UC_PRESENT" "" "functions"
-        ;;
-
-        set_pages_uc)
-            #
-            # Determine if the set_pages_uc() function is present.
-            #
-            CODE="
-            #include <asm/cacheflush.h>
-            void conftest_set_pages_uc(void) {
-                set_pages_uc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SET_PAGES_UC_PRESENT" "" "functions"
-        ;;
-
-        outer_flush_all)
-            #
-            # Determine if the outer_cache_fns struct has flush_all member.
-            #
-            CODE="
-            #include <asm/outercache.h>
-            int conftest_outer_flush_all(void) {
-                return offsetof(struct outer_cache_fns, flush_all);
-            }"
-
-            compile_check_conftest "$CODE" "NV_OUTER_FLUSH_ALL_PRESENT" "" "types"
-        ;;
-
-        change_page_attr)
-            #
-            # Determine if the change_page_attr() function is
-            # present.
-            #
-            CODE="
-            #include <linux/version.h>
-            #include <linux/utsname.h>
-            #include <linux/mm.h>
-            #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 0)
-              #include <asm/cacheflush.h>
-            #endif
-            void conftest_change_page_attr(void) {
-                change_page_attr();
-            }"
-
-            compile_check_conftest "$CODE" "NV_CHANGE_PAGE_ATTR_PRESENT" "" "functions"
-        ;;
-
-        pci_get_class)
-            #
-            # Determine if the pci_get_class() function is
-            # present.
-            #
-            CODE="
-            #include <linux/pci.h>
-            void conftest_pci_get_class(void) {
-                pci_get_class();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_GET_CLASS_PRESENT" "" "functions"
-        ;;
-
-        pci_get_domain_bus_and_slot)
-            #
-            # Determine if the pci_get_domain_bus_and_slot() function
-            # is present.
-            #
-            CODE="
-            #include <linux/pci.h>
-            void conftest_pci_get_domain_bus_and_slot(void) {
-                pci_get_domain_bus_and_slot();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_GET_DOMAIN_BUS_AND_SLOT_PRESENT" "" "functions"
-        ;;
-
-        pci_save_state)
-            #
-            # Determine the number of arguments of pci_(save|restore)_state().
-            # The explicit buffer argument is only present on 2.6.9. Assume the
-            # interface is always present.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pci.h>
-            void conftest_pci_save_state(void) {
-                pci_save_state(NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 1" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 2" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        remap_pfn_range)
-            #
-            # Determine if the remap_pfn_range() function is
-            # present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_remap_pfn_range(void) {
-                remap_pfn_range();
-            }"
-
-            compile_check_conftest "$CODE" "NV_REMAP_PFN_RANGE_PRESENT" "" "functions"
-        ;;
-
-        vmap)
-            #
-            # Determine if the vmap() function is present and how
-            # many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/vmalloc.h>
-            void conftest_vmap(void) {
-                vmap();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_VMAP_PRESENT" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/vmalloc.h>
-            void *conftest_vmap(struct page **pages, int count) {
-                return vmap(pages, count);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_VMAP_PRESENT" | append_conftest "functions"
-                echo "#define NV_VMAP_ARGUMENT_COUNT 2" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/vmalloc.h>
-            #include <linux/mm.h>
-            void *conftest_vmap(struct page **pages, int count) {
-                return vmap(pages, count, 0, PAGE_KERNEL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_VMAP_PRESENT" | append_conftest "functions"
-                echo "#define NV_VMAP_ARGUMENT_COUNT 4" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error vmap() conftest failed!" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        i2c_adapter)
-            #
-            # Determine if the 'i2c_adapter' structure has the
-            # client_register() field.
-            #
-            CODE="
-            #include <linux/i2c.h>
-            int conftest_i2c_adapter(void) {
-                return offsetof(struct i2c_adapter, client_register);
-            }"
-
-            compile_check_conftest "$CODE" "NV_I2C_ADAPTER_HAS_CLIENT_REGISTER" "" "types"
-        ;;
-
-        pm_message_t)
-            #
-            # Determine if the 'pm_message_t' data type is present
-            # and if it as an 'event' member.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pm.h>
-            void conftest_pm_message_t(pm_message_t state) {
-                pm_message_t *p = &state;
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PM_MESSAGE_T_PRESENT" | append_conftest "types"
-                rm -f conftest$$.o
-            else
-                echo "#undef NV_PM_MESSAGE_T_PRESENT" | append_conftest "types"
-                echo "#undef NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pm.h>  
-            int conftest_pm_message_t(void) {
-                return offsetof(pm_message_t, event);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#undef NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
-                return
-            fi
-        ;;
-
-        pci_choose_state)
-            #
-            # Determine if the pci_choose_state() function is
-            # present.
-            #
-            CODE="
-            #include <linux/pci.h>
-            void conftest_pci_choose_state(void) {
-                pci_choose_state();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_CHOOSE_STATE_PRESENT" "" "functions"
-        ;;
-
-        vm_insert_page)
-            #
-            # Determine if the vm_insert_page() function is
-            # present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_vm_insert_page(void) {
-                vm_insert_page();
-            }"
-
-            compile_check_conftest "$CODE" "NV_VM_INSERT_PAGE_PRESENT" "" "functions"
-        ;;
-
-        irq_handler_t)
-            #
-            # Determine if the 'irq_handler_t' type is present and
-            # if it takes a 'struct ptregs *' argument.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/interrupt.h>
-            irq_handler_t conftest_isr;
-            " > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ ! -f conftest$$.o ]; then
-                echo "#undef NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            fi
-
-            rm -f conftest$$.o
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/interrupt.h>
-            irq_handler_t conftest_isr;
-            int conftest_irq_handler_t(int irq, void *arg) {
-                return conftest_isr(irq, arg);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
-                echo "#define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 2" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/interrupt.h>
-            irq_handler_t conftest_isr;
-            int conftest_irq_handler_t(int irq, void *arg, struct pt_regs *regs) {
-                return conftest_isr(irq, arg, regs);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
-                echo "#define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 3" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error irq_handler_t() conftest failed!" | append_conftest "types"
-                return
-            fi
-        ;;
-
-        acpi_device_ops)
-            #
-            # Determine if the 'acpi_device_ops' structure has
-            # a match() member.
-            #
-            CODE="
-            #include <linux/acpi.h>
-            int conftest_acpi_device_ops(void) {
-                return offsetof(struct acpi_device_ops, match);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_OPS_HAS_MATCH" "" "types"
-        ;;
-
-        acpi_op_remove)
-            #
-            # Determine the number of arguments to pass to the
-            # 'acpi_op_remove' routine.
-            #
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-
-            acpi_op_remove conftest_op_remove_routine;
-
-            int conftest_acpi_device_ops_remove(struct acpi_device *device) {
-                return conftest_op_remove_routine(device);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT 1" | append_conftest "types"
-                return
-            fi
-
-            CODE="
-            #include <linux/acpi.h>
-
-            acpi_op_remove conftest_op_remove_routine;
-
-            int conftest_acpi_device_ops_remove(struct acpi_device *device, int type) {
-                return conftest_op_remove_routine(device, type);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT" "2" "types"
-        ;;
-
-        acpi_device_id)
-            #
-            # Determine if the 'acpi_device_id' structure has 
-            # a 'driver_data' member.
-            #
-            CODE="
-            #include <linux/acpi.h>
-            int conftest_acpi_device_id(void) {
-                return offsetof(struct acpi_device_id, driver_data);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_ID_HAS_DRIVER_DATA" "" "types"
-        ;;
-
-        acquire_console_sem)
-            #
-            # Determine if the acquire_console_sem() function
-            # is present.
-            #
-            CODE="
-            #include <linux/console.h>
-            void conftest_acquire_console_sem(void) {
-                acquire_console_sem(NULL);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACQUIRE_CONSOLE_SEM_PRESENT" "" "functions"
-        ;;
-
-        console_lock)
-            #
-            # Determine if the console_lock() function is present.
-            #
-            CODE="
-            #include <linux/console.h>
-            void conftest_console_lock(void) {
-                console_lock(NULL);
-            }"
-
-            compile_check_conftest "$CODE" "NV_CONSOLE_LOCK_PRESENT" "" "functions"
-        ;;
-
-        kmem_cache_create)
-            #
-            # Determine if the kmem_cache_create() function is
-            # present and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/slab.h>
-            void conftest_kmem_cache_create(void) {
-                kmem_cache_create();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/slab.h>
-            void conftest_kmem_cache_create(void) {
-                kmem_cache_create(NULL, 0, 0, 0L, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
-                echo "#define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 6" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/slab.h>
-            void conftest_kmem_cache_create(void) {
-                kmem_cache_create(NULL, 0, 0, 0L, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
-                echo "#define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 5" | append_conftest "functions"
-                return
-            else
-                echo "#error kmem_cache_create() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        smp_call_function)
-            #
-            # Determine if the smp_call_function() function is
-            # present and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_smp_call_function(void) {
-            #ifdef CONFIG_SMP
-                smp_call_function();
-            #endif
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_smp_call_function(void) {
-                smp_call_function(NULL, NULL, 0, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
-                echo "#define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 4" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_smp_call_function(void) {
-                smp_call_function(NULL, NULL, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
-                echo "#define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 3" | append_conftest "functions"
-                return
-            else
-                echo "#error smp_call_function() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        on_each_cpu)
-            #
-            # Determine if the on_each_cpu() function is present
-            # and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_on_each_cpu(void) {
-            #ifdef CONFIG_SMP
-                on_each_cpu();
-            #endif
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_on_each_cpu(void) {
-                on_each_cpu(NULL, NULL, 0, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
-                echo "#define NV_ON_EACH_CPU_ARGUMENT_COUNT 4" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_on_each_cpu(void) {
-                on_each_cpu(NULL, NULL, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
-                echo "#define NV_ON_EACH_CPU_ARGUMENT_COUNT 3" | append_conftest "functions"
-                return
-            else
-                echo "#error on_each_cpu() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        nvmap_support)
-            # check if nvmap is supported.
-            if [ -f nv-android.h ]; then
-                echo "#define HAVE_NV_ANDROID" | append_conftest "generic"
-                return
-            else
-                echo "#undef HAVE_NV_ANDROID" | append_conftest "generic"
-            fi
-        ;;
-
-        acpi_evaluate_integer)
-            #
-            # Determine if the acpi_evaluate_integer() function is
-            # present and the type of its 'data' argument.
-            #
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            acpi_status acpi_evaluate_integer(acpi_handle h, acpi_string s,
-                struct acpi_object_list *l, unsigned long long *d) {
-                return AE_OK;
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
-                echo "typedef unsigned long long nv_acpi_integer_t;" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            acpi_status acpi_evaluate_integer(acpi_handle h, acpi_string s,
-                struct acpi_object_list *l, unsigned long *d) {
-                return AE_OK;
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
-                echo "typedef unsigned long nv_acpi_integer_t;" | append_conftest "functions"
-                return
-            else
-                #
-                # We can't report a compile test failure here because
-                # this is a catch-all for both kernels that don't
-                # have acpi_evaluate_integer() and kernels that have
-                # broken header files that make it impossible to
-                # tell if the function is present.
-                #
-                echo "#undef NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
-                echo "typedef unsigned long nv_acpi_integer_t;" | append_conftest "functions"
-            fi
-        ;;
-
-        acpi_walk_namespace)
-            #
-            # Determine if the acpi_walk_namespace() function is present
-            # and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            void conftest_acpi_walk_namespace(void) {
-                acpi_walk_namespace();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            void conftest_acpi_walk_namespace(void) {
-                acpi_walk_namespace(0, NULL, 0, NULL, NULL, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
-                echo "#define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 7" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            void conftest_acpi_walk_namespace(void) {
-                acpi_walk_namespace(0, NULL, 0, NULL, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
-                echo "#define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 6" | append_conftest "functions"
-                return
-            else
-                echo "#error acpi_walk_namespace() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        ioremap_cache)
-            #
-            # Determine if the ioremap_cache() function is present.
-            #
-            CODE="
-            #include <asm/io.h>
-            void conftest_ioremap_cache(void) {
-                ioremap_cache();
-            }"
-
-            compile_check_conftest "$CODE" "NV_IOREMAP_CACHE_PRESENT" "" "functions"
-        ;;
-
-        ioremap_wc)
-            #
-            # Determine if the ioremap_wc() function is present.
-            #
-            CODE="
-            #include <asm/io.h>
-            void conftest_ioremap_wc(void) {
-                ioremap_wc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_IOREMAP_WC_PRESENT" "" "functions"
-        ;;
-
-        proc_dir_entry)
-            #
-            # Determine if the 'proc_dir_entry' structure has 
-            # an 'owner' member.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            int conftest_proc_dir_entry(void) {
-                return offsetof(struct proc_dir_entry, owner);
-            }"
-
-            compile_check_conftest "$CODE" "NV_PROC_DIR_ENTRY_HAS_OWNER" "" "types"
-        ;;
-
-      INIT_WORK)
-            #
-            # Determine how many arguments the INIT_WORK() macro
-            # takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/workqueue.h>
-            void conftest_INIT_WORK(void) {
-                INIT_WORK();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_INIT_WORK_PRESENT" | append_conftest "macros"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/workqueue.h>
-            void conftest_INIT_WORK(void) {
-                INIT_WORK((struct work_struct *)NULL, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_INIT_WORK_PRESENT" | append_conftest "macros"
-                echo "#define NV_INIT_WORK_ARGUMENT_COUNT 3" | append_conftest "macros"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/workqueue.h>
-            void conftest_INIT_WORK(void) {
-                INIT_WORK((struct work_struct *)NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_INIT_WORK_PRESENT" | append_conftest "macros"
-                echo "#define NV_INIT_WORK_ARGUMENT_COUNT 2" | append_conftest "macros"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error INIT_WORK() conftest failed!" | append_conftest "macros"
-                return
-            fi
-        ;;
-
-      pci_dma_mapping_error)
-            #
-            # Determine how many arguments pci_dma_mapping_error()
-            # takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pci.h>
-            int conftest_pci_dma_mapping_error(void) {
-                return pci_dma_mapping_error(NULL, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_PRESENT" | append_conftest "functions"
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 2" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pci.h>
-            int conftest_pci_dma_mapping_error(void) {
-                return pci_dma_mapping_error(0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_PRESENT" | append_conftest "functions"
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 1" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error pci_dma_mapping_error() conftest failed!" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        scatterlist)
-            #
-            # Determine if the 'scatterlist' structure has
-            # a 'page_link' member.
-            #
-            CODE="
-            #include <linux/types.h>
-            #include <linux/scatterlist.h>
-            int conftest_scatterlist(void) {
-                return offsetof(struct scatterlist, page_link);
-            }"
-
-            compile_check_conftest "$CODE" "NV_SCATTERLIST_HAS_PAGE_LINK" "" "types"
-        ;;
-
-        pci_domain_nr)
-            #
-            # Determine if the pci_domain_nr() function is present.
-            #
-            CODE="
-            #include <linux/types.h>
-            #include <linux/pci.h>
-            int conftest_pci_domain_nr(struct pci_dev *dev) {
-                return pci_domain_nr();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_DOMAIN_NR_PRESENT" "" "functions"
-        ;;
-
-        file_operations)
-            #
-            # Determine if the 'file_operations' structure has
-            # 'ioctl', 'unlocked_ioctl' and 'compat_ioctl' fields.
-            #
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_operations(void) {
-                return offsetof(struct file_operations, ioctl);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_IOCTL" "" "types"
-
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_operations(void) {
-                return offsetof(struct file_operations, unlocked_ioctl);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_UNLOCKED_IOCTL" "" "types"
-
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_operations(void) {
-                return offsetof(struct file_operations, compat_ioctl);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_COMPAT_IOCTL" "" "types"
-        ;;
-
-        sg_init_table)
-            #
-            # Determine if the sg_init_table() function is present.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/scatterlist.h>
-            void conftest_sg_init_table(struct scatterlist *sgl,
-                    unsigned int nents) {
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ ! -f conftest$$.o ]; then
-                echo "#undef NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
-                return
-
-            fi
-            rm -f conftest$$.o
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/types.h>
-            #include <linux/scatterlist.h>
-            void conftest_sg_init_table(struct scatterlist *sgl,
-                    unsigned int nents) {
-                sg_init_table();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#define NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        sg_table)
-            #
-            # Determine if the struct sg_table type is present.
-            #
-            CODE="
-            #include <linux/scatterlist.h>
-            struct sg_table conftest_sg_table;
-            "
-
-            compile_check_conftest "$CODE" "NV_SG_TABLE_PRESENT" "" "types"
-        ;;
-
-        sg_alloc_table)
-            #
-            # Determine if include/linux/scatterlist.h exists and which table
-            # allocation functions are present if so.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/scatterlist.h>
-            int conftest_sg_alloc_table(void) {
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ ! -f conftest$$.o ]; then
-                echo "#undef NV_SG_ALLOC_TABLE_PRESENT" | append_conftest "functions"
-                echo "#undef NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" | append_conftest "functions"
-                return
-            fi
-            
-            rm -f conftest$$.o
-
-            CODE="
-            #include <linux/scatterlist.h>
-            int conftest_sg_alloc_table(void) {
-                sg_alloc_table();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SG_ALLOC_TABLE_PRESENT" "" "functions"
-
-            CODE="
-            #include <linux/scatterlist.h>
-            void conftest_sg_alloc_table_from_pages(void) {
-                sg_alloc_table_from_pages();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" "" "functions"
-        ;;
-
-        efi_enabled)
-            #
-            # Determine if the efi_enabled symbol is present, or if
-            # the efi_enabled() function is present and how many
-            # arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
-            #endif
-            int conftest_efi_enabled(void) {
-                return efi_enabled();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_EFI_ENABLED_PRESENT" | append_conftest "symbols"
-                echo "#undef NV_EFI_ENABLED_PRESENT" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
-            #endif
-            int conftest_efi_enabled(void) {
-                return efi_enabled(0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_EFI_ENABLED_PRESENT" | append_conftest "functions"
-                echo "#define NV_EFI_ENABLED_ARGUMENT_COUNT 1" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#define NV_EFI_ENABLED_PRESENT" | append_conftest "symbols"
-                return
-            fi
-        ;;
-
-        dom0_kernel_present)
-            #
-            # Add config parameter if running on DOM0.
-            #
-            if [ -n "$VGX_BUILD" ]; then
-                echo "#define NV_DOM0_KERNEL_PRESENT" | append_conftest "generic"
-            else
-                echo "#undef NV_DOM0_KERNEL_PRESENT" | append_conftest "generic"
-            fi
-            return
-        ;;
-
-        drm_available)
-            #
-            # Determine if the DRM subsystem is usable
-            #
-            CODE="
-            #if defined(NV_DRM_DRMP_H_PRESENT)
-            #include <drm/drmP.h>
-            #endif
-            #if !defined(CONFIG_DRM) && !defined(CONFIG_DRM_MODULE)
-            #error DRM not enabled
-            #endif
-            void conftest_drm_available(void) {
-                struct drm_driver drv;
-                drv.gem_prime_pin = 0;
-                drv.gem_prime_get_sg_table = 0;
-                drv.gem_prime_vmap = 0;
-                drv.gem_prime_vunmap = 0;
-                (void)drm_gem_prime_import;
-                (void)drm_gem_prime_export;
-            }"
-
-            compile_check_conftest "$CODE" "NV_DRM_AVAILABLE" "" "generic"
-        ;;
-
-        proc_create_data)
-            #
-            # Determine if the proc_create_data() function is present.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            void conftest_proc_create_data(void) {
-                proc_create_data();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PROC_CREATE_DATA_PRESENT" "" "functions"
-        ;;
-
-
-        pde_data)
-            #
-            # Determine if the PDE_DATA() function is present.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            void conftest_PDE_DATA(void) {
-                PDE_DATA();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PDE_DATA_PRESENT" "" "functions"
-        ;;
-
-        get_num_physpages)
-            #
-            # Determine if the get_num_physpages() function is
-            # present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_get_num_physpages(void) {
-                get_num_physpages(NULL);
-            }"
-
-            compile_check_conftest "$CODE" "NV_GET_NUM_PHYSPAGES_PRESENT" "" "functions"
-        ;;
-
-        proc_remove)
-            #
-            # Determine if the proc_remove() function is present.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            void conftest_proc_remove(void) {
-                proc_remove();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PROC_REMOVE_PRESENT" "" "functions"
-        ;;
-
-        vm_operations_struct)
-            #
-            # Determine if the 'vm_operations_struct' structure has
-            # a 'fault' field.
-            #
-            CODE="
-            #include <linux/mm.h>
-            int conftest_vm_operations_struct(void) {
-                return offsetof(struct vm_operations_struct, fault);
-            }"
-
-            compile_check_conftest "$CODE" "NV_VM_OPERATIONS_STRUCT_HAS_FAULT" "" "types"
-        ;;
-
-        task_struct)
-            #
-            # Determine if the 'task_struct' structure has
-            # a 'cred' field.
-            #
-            CODE="
-            #include <linux/sched.h>
-            int conftest_task_struct(void) {
-                return offsetof(struct task_struct, cred);
-            }"
-
-            compile_check_conftest "$CODE" "NV_TASK_STRUCT_HAS_CRED" "" "types"
-        ;;
-
-        address_space)
-            #
-            # Determine if the 'address_space' structure has
-            # a 'tree_lock' field of type rwlock_t.
-            #
-            CODE="
-            #include <linux/fs.h>
-            int conftest_address_space(void) {
-                struct address_space as;
-                rwlock_init(&as.tree_lock);
-                return offsetof(struct address_space, tree_lock);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ADDRESS_SPACE_HAS_RWLOCK_TREE_LOCK" "" "types"
-        ;;
-
-        address_space_init_once)
-            #
-            # Determine if address_space_init_once is present.
-            #
-            CODE="
-            #include <linux/fs.h>
-            void conftest_address_space_init_once(void) {
-                address_space_init_once();
-            }"
-
-            compile_check_conftest "$CODE" "NV_ADDRESS_SPACE_INIT_ONCE_PRESENT" "" "functions"
-        ;;
-
-        kbasename)
-            #
-            # Determine if the kbasename() function is present.
-            #
-            CODE="
-            #include <linux/string.h>
-            void conftest_kbasename(void) {
-                kbasename();
-            }"
-
-            compile_check_conftest "$CODE" "NV_KBASENAME_PRESENT" "" "functions"
-        ;;
-
-        fatal_signal_pending)
-            #
-            # Determine if fatal_signal_pending is present.
-            #
-            CODE="
-            #include <linux/sched.h>
-            void conftest_fatal_signal_pending(void) {
-                fatal_signal_pending();
-            }"
-
-            compile_check_conftest "$CODE" "NV_FATAL_SIGNAL_PENDING_PRESENT" "" "functions"
-        ;;
-
-        kuid_t)
-            #
-            # Determine if the 'kuid_t' type is present.
-            #
-            CODE="
-            #include <linux/sched.h>
-            kuid_t conftest_kuid_t;
-            "
-
-            compile_check_conftest "$CODE" "NV_KUID_T_PRESENT" "" "types"
-        ;;
-
-        pm_vt_switch_required)
-            #
-            # Determine if the pm_vt_switch_required() function is present.
-            #
-            CODE="
-            #include <linux/pm.h>
-            void conftest_pm_vt_switch_required(void) {
-                pm_vt_switch_required();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PM_VT_SWITCH_REQUIRED_PRESENT" "" "functions"
-        ;;
-
-        file_inode)
-            #
-            # Determine if the 'file' structure has
-            # a 'f_inode' field.
-            #
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_inode(void) {
-                return offsetof(struct file, f_inode);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_HAS_INODE" "" "types"
-        ;;
-
-        drm_pci_set_busid)
-            #
-            # Determine if the drm_pci_set_busid function is present.
-            #
-            CODE="
-            #if defined(NV_DRM_DRMP_H_PRESENT)
-            #include <drm/drmP.h>
-            #endif
-            void conftest_drm_pci_set_busid(void) {
-                drm_pci_set_busid();
-            }"
-
-            compile_check_conftest "$CODE" "NV_DRM_PCI_SET_BUSID_PRESENT" "" "functions"
-        ;;
-
-        write_cr4)
-            #
-            # Determine if the write_cr4() function is present.
-            #
-            CODE="
-            #include <asm/processor.h>
-            void conftest_write_cr4(void) {
-                write_cr4();
-            }"
-
-            compile_check_conftest "$CODE" "NV_WRITE_CR4_PRESENT" "" "functions"
-        ;;
-
-        for_each_online_node)
-            #
-            # Determine if the for_each_online_node() function is present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_for_each_online_node() {
-                for_each_online_node();
-            }"
-
-            compile_check_conftest "$CODE" "NV_FOR_EACH_ONLINE_NODE_PRESENT" "" "functions"
-        ;;
-
-        node_end_pfn)
-            #
-            # Determine if the node_end_pfn() function is present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_node_end_pfn() {
-                node_end_pfn();
-            }"
-
-            compile_check_conftest "$CODE" "NV_NODE_END_PFN_PRESENT" "" "functions"
-        ;;
-    esac
-}
-
-create_skeleton_headers
-build_cflags
-
-case "$6" in
-    cc_sanity_check)
-        #
-        # Check if the selected compiler can create object files
-        # in the current environment.
-        #
-        VERBOSE=$7
-
-        echo "int cc_sanity_check(void) {
-            return 0;
-        }" > conftest$$.c
-
-        $CC -c conftest$$.c > /dev/null 2>&1
-        rm -f conftest$$.c
-
-        if [ ! -f conftest$$.o ]; then
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "";
-            fi
-            if [ "$CC" != "cc" ]; then
-                echo "The C compiler '$CC' does not appear to be able to"
-                echo "create object files.  Please make sure you have "
-                echo "your Linux distribution's libc development package"
-                echo "installed and that '$CC' is a valid C compiler";
-                echo "name."
-            else
-                echo "The C compiler '$CC' does not appear to be able to"
-                echo "create executables.  Please make sure you have "
-                echo "your Linux distribution's gcc and libc development"
-                echo "packages installed."
-            fi
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "";
-                echo "*** Failed CC sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            rm -f conftest$$.o
-            exit 0
-        fi
-    ;;
-
-    cc_version_check)
-        #
-        # Verify that the same compiler is used for the kernel and kernel
-        # module.
-        #
-        VERBOSE=$7
-        
-        if [ ! -f gcc-version-check.c ]; then
-          #
-          # gcc-version-check.c is not in the current working directory.
-          # This can happen when building the kernel module from an
-          # NVIDIA-internal intermediate directory prior to creating an
-          # NVIDIA driver package.  Since the version check below is less
-          # useful than it used to be, just silently skip the test if
-          # gcc-version-check.c is missing.
-          #
-          IGNORE_CC_MISMATCH=1
-        fi
-
-        if [ -n "$IGNORE_CC_MISMATCH" -o -n "$SYSSRC" -o -n "$SYSINCLUDE" ]; then
-          #
-          # The user chose to disable the CC version test (which may or
-          # may not be wise) or is building the module for a kernel not
-          # currently running, which renders the test meaningless.
-          #
-          exit 0
-        fi
-
-        rm -f gcc-version-check
-        $HOSTCC gcc-version-check.c -o gcc-version-check > /dev/null 2>&1
-        if [ ! -f gcc-version-check ]; then
-            if [ "$CC" != "cc" ]; then
-                MSG="Could not compile 'gcc-version-check.c'.  Please be "
-                MSG="$MSG sure you have your Linux distribution's libc "
-                MSG="$MSG development package installed and that '$CC' "
-                MSG="$MSG is a valid C compiler name."
-            else
-                MSG="Could not compile 'gcc-version-check.c'.  Please be "
-                MSG="$MSG sure you have your Linux distribution's gcc "
-                MSG="$MSG and libc development packages installed."
-            fi
-            RET=1
-        else
-            PROC_VERSION="/proc/version"
-            if [ -f $PROC_VERSION ]; then
-                MSG=`./gcc-version-check "$(cat $PROC_VERSION)"`
-                RET=$?
-            else
-                MSG="$PROC_VERSION does not exist."
-                RET=1
-            fi
-            rm -f gcc-version-check
-        fi
-
-        if [ "$RET" != "0" ]; then
-            #
-            # The gcc version check failed
-            #
-            
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "";
-                echo "gcc-version-check failed:";
-                echo "";
-                echo "$MSG" | fmt -w 52
-                echo "";
-                echo "If you know what you are doing and want to override";
-                echo "the gcc version check, you can do so by setting the";
-                echo "IGNORE_CC_MISMATCH environment variable to \"1\".";
-                echo "";
-                echo "In any other case, set the CC environment variable";
-                echo "to the name of the compiler that was used to compile";
-                echo "the kernel.";
-                echo ""
-                echo "*** Failed CC version check. Bailing out! ***";
-                echo "";
-            else
-                echo "$MSG";
-            fi
-            exit 1;
-        else
-            exit 0
-        fi
-    ;;
-
-    suser_sanity_check)
-        #
-        # Determine the caller's user id to determine if we have sufficient
-        # privileges for the requested operation.
-        #
-        if [ $(id -ur) != 0 ]; then
-            echo "";
-            echo "Please run \"make install\" as root.";
-            echo "";
-            echo "*** Failed super-user sanity check. Bailing out! ***";
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    rmmod_sanity_check)
-        #
-        # Make sure that any currently loaded NVIDIA kernel module can be
-        # unloaded.
-        #
-        MODULE="nvidia"
-
-        if [ -n "$SYSSRC" -o -n "$SYSINCLUDE" ]; then
-          #
-          # Don't attempt to remove the kernel module if we're not
-          # building against the running kernel.
-          #
-          exit 0
-        fi
-
-        if lsmod | grep -wq $MODULE; then
-          rmmod $MODULE > /dev/null 2>&1
-        fi
-
-        if lsmod | grep -wq $MODULE; then
-            #
-            # The NVIDIA kernel module is still loaded, most likely because
-            # it is busy.
-            #
-            echo "";
-            echo "Unable to remove existing NVIDIA kernel module.";
-            echo "Please be sure you have exited X before attempting";
-            echo "to install the NVIDIA kernel module.";
-            echo "";
-            echo "*** Failed rmmod sanity check. Bailing out! ***";
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    get_uname)
-        #
-        # Print UTS_RELEASE from the kernel sources, if the kernel header
-        # file ../linux/version.h or ../linux/utsrelease.h exists. If
-        # neither header file is found, but a Makefile is found, extract
-        # PATCHLEVEL and SUBLEVEL, and use them to build the kernel
-        # release name.
-        #
-        # If no source file is found, or if an error occurred, return the
-        # output of `uname -r`.
-        #
-        RET=1
-        DIRS="generated linux"
-        FILE=""
-        
-        for DIR in $DIRS; do
-            if [ -f $HEADERS/$DIR/utsrelease.h ]; then
-                FILE="$HEADERS/$DIR/utsrelease.h"
-                break
-            elif [ -f $OUTPUT/include/$DIR/utsrelease.h ]; then
-                FILE="$OUTPUT/include/$DIR/utsrelease.h"
-                break
-            fi
-        done
-
-        if [ -z "$FILE" ]; then
-            if [ -f $HEADERS/linux/version.h ]; then
-                FILE="$HEADERS/linux/version.h"
-            elif [ -f $OUTPUT/include/linux/version.h ]; then
-                FILE="$OUTPUT/include/linux/version.h"
-            fi
-        fi
-
-        if [ -n "$FILE" ]; then
-            #
-            # We are either looking at a configured kernel source tree
-            # or at headers shipped for a specific kernel.  Determine
-            # the kernel version using a CPP check.
-            #
-            VERSION=`echo "UTS_RELEASE" | $CC - -E -P -include $FILE 2>&1`
-
-            if [ "$?" = "0" -a "VERSION" != "UTS_RELEASE" ]; then
-                echo "$VERSION"
-                RET=0
-            fi
-        else
-            #
-            # If none of the kernel headers ar found, but a Makefile is,
-            # extract PATCHLEVEL and SUBLEVEL and use them to find
-            # the kernel version.
-            #
-            MAKEFILE=$HEADERS/../Makefile
-
-            if [ -f $MAKEFILE ]; then
-                #
-                # This source tree is not configured, but includes
-                # the top-level Makefile.
-                #
-                PATCHLEVEL=$(grep "^PATCHLEVEL =" $MAKEFILE | cut -d " " -f 3)
-                SUBLEVEL=$(grep "^SUBLEVEL =" $MAKEFILE | cut -d " " -f 3)
-
-                if [ -n "$PATCHLEVEL" -a -n "$SUBLEVEL" ]; then
-                    echo 2.$PATCHLEVEL.$SUBLEVEL
-                    RET=0
-                fi
-            fi
-        fi
-
-        if [ "$RET" != "0" ]; then
-            uname -r
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    rivafb_sanity_check)
-        #
-        # Check if the kernel was compiled with rivafb support. If so, then
-        # exit, since the driver no longer works with rivafb.
-        #
-
-        if test_configuration_option CONFIG_FB_RIVA; then
-            echo "Your kernel was configured to include rivafb support!";
-            echo "";
-            echo "The rivafb driver conflicts with the NVIDIA driver, please";
-            echo "reconfigure your kernel and *disable* rivafb support, then";
-            echo "try installing the NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed rivafb sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    nvidiafb_sanity_check)
-        #
-        # Check if the kernel was compiled with nvidiafb support. If so, then
-        # exit, since the driver doesn't work with nvidiafb.
-        #
-
-        if test_configuration_option CONFIG_FB_NVIDIA; then
-            echo "Your kernel was configured to include nvidiafb support!";
-            echo "";
-            echo "The nvidiafb driver conflicts with the NVIDIA driver, please";
-            echo "reconfigure your kernel and *disable* nvidiafb support, then";
-            echo "try installing the NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed nvidiafb sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    xen_sanity_check)
-        #
-        # Check if the target kernel is a Xen kernel. If so, exit, since
-        # the RM doesn't currently support Xen.
-        #
-        VERBOSE=$7
-
-        if [ -n "$IGNORE_XEN_PRESENCE" -o -n "$VGX_BUILD" ]; then
-            exit 0
-        fi
-
-        if [ "$XEN_PRESENT" != "0" ]; then
-            echo "The kernel you are installing for is a Xen kernel!";
-            echo "";
-            echo "The NVIDIA driver does not currently support Xen kernels. If ";
-            echo "you are using a stock distribution kernel, please install ";
-            echo "a variant of this kernel without Xen support; if this is a ";
-            echo "custom kernel, please install a standard Linux kernel.  Then ";
-            echo "try installing the NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed Xen sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    preempt_rt_sanity_check)
-        #
-        # Check if the target kernel has the PREEMPT_RT patch set applied. If
-        # so, exit, since the RM doesn't support this configuration.
-        #
-        VERBOSE=$7
-
-        if [ -n "$IGNORE_PREEMPT_RT_PRESENCE" ]; then
-            exit 0
-        fi
-
-        if test_configuration_option CONFIG_PREEMPT_RT; then
-            PREEMPT_RT_PRESENT=1
-        elif test_configuration_option CONFIG_PREEMPT_RT_FULL; then
-            PREEMPT_RT_PRESENT=1
-        fi
-
-        if [ "$PREEMPT_RT_PRESENT" != "0" ]; then
-            echo "The kernel you are installing for is a PREEMPT_RT kernel!";
-            echo "";
-            echo "The NVIDIA driver does not support real-time kernels. If you ";
-            echo "are using a stock distribution kernel, please install ";
-            echo "a variant of this kernel that does not have the PREEMPT_RT ";
-            echo "patch set applied; if this is a custom kernel, please ";
-            echo "install a standard Linux kernel.  Then try installing the ";
-            echo "NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed PREEMPT_RT sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    patch_check)
-        #
-        # Check for any "official" patches that may have been applied and
-        # construct a description table for reporting purposes.
-        #
-        PATCHES=""
-
-        for PATCH in patch-*.h; do
-            if [ -f $PATCH ]; then
-                echo "#include \"$PATCH\"" | append_conftest "patches"
-                PATCHES="$PATCHES "`echo $PATCH | sed -s 's/patch-\(.*\)\.h/\1/'`
-            fi
-        done
-
-        echo "static struct {
-                const char *short_description;
-                const char *description;
-              } __nv_patches[] = {" | append_conftest "patches"
-            for i in $PATCHES; do
-                echo "{ \"$i\", NV_PATCH_${i}_DESCRIPTION }," | \
-                append_conftest "patches"
-            done
-        echo "{ NULL, NULL } };" | append_conftest "patches"
-
-        update_conftest "patches"
-
-        exit 0
-    ;;
-
-    compile_tests)
-        #
-        # Run a series of compile tests to determine the set of interfaces
-        # and features available in the target kernel.
-        #
-        shift 5
-
-        test_headers
-
-        for i in $*; do compile_test $i; done
-
-        if [ -n "$SHOW_COMPILE_TEST_RESULTS" -a -f conftest.h ]; then
-            cat conftest.h conftest/*.h
-        fi
-
-        for header in $COMPILE_TEST_HEADERS; do
-            update_conftest "$header"
-        done
-
-        exit 0
-    ;;
-
-    dom0_sanity_check)
-        #
-        # Determine whether running in DOM0.
-        #
-        VERBOSE=$7
-
-        if [ -n "$VGX_BUILD" ]; then
-            if [ -f /proc/xen/capabilities ]; then
-                if [ "`cat /proc/xen/capabilities`" == "control_d" ]; then
-                    exit 0
-                fi
-            else
-                echo "The kernel is not running in DOM0.";
-                echo "";
-                if [ "$VERBOSE" = "full_output" ]; then
-                    echo "*** Failed DOM0 sanity check. Bailing out! ***";
-                    echo "";
-                fi
-            fi
-            exit 1
-        fi
-    ;;
-
-    test_configuration_option)
-        #
-        # Check to see if the given config option is set.
-        #
-        OPTION=$7
-
-        test_configuration_option $OPTION
-        exit $?
-    ;;
-
-    get_configuration_option)
-        #
-        # Get the value of the given config option.
-        #
-        OPTION=$7
-
-        get_configuration_option $OPTION
-        exit $?
-    ;;
-
-
-    guess_module_signing_hash)
-        #
-        # Determine the best cryptographic hash to use for module signing,
-        # to the extent that is possible.
-        #
-
-        HASH=$(get_configuration_option CONFIG_MODULE_SIG_HASH)
-
-        if [ $? -eq 0 ] && [ -n $HASH ]; then
-            echo $HASH
-            exit 0
-        else
-            for SHA in 512 384 256 224 1; do
-                if test_configuration_option CONFIG_MODULE_SIG_SHA$SHA; then
-                    echo sha$SHA
-                    exit 0
-                fi
-            done
-        fi
-        exit 1
-    ;;
-
-esac
+# We have a new conftest.h that works with kbuild that we don't want
+# overwritten or generated or anything else, so we want any call to
+# conftest.sh to do absolutely nothing.
+exit 0
diff -uNr kernel.org/debian/bug-control kernel/debian/bug-control
--- kernel.org/debian/bug-control	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/bug-control	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,4 @@
+report-with: nvidia-driver nvidia-glx libgl1-nvidia-glx xserver-xorg-video-nvidia nvidia-alternative nvidia-kernel-dkms nvidia-kernel-source glx-alternative-nvidia xserver-xorg-video-intel
+
+package-status: nvidia-driver nvidia-glx nvidia-kernel-dkms nvidia-kernel-source nvidia-kernel-support-any nvidia-glx-any libgl1-nvidia-glx-any libgl1-nvidia-glx-ia32-any libgl1-nvidia-glx-ia32 libgl1-nvidia-legacy-173xx-glx-ia32 libgl1-nvidia-legacy-96xx-glx-ia32 libgl1-nvidia-alternatives-ia32 xserver-xorg-video-nvidia-any libcuda1 libcuda1-any nvidia-settings nvidia-xconfig nvidia-support nvidia-kernel-common nvidia-modprobe xserver-xorg xserver-xorg-core linux-headers libdrm-nouveau1 libdrm-nouveau1a libdrm-nouveau2 xserver-xorg-video-nouveau ia32-libs make
+Submit-As: nvidia-kernel-source
diff -uNr kernel.org/debian/bug-script kernel/debian/bug-script
--- kernel.org/debian/bug-script	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/bug-script	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,130 @@
+#!/bin/sh
+
+PATH=/sbin:$PATH
+
+export LC_ALL=C
+
+exec >&3
+
+echo "uname -a:"
+uname -a
+echo
+
+echo "/proc/version:"
+cat /proc/version
+echo
+
+if [ -e /proc/driver/nvidia/version ]; then
+	echo "/proc/driver/nvidia/version:"
+	cat /proc/driver/nvidia/version
+	echo
+fi
+
+if (lspci --version) > /dev/null 2>&1; then
+  	echo "lspci 'VGA compatible controller [0300]':"
+	for device in `lspci -mn | awk '{ if ($2 == "\"0300\"") { print $1 } }'`; do
+		LC_ALL=C lspci -vvnn -s $device
+	done
+fi
+
+if [ -x /bin/dmesg ]; then
+	echo "dmesg:"
+	dmesg | grep -iE 'nvidia|nvrm|agp|vga'
+	echo
+fi
+
+echo "Device node permissions:"
+ls -l /dev/dri/* /dev/nvidia* 2>/dev/null
+getent group video
+echo
+
+echo "OpenGL and NVIDIA library files installed:"
+ls -l	/etc/alternatives/glx* \
+	/etc/alternatives/nvidia* \
+	/etc/alternatives/*libGL* \
+	/etc/alternatives/*_gl_conf \
+	/etc/ld.so.conf.d/*_GL.conf \
+	/etc/X11/*.conf \
+	/usr/lib/libEGL.* \
+	/usr/lib/libGL.* \
+	/usr/lib/libGLES*.* \
+	/usr/lib/libGLcore* \
+	/usr/lib/libcuda* \
+	/usr/lib/libnvidia* \
+	/usr/lib/*-linux-gnu*/libEGL.* \
+	/usr/lib/*-linux-gnu*/libGL.* \
+	/usr/lib/*-linux-gnu*/libGLES*.* \
+	/usr/lib/*-linux-gnu*/libGLcore* \
+	/usr/lib/*-linux-gnu*/libcuda* \
+	/usr/lib/*-linux-gnu*/libnvidia* \
+	/usr/lib32/libGL.* \
+	/usr/lib32/libGLcore* \
+	/usr/lib32/libnvidia* \
+	/usr/lib/xorg/modules/*glx* \
+	/usr/lib/xorg/modules/*/*glx* \
+	/usr/lib/xorg/modules/*nvidia* \
+	/usr/lib/xorg/modules/*/*nvidia* \
+	/var/log/Xorg.*.log* \
+	2>/dev/null
+
+ls -la	\
+	/etc/nvidia/ \
+	/usr/lib/nvidia/ \
+	/usr/lib/nvidia/*/ \
+	/usr/lib/*-linux-gnu*/nvidia/ \
+	/usr/lib/*-linux-gnu*/nvidia/*/ \
+	/usr/lib/mesa/ \
+	/usr/lib/*-linux-gnu*/mesa/ \
+	/usr/lib/mesa-diverted/ \
+	/usr/lib/mesa-diverted/*-linux-gnu*/ \
+	/usr/lib32/nvidia/ \
+	/usr/lib32/nvidia/diversions/ \
+	/etc/X11/xorg.conf.d/ \
+	2>/dev/null
+echo
+
+echo "/etc/modprobe.d:"
+ls -la /etc/modprobe.d/
+echo
+grep -ri nvidia /etc/modprobe.d/
+grep -ri nouveau /etc/modprobe.d/
+echo
+
+echo "/etc/modules-load.d:"
+ls -la /etc/modules /etc/modules-load.d/ 2>&1
+echo
+grep -ri nvidia /etc/modules /etc/modules-load.d/ 2>/dev/null
+grep -ri nouveau /etc/modules /etc/modules-load.d/ 2>/dev/null
+echo
+
+echo "Files from nvidia-installer:"
+ls -la /usr/bin/nvidia-installer /usr/bin/nvidia-uninstall /var/lib/nvidia 2>/dev/null
+echo
+
+echo "Config and logfiles:"
+echo
+for file in /etc/modprobe.d/*nvidia*.conf /etc/X11/xorg.conf /etc/X11/xorg.conf.d/*.conf $(ls -dt /var/log/Xorg.*.log* 2>/dev/null | head -n 2)
+do
+	if [ -f "$file" ] && [ -r "$file" ]; then
+		echo "<<<<<<<<<< $file >>>>>>>>>>"
+		cat "$file"
+		echo "^^^^^^^^^^ $file ^^^^^^^^^^"
+		echo
+	fi
+done
+
+echo "Kernel modules: nvidia.ko"
+find /lib/modules -name "nvidia*.ko"
+echo
+find /lib/modules -name "nvidia*.ko" | xargs -r modinfo | grep -v ^parm:
+echo
+
+echo "lsmod:"
+lsmod
+echo
+
+echo "xrandr:"
+test ! -x /usr/bin/xrandr || xrandr 2>&1
+echo
+
+exit 0
diff -uNr kernel.org/debian/changelog kernel/debian/changelog
--- kernel.org/debian/changelog	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/changelog	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,5323 @@
+nvidia-kernel (340.96-1) jessie; urgency=medium
+
+  * New upstream legacy 340xx branch release 340.96 (2015-11-16).
+    * Fixed CVE-2015-7869: Unsanitized User Mode Input.  (Closes: #805917)
+  * Merge changes from 304.131-1.
+  * Add xorg-video-abi-20 as alternative dependency.
+  * conftest.h:
+    - Implement new conftest.sh functions hlist_for_each_entry,
+      of_parse_phandle, for_each_online_node, node_end_pfn (358.09).
+    - Update conftest.sh function scatterlist for logic reversal in
+      304.131/340.96/352.63, support both ways.
+  * d/rules: Move tar option --no-recursion before the list of files.
+  * d/control: Make dependencies on nvidia-alternative strictly versioned to
+    prevent partial upgrades.
+  * d/module/debian/control.template: Add armhf to the Architecture list,
+    otherwise module-assistant can't build any module packages from
+    nvidia-kernel-source on armhf.
+  * Upload to jessie.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 14 Dec 2015 10:17:49 +0100
+
+nvidia-graphics-drivers (340.93-0+deb8u1) jessie; urgency=medium
+
+  * New upstream legacy 340xx branch release 340.93 (2015-09-02).
+    * Fixed CVE-2015-5950: Memory corruption due to an unsanitized pointer.
+      (Closes: #800566)
+    - Fixed a bug that caused the X server to crash if an OpenGL application
+      tried to allocate a drawable when GPU-accessible memory is exhausted.
+    - Fixed a bug that could cause an Xid error when terminating a video
+      playback application using the overlay presentation queue in VDPAU.
+    - Fixed a rare deadlock condition when running applications that use
+      OpenGL in multiple threads on a Quadro GPU.
+    - Fixed a bug which caused truncation of the EGLAttribEXT value returned
+      by eglQueryDeviceAttribEXT() on 64-bit systems.
+    - Fixed a kernel memory leak that occurred when looping hardware-
+      accelerated video decoding with VDPAU on Maxwell-based GPUs.
+    - Fixed a bug that caused the X server to crash if a RandR 1.4 output
+      provided by a Sink Output provider was selected as the primary output on
+      X.Org xserver 1.17 and higher.
+    - Fixed a bug that caused waiting on X Sync Fence objects in OpenGL to
+      hang indefinitely in some cases.
+    - Fixed a bug that prevented OpenGL from properly recovering from
+      hardware errors or sync object waits that had timed out.
+    * Improved compatibility with recent Linux kernels.
+  * fixes-for-kernel-4.0.0.patch: Remove, fixed upstream.
+  * conftest.h:
+    - Implement new conftest.sh function nvidia_grid_build (352.41).
+  * Update lintian overrides.
+  * nvidia-driver-bin, libnvidia-compiler, libnvidia-eglcore,
+    libgl1-nvidia-glx: Add Provides+Conflicts: $pkg-${nvidia:Version} to
+    forbid co-installation with the respective legacy packages from the same
+    upstream version due to file conflicts on versioned files that are not
+    handled via alternatives.
+  * bug-script: Report file information in arm-linux-gnueabihf directories.
+  * bug-script: Collect information from /etc/modules{,-load.d/}.
+  * bug-script: Report device node permissions.
+  * bug-control, bug-script: Report information about CUDA libraries.
+  * nvidia-detect: Update list of newer PCI IDs from release 346.87.
+  * Merge changes from 304.128-1.
+  * Upload to jessie.
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 15 Oct 2015 13:18:03 +0200
+
+nvidia-graphics-drivers (340.76-4) unstable; urgency=medium
+
+  [ Andreas Beckmann ]
+  * README.source: Document my schroot setup for testing module compilation.
+  * Update lintian overrides.
+
+  [ Luca Boccassi ]
+  * conftest.h:
+    - dma_map_ops and dma_ops are available for PPC and ARM too
+  * Add ignore_xen_on_arm.patch needed for dkms build on armhf: armmp
+    kernel headers ship with CONFIG_XEN enabled, which breaks the build,
+    so since running this driver on XEN is currently not supported,
+    ignore the check for XEN in nv-linux.h as a workaround on arm, and
+    also disable CONFIG_XEN and CONFIG_XEN_DOM0 if building on <= 3.16.
+    (Closes: #794435)
+  * README.source: Document armhf setup for testing module compilation.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 10 Aug 2015 02:23:23 +0200
+
+nvidia-graphics-drivers (340.76-3) unstable; urgency=medium
+
+  [ Vincent Cheng ]
+  * nvidia-detect: Detect stretch as supported suite, and parse -h as --help.
+    (Closes: #792801)
+
+  [ Luca Boccassi ]
+  * Fix nvidia-modprobe.conf module unload ordering, to stop nvidia-uvm
+    getting stuck until a second modprobe -r nvidia-current is issued.
+    Fix provided by Jö Fahlke. Thanks! (Closes: #793386)
+
+  [ Andreas Beckmann ]
+  * Add Luca Boccassi to Uploaders.
+  * nvidia-driver, nvidia-kernel-*: Report the latest tested Linux version
+    that can build the kernel module in the package description.
+  * conftest.h:
+    - Fix conftest.sh function write_cr4.
+    - Implement new conftest.sh functions backing_dev_info (346.82),
+      phys_to_dma, dma_ops, get_dma_ops, noncoherent_swiotlb_dma_ops (352.09).
+    - Implement new conftest.sh function dma_map_ops (352.30).
+    - Reorder conftest.h to match conftest.sh.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 02 Aug 2015 22:33:27 +0200
+
+nvidia-graphics-drivers (340.76-2) unstable; urgency=medium
+
+  * fixes-for-kernel-4.0.0.patch: New patch to add support for Linux 4.0,
+    thanks to Jessie Frazelle.  (Closes: #781810)
+  * conftest.h:
+    - Implement check for linux/log2.h (346.16).
+    - Implement check for xen/ioemu.h (346.59).
+    - Implement new conftest.sh functions write_cr4, xen_ioemu_inject_msi
+      (346.59), list_cut_position (349.12).
+  * Split some old UNRELEASED changelog entries to linearize the BTS history.
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 12 May 2015 20:47:07 +0200
+
+nvidia-graphics-drivers (340.76-1) unstable; urgency=medium
+
+  * New upstream legacy 340xx branch release 340.76 (2015-01-27).
+    - Fixed a bug that caused frequent AMD-Vi page faults on systems with
+      some AMD 8xx/9xx-series chipsets when used with some NVIDIA GPUs.
+    - Fixed a regression that could cause system crashes when terminating the
+      X server on systems with an NVIDIA Quadro SDI Capture card installed.
+    - Fixed a bug that caused audio over HDMI to not work on some GPUs while
+      using a display that supports HDMI 3D.
+    * Improved compatibility with recent Linux kernels.  (Closes: #778698)
+  * nvidia-kernel-source: Use reproducible timestamps and file order inside
+    /usr/src/nvidia-kernel.tar.xz.
+  * conftest.h:
+    - Implement new conftest.sh functions file_inode, drm_pci_set_busid
+      (340.76).
+
+ -- Andreas Beckmann <anbe@debian.org>  Wed, 18 Mar 2015 19:42:13 +0100
+
+nvidia-graphics-drivers (340.65-2) unstable; urgency=medium
+
+  * Merge changes from 304.125-1.
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 16 Dec 2014 22:10:14 +0100
+
+nvidia-graphics-drivers (340.65-1) unstable; urgency=medium
+
+  * New upstream legacy 340xx branch release 340.65 (2014-12-08).
+    * Fixes CVE-2014-8298.  (Closes: #772971)
+    - Fixed a bug that prevented internal 4K panels on some laptops from being
+      driven at a sufficient bandwidth to support their native resolutions.
+    - Fixed a regression that prevented the NVIDIA kernel module from loading
+      in some virtualized environments such as Amazon Web Services.
+    - Fixed a regression that caused displays to be detected incorrectly on
+      some notebook systems.  (Closes: #770798, #765726)
+    - Fixed a bug that could cause X to freeze when using Base Mosaic.
+    - Fixed a regression that prevented the NVIDIA X driver from recognizing
+      Base Mosaic layouts generated by the nvidia-settings control panel.
+  * Merge changes from 304.125 (UNRELEASED).
+  * Add xorg-video-abi-19 as alternative dependency.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 12 Dec 2014 21:10:11 +0100
+
+nvidia-graphics-drivers (340.58-1) unstable; urgency=medium
+
+  * New upstream legacy 340xx branch release 340.58 (2014-11-05).
+    - Added support for the following GPUs: GeForce GT820M, GeForce GTX 760A,
+      GeForce GTX 850A, GeForce 810A, GeForce 820A, GeForce 840A, Tesla K8.
+    - Fixed a bug that could cause VT-switching to fail following a
+      suspend, resume, and driver reload sequence.
+    - Fixed a bug that caused incorrect colors to be displayed on X screens
+      running at depth 8 on some GPUs.
+    - Fixed a bug that prevented GPUs from being correctly recognized in
+      MetaMode strings when identified by UUID.
+    - Implemented support for disabling indirect GLX context creation using
+      the -iglx option available on X.Org server release 1.16 and newer.  Note
+      that future X.Org server releases may make the -iglx option the default.
+      To re-enable support for indirect GLX on such servers, use the +iglx
+      option.
+    - Added the "AllowIndirectGLXProtocol" X config option.  This option can
+      be used to disallow use of GLX protocol.  See "Appendix B. X Config
+      Options" in the README for more details.
+  * Update nv-readme.ids.
+  * conftest.h:
+    - Implement check for drm/drm_gem.h (340.58).
+    - Implement new conftest.sh functions pci_save_state (340.58), follow_pfn,
+      fault_flags, atomic64_type (346.16).
+
+ -- Andreas Beckmann <anbe@debian.org>  Wed, 10 Dec 2014 01:21:29 +0100
+
+nvidia-graphics-drivers (340.46-6) unstable; urgency=medium
+
+  * nvidia-kernel-dkms: Switch to Recommends: nvidia-driver | libcuda1
+    to break the chain libcuda1 -> nvidia-kernel-dkms -> nvidia-driver.
+  * nvidia-opencl-icd: Downgrade the Depends: libcuda1 to Suggests. This
+    should avoid pulling in too many NVIDIA packages on wheezy -> jessie
+    upgrades of systems that have no NVIDIA hardware, but nvidia-opencl-icd
+    installed nevertheless.  (Closes: #769072 and many duplicates)
+  * nvidia-detect: Update list of newer PCI IDs from release 346.16.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 30 Nov 2014 20:08:09 +0100
+
+nvidia-graphics-drivers (340.46-5) unstable; urgency=medium
+
+  * nvidia-driver-bin: Breaks+Replaces nvidia-glx from wheezy.
+  * libgles2-nvidia: Fix the SONAME symlink.
+  * nvidia-alternative: Ship /usr/share/nvidia (slave alternative location).
+  * New Dutch (nl) debconf translations by Frans Spiesschaert.
+    (Closes: #767492)
+  * README.source: Document the nks-history.git repository.
+  * bug-script: Collect more information.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 22 Nov 2014 18:47:36 +0100
+
+nvidia-graphics-drivers (340.46-4) unstable; urgency=medium
+
+  * Fix installation of nvidia-smi.  (Closes: #766343)
+  * Add more dependencies on nvidia-alternative.
+  * d/rules: Add #!armhf# and #!legacy# substitutions.
+  * nvidia-driver: Stop shipping nvidia-persistenced, this is being moved to a
+    separate source package.
+  * Split nvidia-driver-bin from the metapackage nvidia-driver.
+  * nvidia-driver-bin: Support switching via nvidia-alternative.
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 30 Oct 2014 23:43:37 +0100
+
+nvidia-graphics-drivers (340.46-3) unstable; urgency=medium
+
+  * Updated French (fr) debconf translations by Christian Perrier.
+  * bug-script: Run xrandr, if possible.
+  * nvidia-driver: Depend on libegl1-nvidia and recommend libgles[12]-nvidia.
+
+ -- Andreas Beckmann <anbe@debian.org>  Wed, 22 Oct 2014 00:09:17 +0200
+
+nvidia-graphics-drivers (340.46-2) unstable; urgency=medium
+
+  * Add libcuda1 dependency to libraries that seem to be capable of doing
+    dlopen("libcuda.so") or dlopen("libcuda.so.1").
+  * nvidia-libopencl1.symbols: Ensure ocl-icd-libopencl1 is always the first
+    alternative, dependency lists may be reordered.
+  * Merge changes from 331.104 (UNRELEASED).
+  * README.source: Document workflow for importing a new upstream release that
+    has moved support for some legacy cards to a new legacy driver.
+  * nvidia-detect: Report that a driver supporting GeForce GTX 970/980 will be
+    made available in jessie-backports (and experimental).
+  * d/rules: Correctly parse PCI ID lists from upstream README of release
+    343xx onwards.
+  * conftest.h:
+    - DRM is only supported on Linux >= 3.9.  (Closes: #765679)
+    - Implement extensions to conftest.sh function vm_operations_struct
+      (343.13).
+  * bug-script: Collect more information.
+  * Update lintian overrides.
+  * nvidia-vdpau-driver: Support switching via nvidia-alternative.
+  * libcuda1: Support switching via nvidia-alternative.
+  * nvidia-opencl-icd: Support switching via nvidia-alternative.
+  * lib{egl1,gles1,gles2}-nvidia: Support switching via nvidia-alternative.
+  * libnvidia-{ifr1,bfc1}: Support switching via nvidia-alternative.
+  * libnvidia-encode1, libnvcuvid1: Support switching via nvidia-alternative.
+  * libnvidia-ml1, nvidia-smi: Support switching via nvidia-alternative.
+  * nvidia-driver: Recommend libegl1-nvidia and suggest libgles[12]-nvidia.
+  * d/rules{,.defs}: Drop MULTIARCH switch - this is always enabled nowadays.
+  * libgl1-nvidia-glx.preinst: Rework the legacy check. Use more debconf
+    variable substitutions for easy reuse of the translations.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 20 Oct 2014 10:30:50 +0200
+
+nvidia-graphics-drivers (340.46-1) unstable; urgency=medium
+
+  [ Vincent Cheng ]
+  * New upstream long lived branch release 340.46 (2014-09-30).
+    - Fixed a crash with UnrealEngine 4 when the application was started
+      with the -opengl4 commandline switch.
+    - Fixed an OpenGL issue that could cause glReadPixels() operations to
+      be improperly clipped when resizing composited application windows,
+      potentially leading to momentary X freezes.
+    - Fixed a bug that could prevent the GLSL compiler from correctly
+      evaluating some expressions when compiling shaders.
+    - Added option UseSysmemPixmapAccel to control the use of GPU acceleration
+      for X drawing operations on pixmaps allocated in system memory.
+  * Unload uvm module when nvidia is unloaded. (Closes: #749018)
+  * conftest.h:
+    - Tighten conftest.h check for drm/drmP.h.
+    - Implement new conftest.sh functions sg_table, sg_alloc_table (340.46).
+
+  [ Andreas Beckmann ]
+  * libcuda1: Add Provides: libcuda-6.{0,5}-1{,-i386}.
+  * nvidia-detect: Legacy driver 173xx won't be available in jessie.
+  * Merge changes from 304.123 (UNRELEASED).
+  * Bump Standards-Version to 3.9.6. No changes needed.
+  * Update lintian overrides.
+  * Restrict watch file to releases from the 340.xx long lived branch.
+  * libgl1-nvidia-glx.preinst: Implement hardware check for legacy GPUs that
+    require the nvidia-legacy-304xx-driver package. Based on the
+    implementation of the same feature in fglrx-driver (libfglrx.preinst).
+    - Show debconf question in preinst asking whether to proceed with driver
+      installation in case GPUs only supported in nvidia-legacy-304xx-driver
+      are present in the machine. (Having *no* supported hardware installed at
+      all is *not* an error.)
+    - The hardware check can be disabled via preseeding to allow unattended
+      installations/upgrades.
+    (Closes: #761062)
+  * Import and adjust the corresponding debconf translations from
+    fglrx-driver.
+
+  [ Beren Minor ]
+  * Fix DRM support activation in conftest.h. (Closes: #731265)
+
+ -- Vincent Cheng <vcheng@debian.org>  Mon, 06 Oct 2014 20:08:51 -0700
+
+nvidia-graphics-drivers (340.32-1) unstable; urgency=medium
+
+  * New upstream long lived branch release 340.32 (2014-08-12).
+    - Added support for the following GPUs: Quadro K420, Quadro K620,
+      Quadro K2200, Quadro K4200, Quadro K5200, GeForce 830A.
+    - Fixed a regression that prevented the internal stereo infrared emitter
+      built into some 3D Vision monitors from working.
+    - Fixed a bug that could cause some Java-based OpenGL applications using
+      JOGL to crash on startup on systems with Xinerama enabled.
+    - Fixed a bug that could prevent OpenGL Framebuffer Objects (FBOs)
+      from being properly redrawn after a modeswitch.
+    - Fixed a memory leak that occurred when starting OpenGL applications.
+    - Fixed a bug that prevented the EDID-Like Data (ELD) of audio-capable
+      displays from being updated when hotplugged/unplugged.
+    - Fixed a bug that caused Xid errors when using stereo mode 12 (HDMI 3D)
+      on Quadro boards without an onboard stereo DIN connector.
+    - Fixed a video corruption issue for VDPAU decoding of VC-1 and WMV
+      video streams utilizing range remapping on Maxwell GPUs.
+    - Fixed a "black window" bug in Ubuntu 14.04 when using the Xinerama
+      and Composite extensions.
+    - Fixed a bug that caused the screen's contents to be shifted downward when
+      a G-SYNC monitor is unplugged and replaced by a non-G-SYNC monitor.
+    - Fixed a bug that prevented G-SYNC from working when a G-SYNC monitor
+      was unplugged and plugged back in without a modeset.
+  * Refresh debian/patches/man-fixes-nvidia-smi.patch and patches applied to
+    nvidia-kernel-dkms.
+  * Update nv-readme.ids.
+  * conftest.h: Implement new conftest.sh function acpi_op_remove (304.123).
+
+ -- Vincent Cheng <vcheng@debian.org>  Sat, 16 Aug 2014 23:49:21 -0700
+
+nvidia-graphics-drivers (340.24-2) unstable; urgency=high
+
+  * Fix FTBFS on armhf by not installing non-existent files. (Closes: #754621)
+  * Urgency=high because nvidia is currently completely broken in testing due
+    to xserver 1.16 migration and ABI bump.
+
+ -- Vincent Cheng <vcheng@debian.org>  Sat, 19 Jul 2014 23:57:46 -0700
+
+nvidia-graphics-drivers (340.24-1) unstable; urgency=medium
+
+  [ Vincent Cheng ]
+  * New upstream long lived branch release 340.24 (2014-07-08).
+    - Fixed a regression, introduced in the 340.17 public beta release,
+      that caused the NVIDIA X driver to access freed memory when exiting
+      a GLX application that used either of the GLX_NV_video_out or
+      GLX_NV_present_video extensions.
+    - Fixed a bug that prevented 3D Vision stereo and ultra low motion blur
+      modes from working on G-SYNC capable monitors in some cases.
+    - Fixed a kernel crash when running some applications with IOMMU
+      functionality enabled.
+    - Fixed a floating point exception in the OpenGL driver when running
+      "Risk of Rain" under Wine.
+  * New upstream beta 340.17 (2014-06-09).
+    - Made various improvements and corrections to the information reported
+      to GL applications via the KHR_debug and ARB_debug_output extensions.
+    - Fixed a bug that caused GLX applications which simultaneously create
+      drawables on multiple X servers to crash when swapping buffers.
+    - Added support for controlling the availability of Fast Approximate
+      Antialiasing (FXAA) on a per-application basis via the new
+      __GL_ALLOW_FXAA_USAGE environment variable and the corresponding
+      GLAllowFXAAUsage application profile key. See the README for details.
+    - Fixed a bug where indirect rendering could become corrupted on
+      system configurations that disallow writing to executable memory.
+    - Added initial support for G-SYNC monitors.  Additional details and system
+      requirements can be found at:
+        http://www.geforce.com/hardware/technology/g-sync
+    - Improved support for running the NVIDIA driver in configurations where
+      writing to executable memory is disallowed.  Driver optimizations that
+      require writing to executable memory can be forcefully disabled using the
+      new __GL_WRITE_TEXT_SECTION environment variable.  See the README for more
+      details.
+    - Fixed an X driver bug that caused gamma ramp updates of the green
+      channel at depth 15, on some recent GPUs, to be ignored.
+  * New upstream short lived branch release 337.25 (2014-05-30).
+    - Fixed a bug that caused X to crash when querying clock offsets for
+      non-existent performance levels.
+    - Added support for the following GPUs: GeForce GTX TITAN Z,
+      GeForce GT 740.
+    - Fixed a performance regression when running KDE with desktop effects
+      using the OpenGL compositing backend.
+    - Fixed a regression that could cause OpenGL rendering corruption on X
+      screens with 30 bit per pixel color.
+  * Refresh debian/patches/man-fixes-nvidia-smi.patch.
+  * Add myself to Uploaders.
+  * Add xorg-video-abi-18 as alternative dependency.
+    (Closes: #755020, #755138, #751082, #754828, #754251).
+  * Update nv-readme.ids.
+  * Update symbols control files.
+
+  [ Andreas Beckmann ]
+  * nvidia-driver: Ship new file                        (Closes: #748909)
+    /usr/share/nvidia/nvidia-application-profiles-$VER-key-documentation.
+
+ -- Vincent Cheng <vcheng@debian.org>  Sat, 19 Jul 2014 14:05:31 -0700
+
+nvidia-graphics-drivers (337.19-1) experimental; urgency=medium
+
+  * New upstream beta 337.17 (2014-05-01).
+    - Fixed a bug causing mode validation to fail for 4K resolutions over HDMI
+      in certain situations.
+    - Added support for the GLX_EXT_stereo_tree extension.  For more
+      details, see the extension specification:
+        http://www.opengl.org/registry/specs/EXT/glx_stereo_tree.txt
+    - Enabled support for using Unified Back Buffer (UBB) and 3D Stereo with
+      the composite extension on Quadro cards.  Using stereo with a composite
+      manager requires a stereo-aware composite manager.  Otherwise, only the
+      left eye of stereo applications will be displayed.  See the
+      GLX_EXT_stereo_tree extension specification for more details.
+  * New upstream beta 337.12 (2014-04-08).
+    - Fixed a bug that could cause OpenGL programs to freeze under some
+      low memory conditions.
+    - Removed the "OnDemandVBlankInterrupts" X configuration option: this
+      option has been enabled by default since version 177.68 of the
+      NVIDIA Unix driver, and the documentation had not been updated to
+      reflect the new default value.
+    - Fixed a bug that caused GPU errors when hotplugging daisy-chained
+      DisplayPort 1.2 displays.
+    - Fixed a bug that prevented the use of multiple simultaneous X servers
+      on UEFI systems.
+    - Added the ability to over- and under-clock certain GeForce
+      GPUs in the GeForce GTX 400 series and later.  For GPUs that allow it,
+      an offset can be applied to clock values in some clock domains of
+      some performance levels.  This clock manipulation is done at the
+      user's own risk.  See the README documentation of the "CoolBits"
+      X configuration option for more details.
+    - Added support for the following GPUs: GeForce 830M, GeForce 840M,
+      GeForce 845M, GeForce GTX 850M.
+    - Renamed the RandR output property _GUID to GUID now that it is an official
+      property documented in randrproto.txt:
+        http://cgit.freedesktop.org/xorg/proto/randrproto/commit/?id=19fc4c5a72eb9919d720ad66734029d9f8e313b1
+    - Reduced CPU utilization and GPU memory utilization of the NVIDIA
+      EGL driver.
+    - Added support for the following EGL extensions:
+      - EGL_EXT_buffer_age;
+      - EGL_EXT_client_extensions;
+      - EGL_EXT_platform_base;
+      - EGL_EXT_platform_x11.
+    - Renamed the "Clone" setting of the "MetaModeOrientation" X configuration
+      option to "SamePositionAs", to make clear that this setting applies to
+      the position only, and not to the resolution of modes in the MetaMode.
+    - Added NV-CONTROL attribute NV_CTRL_VIDEO_ENCODER_UTILIZATION to query
+      utilization percentage of the video encoder engine.
+    - Added support for the GLX_NV_delay_before_swap extension.  For more
+      details, see the extension specification:
+        http://www.opengl.org/registry/specs/NV/glx_delay_before_swap.txt
+    - Report correct buffer sizes for RGB GLX visuals, GLXFBConfigs, and
+      EGLConfigs.  Previously, RGB10 and RGB8 formats were reported as having 32
+      bits, and RGB5 formats were reported as having 16 bits.  Now they are
+      correctly reported as 30, 24, and 15 bit formats respectively as
+      required by the GLX and EGL specifications.
+    * Improved compatibility with recent Linux kernels.
+      (Closes: #745885, #746519)
+  * Update nv-readme.ids.
+  * Update symbols control files.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 09 May 2014 09:08:38 +0200
+
+nvidia-graphics-drivers (334.21-1) experimental; urgency=medium
+
+  * New upstream short lived branch release 334.21 (2014-03-03).
+    - Fixed a regression in the NVIDIA kernel module which caused it to
+      improperly dereference a userspace pointer. This potential security
+      issue was initially reported to the public at:
+        http://forums.grsecurity.net/viewtopic.php?f=3&t=3922
+      The regression did not affect NVIDIA GPU drivers before release 334.
+    - Fixed a bug that could cause OpenGL programs to hang after calling
+      fork(2).
+    - Fixed a bug that could cause a multi-threaded OpenGL application
+      to crash when one of its threads exits after the application has
+      unloaded libGL.
+    - Added support for the following GPUs: GeForce GTX 750 Ti,
+      GeForce GTX 750, GeForce GTX 745, GeForce GTX TITAN Black.
+    - Added support for GPUs with VDPAU Feature Set E. See the README
+      for details.
+    - On GPUs with VDPAU Feature Set E, VDPAU now supports more robust
+      decode error handling at the cost of a minor performance impact.
+      This can be disabled by setting the
+      VDPAU_NVIDIA_DISABLE_ERROR_CONCEALMENT environment variable to 1.
+    - Added support for application profile rule patterns which are logical
+      operations of subpatterns. See the README for details.
+    - Added support for a "findfile" application profile feature which
+      allows the driver to apply profiles based on matching files in the
+      same directory as the process executable. See the README for details.
+    - Improved performance of OpenGL applications when used in conjunction
+      with the X driver's composition pipeline.  The composition pipeline may
+      be explicitly enabled by using the ForceCompositionPipeline or
+      ForceFullCompositionPipeline MetaMode options, or implicitly enabled
+      when certain features such as some XRandR transformations, rotation,
+      Warp & Blend, PRIME, and NvFBC are used.
+  * New upstream short lived branch release 334.16 (2014-02-08).
+    - Fixed a bug that could cause applications using the OpenGL
+      extension ARB_query_buffer_object to crash under Xinerama.
+    - Fixed a bug that could cause poor stereo synchronization in large
+      multi-monitor setups using 3D Vision, due to failed hardware
+      handshaking on some of the monitors.
+    - Fixed a bug that prevented some DisplayPort 1.2 displays from being
+      properly restored after a VT switch.
+    - Renamed per GPU proc directories in /proc/driver/nvidia/gpus/ with GPU's
+      bus location represented in "domain:bus:device.function" format.
+    - Added 64-bit EGL and OpenGL ES libraries to 64-bit driver prackages.
+    - Changed format of "Bus Location" field reported in the
+      /proc/driver/nvidia/gpus/0..N/information files from
+      "domain:bus.device.function" to "domain:bus:device.function" to match
+      the lspci format.
+    - Fixed a bug in the GLX_EXT_buffer_age extension where incorrect
+      ages would be returned unless triple buffering was enabled.
+    - Updated the NVIDIA X driver to load the NVIDIA kernel module using
+      `nvidia-modprobe`, rather than the XFree86 DDX helper function
+      xf86LoadKernelModule().
+    - Changed the driver's default behavior to stop deleting RandR 1.2 outputs
+      corresponding to unused DisplayPort 1.2 devices.  Deleting these outputs
+      can confuse some applications.  Added a new option,
+      DeleteUnusedDP12Displays, which can be used to turn this behavior back on.
+      This option can be enabled by running
+        sudo nvidia-xconfig --delete-unused-dp12-displays
+    - Improved support for the __GL_SYNC_DISPLAY_DEVICE and
+      VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE environment variables in certain
+      configurations.  Both environment variables will now recognize all
+      supported display device names.  See "Appendix C. Display Device Names"
+      and "Appendix G. VDPAU Support" in the README for more details.
+    - Improved performance of the X driver when handling large numbers of
+      surface allocations.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * Build the EGL/GLES packages for amd64, too.
+  * Update lintian overrides.
+  * Upload to experimental.
+
+ -- Andreas Beckmann <anbe@debian.org>  Wed, 23 Apr 2014 14:41:03 +0200
+
+nvidia-graphics-drivers (331.113-1) UNRELEASED; urgency=medium
+
+  * New upstream long lived branch release 331.113 (2014-12-05).
+    * Fixes CVE-2014-8298.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 12 Dec 2014 08:27:26 +0100
+
+nvidia-graphics-drivers (331.104-1) UNRELEASED; urgency=medium
+
+  * New upstream long lived branch release 331.104 (2014-10-08).
+    - Fixed a bug that could cause the CUDA debugger to fail after
+      exiting X on systems with persistence mode enabled.
+    - Fixed a bug that could cause silent and intermittent failures when
+      a CUDA application writes to a peer device's memory with GPUDirect.
+    - Fixed a bug that could prevent 32-bit GPU-based applications from
+      running correctly on 64-bit systems when using GPUs with very
+      large memory-mapped I/O regions.
+    - Fixed a bug that could cause poor system performance and hangs when
+      running large compute workloads on IOMMU-enabled systems.
+    - Fixed a bug that could cause a system crash when two or more
+      processes try to load the nvidia-uvm driver.
+    - Added support for the following GPU: GeForce 810M.
+    - Improved the performance of OpenGL applications that request a large
+      number of GPU mappings via the GL_NV_shader_buffer_load extension.
+    - Fixed a bug that could cause a system crash when killing applications
+      that use NVIDIA GPUs on multiple-GPU systems with IOMMU functionality
+      enabled.
+    - Fixed a bug that caused the NVIDIA kernel module to leak memory for
+      DMA mappings on some configurations.
+  * New upstream long lived branch release 331.89 (2014-07-04).
+    - Fixed a race condition in the NVIDIA kernel module that caused some
+      GPUs to sporadically become unresponsive.
+    - Updated the error reporting in the NVIDIA kernel module to include the
+      GPU serial number, when available, in error messages written to the
+      system log.
+    - Added support for the following GPU: GeForce GT 730.
+    - Fixed a bug that caused blank screens when transforming or rotating displays
+      in an SLI Mosaic layout.
+    - Fixed a bug that corrupted certain software rendering on 32-bit systems.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 12 Oct 2014 02:40:55 +0200
+
+nvidia-graphics-drivers (331.79-1) unstable; urgency=medium
+
+  * New upstream long lived branch release 331.79 (2014-05-20).
+    - Fixed a bug that caused blank screens and flickering when rotating
+      displays in a Base Mosaic layout.
+    - Fixed a bug that caused BadRRCrtc or BadRROutput errors for big-endian
+      X11 clients making certain XRandR requests.
+    - Fixed a bug that corrupted certain software rendering, notably the
+      stippled text used to represent disabled entries in xterm's pop-up menus.
+  * conftest.h: Implement new conftest.sh function console_lock (331.79).
+  * uvm-symvers.patch: New patch to fix the missing Module.symvers from
+    nvidia.ko build while building nvidia-uvm.ko.
+    (Closes: #747366, #745715, #746643, #746455)
+  * nvidia-driver: Ship new files /usr/share/nvidia/{monitoring.conf, pci.ids}.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 23 May 2014 12:45:22 +0200
+
+nvidia-graphics-drivers (331.67-2) unstable; urgency=medium
+
+  * Drop Breaks: make (= 3.82-1), fixed in make/experimental.
+  * Add Depends: nvidia-modprobe.
+  * Build the nvidia-uvm module, too.  (Closes: #745715, #746643)
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 06 May 2014 07:35:39 +0200
+
+nvidia-graphics-drivers (331.67-1) unstable; urgency=medium
+
+  * New upstream long lived branch release 331.67 (2014-04-09).
+    - Fixed a bug that could lead to crashes when running Left 4 Dead 2
+      with threaded optimizations enabled.
+    - Added support for the following GPUs: GeForce GT 705, GeForce GT 720,
+      GeForce GTX 860M, GeForce GTX 870M, GeForce GTX 880M.
+    - Fixed a bug that causes some X clients to be disconnected from the X
+      server when the screen is resized while RandR 1.4 display offloading is in
+      use.
+    - Fixed a bug that could cause display corruption when resuming from
+      suspend on systems using RandR 1.4 display offloading with recent
+      Linux kernels.
+    - Added support for Tridelity SL stereo mode.
+    * Improved compatibility with recent Linux kernels.  (Closes: #742645)
+  * Update nv-readme.ids.
+  * conftest.h: Implement new conftest.sh function pm_vt_switch_required
+    (331.67).
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 22 Apr 2014 14:53:29 +0200
+
+nvidia-graphics-drivers (331.49-1) unstable; urgency=medium
+
+  * New upstream long lived branch release 331.49 (2014-02-18).
+    - Added support for the following GPUs: GeForce GT 710, GeForce 825M.
+    - Added a new X configuration option "InbandStereoSignaling" to
+      enable/disable DisplayPort in-band stereo signaling. See
+      "Appendix B. X Config Options" in the README for more information.
+    - Fixed a bug that caused PBO downloads of cube map faces to
+      retrieve incorrect data.
+    - Added experimental support for ARGB GLX visuals when Xinerama and
+      Composite are enabled at the same time on X.Org xserver 1.15.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * nvidia_3.13_kernel.patch: Remove, fixed upstream.
+  * conftest.h: Implement new conftest.sh function kuid_t (331.49).
+  * bug-script: Report information about /etc/modprobe.d.
+  * Upload to unstable.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 23 Feb 2014 03:48:19 +0100
+
+nvidia-graphics-drivers (331.38-2) experimental; urgency=medium
+
+  * nvidia_3.13_kernel.patch: New patch from Fedora to adapt to ACPI changes
+    in Linux 3.13.  (Closes: #735630)
+  * nvidia-detect: Clarify output regarding legacy driver series. Update
+    information about wheezy-backports and 96xx not being available in jessie.
+    (Closes: #736145)
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 31 Jan 2014 10:21:37 +0100
+
+nvidia-graphics-drivers (331.38-1) experimental; urgency=low
+
+  * New upstream long lived branch release 331.38 (2014-01-13).
+    - Fixed a bug that caused the X server to crash if video memory is
+      exhausted and the GPU does not support rendering to system memory.
+    - Improved the robustness of the NVIDIA X driver in scenarios where
+      GPU-accessible memory for allocating pixmaps was exhausted.
+    - Added NV-CONTROL attributes to control the brightness of the illuminated
+      logos on certain graphics boards.  For example, to turn off the
+      illumination of the "GEFORCE GTX" lettering on the GeForce GTX 780, use
+        nvidia-settings --assign GPULogoBrightness=0
+    - Fixed a bug that prevented screen transformations from being
+      applied properly when starting X.
+    - GLX protocol for the following OpenGL extensions from
+      OpenGL 2.1 and OpenGL 3.0 have been promoted from
+      unofficial to ARB approved official status:
+      GL_ARB_pixel_buffer_object, GL_NV_conditional_render,
+      GL_ARB_map_buffer_range, GL_EXT_texture_integer,
+      GL_ARB_vertex_array_object.
+      GL_ARB_pixel_buffer_object was the last piece of protocol
+      needed to have official support for indirect rendering with
+      all OpenGL 2.1 commands.
+    - GLX Protocol for the miscellaneous OpenGL 3.0 commands not
+      associated with specific extensions has also been promoted from
+      unofficial to ARB approved status.
+    - Deprecated display mask related configuration of display devices via
+      NV-CONTROL and nvidia-settings.  Display target specifications should
+      be used instead - A display target is one of the display's valid names,
+      with an optional GPU or X screen qualifier.
+    - Deprecated the following NV-CONTROL attributes:
+      NV_CTRL_CONNECTED_DISPLAYS, NV_CTRL_ENABLED_DISPLAYS,
+      NV_CTRL_ASSOCIATED_DISPLAYS, NV_CTRL_NOTEBOOK_INTERNAL_LCD,
+      NV_CTRL_FRAMELOCK_MASTER, NV_CTRL_FRAMELOCK_SLAVES,
+      NV_CTRL_FRAMELOCK_MASTERABLE, NV_CTRL_FRAMELOCK_SLAVEABLE.
+      Also, although NV_CTRL_PROBE_DISPLAYS is still operational, the return
+      value has been deprecated and should not be used.
+    * Fixed signal mask corruption.  (Closes: #728743)
+  * conftest.h: Implement new conftest.sh functions kbasename,
+    fatal_signal_pending (331.38).
+  * Merge changes from 319.82-1.
+  * Add xorg-video-abi-15 as alternative dependency.  (Closes: #732118)
+  * Update symbols control files.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 19 Jan 2014 17:30:21 +0100
+
+nvidia-graphics-drivers (331.20-2) experimental; urgency=low
+
+  * libnvidia-fbc1: New package for NvFBCOpenGL (libnvidia-fbc.so.1).
+  * [i386, armhf] lib{egl1,gles1,gles2}-nvidia, libnvidia-eglcore:
+    New packages for EGL, OpenGL|ES 1.x, OpenGL|ES 2.x.
+    These packages do not yet utilize the the diversion/alternatives system,
+    so you need to add /usr/lib/<triplet>/nvidia/current to LD_LIBRARY_PATH to
+    use them.
+  * Add libcuda1-i386:i386 package that can be recommended from amd64 packages
+    that want to make the 32-bit CUDA runtime available.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 08 Nov 2013 22:13:05 +0100
+
+nvidia-graphics-drivers (331.20-1) experimental; urgency=low
+
+  * New upstream long lived branch release 331.20 (2013-11-06).
+  * linux-3.11.patch: Remove, fixed upstream.
+  * Update symbols control files.
+  * conftest.h: Implement new conftest.sh functions address_space,
+      address_space_init_once (331.20).
+  * Merge changes from 319.60-3.
+  * Update lintian overrides.
+  * Update package descriptions.
+  * libcuda1: Add Provides: libcuda-5.5-1.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 08 Nov 2013 19:54:06 +0100
+
+nvidia-graphics-drivers (331.17-1) experimental; urgency=low
+
+  * New upstream beta 331.17 (2013-10-22).
+    - Added support for NVIDIA OpenGL-based Framebuffer Capture (NvFBCOpenGL).
+      This library provides a high performance, low latency interface to
+      capture and optionally encode the composited framebuffer of an X screen.
+      NvFBC and NvIFR are private APIs that are only available to approved
+      partners for use in remote graphics scenarios.  Please contact NVIDIA
+      at GRIDteam@nvidia.com for more information.
+    - Fixed a bug that prevented configuration files containing application
+      profiles from being loaded when directories were present in the
+      application profile configuration search path.
+    - Deferred initialization of libselinux in the NVIDIA OpenGL driver, in
+      order to avoid a problem where libselinux might not be ready when the
+      NVIDIA libGL shared library is first loaded.
+    - Added nvidia-uvm.ko, the NVIDIA Unified Memory kernel module, to the
+      NVIDIA Linux driver package. This kernel module provides support for
+      the new Unified Memory feature in an upcoming CUDA release.
+  * Update nv-readme.ids.
+  * not-silent.patch: Refresh.
+  * conftest.h:
+    - Remove obsolete conftest.sh functions vma_prio_tree_foreach,
+      address_space_init_once (added in 331.13, removed in 331.17).
+    - Implement new conftest.sh function task_struct (331.17).
+  * linux-3.11.patch: Use patch from NVIDIA.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 02 Nov 2013 22:51:45 +0100
+
+nvidia-graphics-drivers (331.13-1) experimental; urgency=low
+
+  * New upstream beta 331.13 (2013-10-04).  (Closes: #727128)
+    - Fixed a bug that caused the X server to fail to initialize when
+      DisplayPort 1.2 monitors were assigned to separate X screens on the same
+      GPU.
+    - Fixed a bug that could cause a deadlock when forking from OpenGL
+      programs which use some malloc implementations, such as TCMalloc.
+    - Fixed a bug that prevented Warp & Blend settings from being
+      retained across display configuration changes.
+    - Changed the clipping behavior of the NVIDIA X driver on Trapezoids
+      and Triangles for some RENDER operations to match the behavior in
+      newer versions of Pixman:
+      http://lists.freedesktop.org/archives/pixman/2013-April/002755.html
+    - Fixed a bug in MetaMode tracking that could cause spurious error
+      messages to be printed when attempting to add or delete Metamodes
+      via NV-CONTROL.
+    - Fixed a bug that caused the NVIDIA X driver to attempt to load the
+      X11 "shadow" module unconditionally, even in situations where the
+      driver had no need to use the module. This could result in the
+      printing of spurious error messages, on X servers where the module
+      was not present.
+    - Fixed a bug that prevented display configuration changes made
+      with xvidtune(1) from working correctly.
+    - Fixed a bug that occasionally caused display corruption in GLX
+      applications while changing the display configuration.
+    - Fixed a bug that prevented glReadPixels from working correctly when
+      reading from Pixel Buffer Objects over indirect rendering, when the
+      image width is not a multiple of 4.
+    - Added a new NV-CONTROL attribute, NV_CTRL_BACKLIGHT_BRIGHTNESS,
+      for controlling backlight brightness.
+    - Fixed a bug that caused DisplayPort 1.2 multi-stream devices to stop
+      working if they were unplugged and plugged back in while they were active
+      in the current MetaMode.
+    - Added support for multiple NVIDIA kernel modules. This feature allows
+      users to assign different GPUs in the system to different NVIDIA kernel
+      modules, potentially reducing the software overhead of coordinating
+      access to multiple GPUs.
+    - Added support for the EGL API on 32-bit platforms.  Currently, the
+      supported client APIs are OpenGL ES 1.1, 2.0 and 3.0, and the only
+      supported window system backend is X11.
+    - Add a new option, AllowEmptyInitialConfiguration, which allows the X
+      server to start even if no connected display devices are detected at
+      startup.  This option can be enabled by running "sudo nvidia-xconfig
+      --allow-empty-initial-configuration"
+      This option is useful in RandR 1.4 display offload configurations where
+      no display devices are connected to the NVIDIA GPU when the X server is
+      started, but might be connected later.
+    - Added a system memory cache to improve the performance of certain X
+      rendering operations that use software rendering fallbacks.  The X
+      configuration option "SoftwareRenderCacheSize" may be used to configure
+      the size of the cache.
+    - Removed the "DynamicTwinView" X configuration option: dynamic
+      reconfiguration of displays is always possible, and can no longer be
+      disabled.
+  * Refresh patches.
+  * Update symbols control files.
+  * Update lintian overrides.
+  * nvidia-driver: Ship nvidia-debugdump.
+  * conftest.h:
+    - Implement checks for linux/printk.h, linux/ratelimit.h,
+      linux/prio_tree.h (331.13).
+    - Implement new conftest.sh functions vma_prio_tree_foreach,
+      address_space_init_once, vm_operations_struct (331.13).
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 24 Oct 2013 02:53:15 +0200
+
+nvidia-graphics-drivers (325.15-4) experimental; urgency=low
+
+  * Merge changes from 304.108-4 and 319.60-2.
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 22 Oct 2013 17:36:17 +0200
+
+nvidia-graphics-drivers (325.15-3) experimental; urgency=low
+
+  * Enable building the new libnvidia-ifr1 package.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 15 Sep 2013 16:20:51 +0200
+
+nvidia-graphics-drivers (325.15-2) experimental; urgency=low
+
+  * Merge changes from 304.108-3 and 313.49 (UNRELEASED).
+    - linux-3.11.patch: New patch to fix compilation with Linux 3.11.
+      (Closes: #722894)
+  * Note: Some features from 313.49 are not yet in 325.15.
+  * Do not build libnvidia-ifr1, yet.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 15 Sep 2013 16:01:23 +0200
+
+nvidia-graphics-drivers (325.15-1) experimental; urgency=low
+
+  * New upstream short lived branch release 325.15 (2013-08-05).
+  * Update nv-readme.ids.
+  * conftest.h: Implement new conftest.sh functions proc_create_data (325.15),
+      pde_data (325.15), proc_remove (325.15), dom0_kernel_present (325.08),
+      nvidiafb_sanity_check (1.0-8174), xen_sanity_check (1.0-9746, 177.76),
+      preempt_rt_sanity_check (325.08).
+  * kernel-3.10-{i2c,procfs}.patch: Remove. Fixed upstream.
+  * Use a different approach to rename the kernel module that preserves its
+    internal name as "nvidia".  (Closes: #718774)
+  * nvidia{,-legacy-*}-kernel-dkms are now co-installable.  (Closes: #685617)
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 08 Aug 2013 10:50:53 +0200
+
+nvidia-graphics-drivers (325.08-1) experimental; urgency=low
+
+  * New upstream short lived branch release 325.08 (2013-07-01).
+    - Fixed a bug that could cause display flickering after setting some
+      scaling configurations.
+    - Changed the default PCIe interrupt delivery method from virtual-wire
+      to MSI. Note that if the NVIDIA Linux driver fails to initialize
+      with an error indicating that it is not receiving interrupts, MSI
+      can be disabled by setting the module parameter "NVreg_EnableMSI=0"
+      when loading the NVIDIA kernel module.
+    - Removed support for Linux 2.4 kernels. The NVIDIA Linux driver now
+      requires Linux 2.6.9 or later.
+    - Fixed a bug that prevented the creation of a mode via RandR with the
+      same name as a previously created mode, even after the previous mode
+      had been deleted.
+    - Fixed a bug that could cause OpenGL applications that use Frame Buffer
+      Objects (FBOs) to crash following a mode switch (e.g. changing the
+      resolution of a display or transforming it).
+    - Fixed a memory leak that could be triggered by unloading libGL before
+      destroying all GLX contexts.
+    - Fixed a bug that could cause color correction settings to be applied to
+      the wrong display when multiple displays are unplugged and then plugged
+      back in again.
+    - Fixed a bug that could cause a spurious error message about a missing
+      NV-GLX extension when performing indirect rendering from a GLX client
+      with the NVIDIA client-side OpenGL libraries to a non-NVIDIA GLX server.
+    - Fixed an OpenGL bug that prevented conditional rendering from the
+      NV_conditional_render extension from correctly affecting CopyPixels.
+    - Improved the rendering performance of complex gradients.
+    - Fixed an X driver bug where the RandR CRTC panning area and tracking
+      area were not getting clamped to the current X screen size when
+      the RandR CRTC transitioned from disabled to enabled.
+    - Fixed an X driver bug where successful RandR X_RRSetScreenConfig
+      requests would update the server's RandR 'lastSetTime' too far,
+      potentially causing subsequent RandR requests to be unnecessarily
+      rejected.
+    - Fixed an X driver bug that caused GPUs to become inaccessible via
+      the NV-CONTROL X extension when no corresponding X screens could be
+      initialized.
+    - Generate a BadMatch error when applications attempt to create GLX
+      pixmaps using glXCreatePixmap() or glXCreateGLXPixmapWithConfigSGIX()
+      and the pixmap's depth doesn't match that of the specified GLXFBConfig.
+    - Honor a GPU UUID as the GPU qualifier for X configuration options that
+      allow GPU qualifiers (e.g. "MetaModes").
+    - Report GPU UUIDs in the X log when verbose logging is enabled in the
+      X server.
+    - Enabled conformant glBlitFrameBuffer() scissor test behavior by
+      default. A driver-provided application profile enables the previous
+      non-conformant behavior for applications that load libcogl, to work
+      around a bug in older versions of libcogl.
+      Application profiles can be added to enable the non-conformant behavior
+      for other applications that depend upon it. See the "Known Issues"
+      section of the README for more details.
+  * Refresh patches.
+  * Update symbols control files.
+  * Update lintian overrides.
+  * nvidia-detect [armhf]: Don't ship PCI ID lists for legacy drivers.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 04 Aug 2013 14:17:50 +0200
+
+nvidia-graphics-drivers (319.82-1) unstable; urgency=low
+
+  * New upstream long lived branch release 319.82 (2014-01-13).
+    - Fixed a bug which could sometimes corrupt a newly-created
+      thread's signal mask in multi-threaded applications that load
+      libGL.  (Closes: #728743)
+  * Disable armhf build, missing from upstream release.
+  * libcuda1 [i386]: Add Provides: libcuda-5.0-1-i386, libcuda-5.5-1-i386.
+  * Merge changes from wheezy 304.117-1 update.
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 16 Jan 2014 17:38:32 +0100
+
+nvidia-graphics-drivers (319.76-1) unstable; urgency=low
+
+  * New upstream long lived branch release 319.76 (2013-11-27).
+    - Added support for the following GPUs: GeForce GTX 780 Ti,
+      GeForce GTX 760 (192-bit), GeForce 820M, Tesla K40m, Tesla K40c,
+      Tesla K40st, Tesla K40s.
+  * Update nv-readme.ids.
+  * Add xorg-video-abi-15 as alternative dependency.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 01 Dec 2013 13:12:25 +0100
+
+nvidia-graphics-drivers (319.72-2) unstable; urgency=low
+
+  * Add libcuda1-i386:i386 package that can be recommended from amd64 packages
+    that want to make the 32-bit CUDA runtime available.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 29 Nov 2013 20:56:59 +0100
+
+nvidia-graphics-drivers (319.72-1) unstable; urgency=low
+
+  * New upstream long lived branch release 319.72 (2013-11-06).
+    - Added support for the following GPUs: Quadro K510M, Quadro K610M,
+      Quadro K1100M, Quadro K2100M, Quadro K3100M, Quadro K4100M,
+      Quadro K5100M, GeForce 705A, GeForce GT 730A.
+    - Fixed a bug that prevented SDI output from working when two or more
+      non-SDI displays were being driven by the same GPU.
+  * Update nv-readme.ids.
+  * linux-3.11.patch: Remove, fixed upstream.
+  * conftest.h: Implement new conftest.sh functions address_space,
+    address_space_init_once (331.20).
+  * libcuda1: Add Provides: libcuda-5.5-1.
+  * Update package descriptions.
+  * Update lintian overrides.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 09 Nov 2013 14:07:08 +0100
+
+nvidia-graphics-drivers (319.60-3) unstable; urgency=low
+
+  * linux-3.11.patch: Use patch from NVIDIA.
+  * conftest.h:
+    - Implement checks for linux/printk.h, linux/ratelimit.h,
+      linux/prio_tree.h (331.13).
+    - Implement new conftest.sh functions vm_operations_struct (331.13),
+      task_struct (331.17).
+  * nvidia-driver: Ship nvidia-debugdump.
+  * nvidia-driver: Ship /usr/share/nvidia/nvidia-application-profiles-$VER-rc.
+  * nvidia-driver.examples: Ship nvidia-persistenced init script templates.
+  * Bump Standards-Version to 3.9.5. No changes needed.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 03 Nov 2013 00:38:56 +0100
+
+nvidia-graphics-drivers (319.60-2) unstable; urgency=low
+
+  * {libgl1-nvidia-glx,libcuda1}.postinst: Load debconf/confmodule, may be
+    used by /usr/lib/nvidia/check* scripts.  (Closes: #722469)
+  * nvidia-cuda-mps: Symlink manpage as nvidia-cuda-mps-server.8.
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 22 Oct 2013 16:34:20 +0200
+
+nvidia-graphics-drivers (319.60-1) unstable; urgency=low
+
+  * New upstream long lived branch release 319.60 (2013-10-01).
+    - Fixed a bug that could cause OpenGL applications to crash during the
+      initialization of new threads.
+    - Fixed a bug that caused the X server to fail to start on certain laptops
+      when the boot display was on an external DisplayPort monitor, for example
+      if the laptop was booted while the lid was closed.
+    - Added support for the following GPU: GeForce GTX 760 Ti OEM.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * man-fixes-nvidia-smi.patch: Updated for newly added hyphens.
+  * Upload to unstable.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 21 Oct 2013 10:55:26 +0200
+
+nvidia-graphics-drivers (319.49-1) UNRELEASED; urgency=low
+
+  * New upstream long lived branch release 319.49 (2013-08-20).
+    - Fixed a bug that caused DisplayPort monitors connected to Quadro FX 3800,
+      4800, or 5800 to remain off after DPMS.
+    - Added the NVIDIA OpenGL-based Inband Frame Readback (NvIFROpenGL) library
+      to the Linux driver package. This library provides a high performance,
+      low latency interface to capture and optionally encode an individual
+      OpenGL framebuffer. NvIFROpenGL captures pixels rendered by OpenGL only
+      and is ideally suited to application capture and remoting.
+    - Fixed a bug that caused applications using CUDA-GL interop to crash
+      when run on X servers with Xinerama enabled.
+    - Fixed a bug that could prevent some double-bit ECC errors from being
+      properly reported.
+    - Fixed a bug which could cause a blank screen when changing house sync
+      settings on Quadro Kepler GPUs with Quadro Sync boards.
+    - Fixed a bug that prevented nested loops with identical loop conditions
+      in GLSL shaders from terminating correctly. This could cause hangs in
+      applications such as Exa PowerVIZ.
+    - Added support for the following GPUs: GeForce GT 740A, GeForce GT 745A,
+      GeForce GT 755M, GeForce GT 625, GeForce GTX 645, GRID K340, GRID K350,
+      NVS 315, Quadro K500M, Quadro K6000.
+    - Fixed a bug that resulted in corrupt texels when a previously empty
+      texture image was specified with glXBindTexImageEXT. In GNOME 3, this
+      caused gnome-screenshot to produce garbled window screenshots.
+    - Fixed a bug that caused the X server to crash when querying the current
+      mode of disabled displays.
+  * Update nv-readme.ids.
+  * linux-3.10-{i2c,procfs}.patch: Remove. Fixed upstream.
+  * libnvidia-ifr1: New package for NvIFROpenGL (libnvidia-ifr.so.1).
+  * VDPAU is now available on armhf, too.
+  * nvidia-detect [armhf]: Don't ship PCI ID lists for legacy drivers.
+  * Restrict watch file to releases from the 319.xx long lived branch.
+  * Merge changes from 304.108-4 and 313.30-3.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 15 Sep 2013 10:30:58 +0200
+
+nvidia-graphics-drivers (319.32-2) experimental; urgency=low
+
+  * Fix armhf build.
+  * Update lintian overrides for armhf.
+  * nvidia-alternative: Add support for arm-linux-gnueabihf, bump required
+    glx-alternative-nvidia version.
+  * Merge changes from 304.88-5 and 304.88-6.
+    Fixes kernel module building for kernel 3.10.  (Closes: #717184)
+  * Merge changes from 304.88-7 (UNRELEASED).
+  * Refresh patches.
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 01 Aug 2013 12:48:50 +0200
+
+nvidia-graphics-drivers (319.32-1) experimental; urgency=low
+
+  * New upstream long lived branch release 319.32 (2013-06-25).
+    - Fixed a bug that could cause the X server to crash after power-cycling
+      displays connected behind a DisplayPort 1.2 Multi-Stream Transport hub.
+    - Updated the application profile syntax to allow for multiple patterns
+      within a single rule. See the README for details.
+    - Fixed a bug that caused OpenGL programs to crash when the __GL_DOOM3
+      environment variable was set.
+    - Updated the NVIDIA driver to avoid calling fork(2) to execute the
+      nvidia-modprobe utility when not needed.
+    - Improved the error reporting of the nvidia-persistenced utility.
+    - Fixed a bug that could cause Altair HyperView to hang when rendering
+      animations with tensors.
+    - Fixed a performance regression in MEDINA 8.2.
+    - Fixed a bug that caused the OpenGL driver to hang sometimes when running
+      the SpeedTree Modeler application.
+    - Fixed a bug that could cause an OpenGL application to crash if it creates
+      and destroys multiple threads.
+    - Fixed a bug that caused corrupted window content in some cases when
+      moving GLX windows with antialiasing enabled.
+    - Fixed a bug that caused DisplayPort devices that failed link training to
+      be reported as connected rather than disconnected.
+    - Fixed a regression that could cause a DisplayPort device that was
+      connected to one connector to turn off when a DisplayPort device on a
+      different connector was connected or disconnected.
+    - Added support for the following GPUs: GeForce 710A, GeForce 720M.
+    - On Kepler-based GPUs, improved the appearance of the tearing that occurs
+      when using RandR 1.4's Source Output capability.  While tearing is still
+      expected, the tears should now appear as horizontal lines rather than more
+      noticeable checkerboard or triangular shapes.
+  * New upstream long lived branch release 319.23 (2013-05-23).
+    - Fixed a regression that could cause X to crash when querying GPU
+      information through NV-CONTROL on multi-GPU systems where some
+      GPUs failed to be initialized for X.
+    - Fixed a bug that could cause X to crash when using Vertex
+      Buffer Objects (VBOs) with indirect rendering.
+    - Fixed RandR panning reporting when the current MetaMode is smaller
+      than the X screen.
+    - Added support for the following GPUs: GeForce GTX 760, GeForce GTX 770,
+      GeForce GTX 780.
+    - Added the "ForceCompositionPipeline" and "ForceFullCompositionPipeline"
+      MetaMode options.  See the README for details.
+    - Added support for HDMI 4K resolutions. Using a 4K resolution with an
+      HDMI display requires a Kepler or later GPU.
+    - Added support in VDPAU for 4k resolution MPEG-1/2 and H.264 video
+      decoding, up to 4032x4048 for MPEG-1/2 and 4032x4080 for H.264,
+      and up to 65536 macroblocks for both.
+  * Update nv-readme.ids.
+  * Update lintian overrides.
+  * Update debian/copyright: Upstream license has changed §2.1.1.
+  * debian/{rules,watch}: Add armhf driver to generated .orig.tar.gz.
+  * debian/rules: Add support for armhf.
+  * debian/control: Enable building for armhf.
+  * Merge changes from 304.88-4.  (Closes: #710366)
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 04 Jul 2013 23:19:13 +0200
+
+nvidia-graphics-drivers (319.17-1) experimental; urgency=low
+
+  * New upstream long lived branch release 319.17 (2013-05-02).
+    - Fixed a regression that caused multiple BUG messages to be printed in
+      the kernel log on SMP systems.
+    - Fixed a bug that could cause the X server to crash when repeatedly
+      enabling and disabling displays.
+    - Added support for the following GPUs: GeForce GT 720M, GeForce GT 735M,
+      GeForce GT 740M, GeForce GT 745M, GeForce GT 750M, GeForce GTX 760M,
+      GeForce GTX 765M, GeForce GTX 770M, GeForce GTX 775M, GeForce GTX 780M.
+    - Added nvidia-persistenced, a daemon utility, to the driver package.
+      nvidia-persistenced can be installed to run on system startup or
+      manually run to allow the NVIDIA kernel module to keep persistent driver
+      state allocated when no other user-space NVIDIA driver components are
+      running.  This can improve startup time for other user-space NVIDIA
+      driver components.
+  * New upstream beta 319.12 (2013-04-09).
+    - Added initial support for restoration of efifb consoles on UEFI
+      systems where the primary display is driven over VGA or TMDS (e.g.
+      DVI, HDMI, or LVDS).
+    - Added support for the xorg.conf Monitor section options "Ignore",
+      "Enable", "Primary", and "Rotate".  For example, to rotate a monitor
+      identified by a specific EDID hash, one could add the following to
+      /etc/X11/xorg.conf or a file in /etc/X11/xorg.conf.d:
+        Section "Monitor"
+          Identifier "DPY-EDID-ee6cecc0-fa46-0c33-94e0-274313f9e7eb"
+          Option "Rotate" "left"
+        EndSection
+      See the README and the xorg.conf(5) man page for more information.
+    - Added support for the following GPU: GeForce GTX 650 Ti BOOST.
+    - Added support for application profiles to the NVIDIA client-side GLX
+      implementation. See the "Application Profiles" chapter of the README for
+      more information.
+    - Added the "PanningTrackingArea" and "PanningBorder" MetaMode attributes.
+    - Added support for RandR 1.3 panning.
+    - Improved performance when the Accel option is disabled.
+    - Added initial support for RandR 1.4 Provider objects with the Source
+      Output capability, which can be used to render the desktop on an NVIDIA
+      GPU and display it on an output connected to a provider with the Sink
+      Output capability, such as an Intel integrated graphics device or a
+      DisplayLink USB-to-VGA adapter.  See the README for details.
+    - Added nvidia-modprobe, a setuid root utility, to the driver package.
+      nvidia-modprobe can be used by user-space NVIDIA driver components
+      to make sure the NVIDIA kernel module is loaded and that the
+      NVIDIA character device files are present.  When possible,
+      it is recommended to use Linux distribution native mechanisms
+      for managing kernel module loading and device file creation.
+      This utility is provided as a fallback to work out-of-the-box in
+      a distribution-independent way.
+    - Fixed a memory leak that occurred when destroying a GLX window
+      but not its associated X window.
+    - Improved the performance of modesets in cases where the mode
+      timings remained the same, but other parameters of the mode
+      configuration, such as the ViewPort or panning domain, changed.
+    - Fixed an issue with RENDER convolution filters.  The driver will
+      no longer normalize filter kernels before accelerating them.
+    - Improved debuggability of the NVIDIA OpenGL libraries by
+      including proper stack unwinding information on all supported
+      architectures.
+    - Updated the dkms.conf file and the makefile for the NVIDIA Linux
+      kernel module to allow DKMS installations on systems with separate
+      source and output directories.
+    - Fixed a bug that caused RENDER Pictures to be sampled
+      incorrectly when using nearest filtering in some cases.
+    - Added support for the RandR "Border" and "BorderDimensions" Output
+      properties, which can be used to configure the ViewPortOut of an
+      RandR output.  This is functionally equivalent to the "ViewPortOut"
+      MetaMode token.
+    - Fixed a bug where RRGetCrtcInfo could report incorrect size
+      information when an RandR output has a custom ViewPortIn.
+    - Further improve performance of some versions of HyperMesh with
+      Quadro GPUs.
+    - Added support for dynamic mode management through RandR, e.g. via
+      the --newmode, --rmmode, and --delmode options in xrandr(1).
+    - Increased the number of pages that are shareable across multiple
+      processes in the x86 build of libnvidia-glcore.so, by reducing its
+      R_386_PC32 relocation count.
+    - Fixed a bug that caused XVideo applications to receive BadAlloc errors
+      after VT switches and mode switches that occurred while a composite
+      manager was running.
+    - Removed the X driver's support for "CursorShadow".
+    - Switched .run package compression from gzip to xz.  This provides a
+      higher level of compression.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * Refresh use-nv-kernel.o.ARCH.patch. Remove frequently changing context.
+  * nvidia-glx: Ship nvidia-persistenced.
+  * nvidia-kernel-{source,dkms}: Provide dummy conftest/patches.h, too.
+  * Rename package nvidia-cuda-proxy to nvidia-cuda-mps: Upstream has renamed
+    the programs nvidia-cuda-proxy-* to nvidia-cuda-mps-*.
+  * Rename metapackage nvidia-glx to nvidia-driver. Add transitional package.
+  * conftest.h:
+    - Implement check for drm/drmP.h (319.12).
+    - Implement new conftest.sh function drm_available (319.12).
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 14 May 2013 01:12:20 +0200
+
+nvidia-graphics-drivers (313.30-3) unstable; urgency=low
+
+  * Restrict watch file to releases from the 313.xx short lived branch.
+  * Merge changes from 304.108-4 and 310.51-1.
+  * Upload to unstable.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 20 Oct 2013 00:16:22 +0200
+
+nvidia-graphics-drivers (313.30-2) experimental; urgency=low
+
+  * Merge changes from 304.88-3 and 310.51 (UNRELEASED).
+  * Update lintian overrides.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 13 May 2013 02:41:43 +0200
+
+nvidia-graphics-drivers (313.30-1) experimental; urgency=low
+
+  * New upstream short lived branch release 313.30 (2013-04-02).
+    * Fixed CVE-2013-0131: NVIDIA UNIX GPU Driver ARGB Cursor Buffer
+      Overflow in "NoScanout" Mode.  This buffer overflow, which occurred
+      when an X client installed a large ARGB cursor on an X server
+      running in NoScanout mode, could cause a denial of service (e.g.,
+      an X server segmentation fault), or could be exploited to achieve
+      arbitrary code execution.  (Closes: #704547)
+      For more details, see:
+      http://nvidia.custhelp.com/app/answers/detail/a_id/3290
+  * Merge changes from 304.88-1 and 310.44 (UNRELEASED).
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 05 Apr 2013 03:57:30 +0200
+
+nvidia-graphics-drivers (313.26-1) experimental; urgency=low
+
+  * New upstream short lived branch release 313.26 (2013-03-05).
+    - Added support for the following GPU: GeForce GTX TITAN.
+  * Merge changes from 304.84-1 and 310.40 (UNRELEASED).
+  * Update nv-readme.ids.
+  * Update symbols control files.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 16 Mar 2013 13:15:10 +0100
+
+nvidia-graphics-drivers (313.18-2) experimental; urgency=low
+
+  * Update my email address and remove DMUA.
+  * libnvidia-encode1: New package for libnvidia-encode.so*.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 25 Jan 2013 17:41:07 +0100
+
+nvidia-graphics-drivers (313.18-1) experimental; urgency=low
+
+  * New upstream release 313.18 (2013-01-15).
+    - Added support in NV-CONTROL and in nvidia-settings for changing the
+      Double Precision performance boost mode on supported GPUs.
+    - Fixed several OpenGL driver bugs related to stencil-only framebuffer
+      objects.
+  * New upstream beta 313.09 (2012-12-11).
+    - Updated the NVIDIA X driver to reprobe displays when VT-switching to
+      X, to allow reporting of hotplug events when displays are connected
+      or disconnected while VT-switched away from X.
+    - Added unofficial GLX protocol support (i.e for GLX indirect rendering)
+      for the following extension and core commands.
+      GL_ARB_vertex_array_object
+      OpenGL 3.0 commands ClearBufferfi, ClearBufferfv, ClearBufferiv,
+      ClearBufferuiv and GetStringi.
+    - Fixed a bug that caused the cursor shadow to be clipped to 32x32
+      pixels, even on Kepler GPUs that support a 256x256 cursor image.
+    - Fixed a bug that prevented some cursor image updates from taking
+      effect on displays with rotation or other transformations applied.
+    - Fixed cursor alpha blending artifacts on displays with rotation
+      or other transformations applied.
+    - Added support for the GLX_EXT_buffer_age extension.
+    - Improved the performance of glDrawPixels() by up to 450% when the pixel
+      data is of type GL_BYTE.
+  * Merge changes from 310.32 (UNRELEASED).
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * Update lintian overrides.
+  * Add xorg-video-abi-14 as alternative dependency.
+  * nvidia-detect: Add PCI ID list for the 304.64 driver in wheezy.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 16 Jan 2013 21:07:03 +0100
+
+nvidia-graphics-drivers (310.51-1) unstable; urgency=low
+
+  * New upstream long lived branch release 310.51 (2013-05-08).
+    - Fixed a bug where RRGetCrtcInfo could report incorrect size
+      information when an RandR output has a custom ViewPortIn.
+    - Fixed a regression that could cause an X server crash when performing
+      a modeset (e.g. changing resolutions, transformation settings, or
+      display layout) when some connected display devices are disabled.
+  * Merge changes from 304.108-4.
+  * Refresh patches.
+  * Upload to unstable.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 18 Oct 2013 03:50:09 +0200
+
+nvidia-graphics-drivers (310.44-1) UNRELEASED; urgency=low
+
+  * New upstream long lived branch release 310.44 (2013-04-02).
+    * Fixed CVE-2013-0131: NVIDIA UNIX GPU Driver ARGB Cursor Buffer
+      Overflow in "NoScanout" Mode.  This buffer overflow, which occurred
+      when an X client installed a large ARGB cursor on an X server
+      running in NoScanout mode, could cause a denial of service (e.g.,
+      an X server segmentation fault), or could be exploited to achieve
+      arbitrary code execution.
+      For more details, see:
+      http://nvidia.custhelp.com/app/answers/detail/a_id/3290
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 05 Apr 2013 02:41:13 +0200
+
+nvidia-graphics-drivers (310.40-1) UNRELEASED; urgency=low
+
+  * New upstream long lived branch release 310.40 (2013-03-08).
+    - Reduced the amount of time needed to establish framelock in some
+      stereo configurations with many monitors.
+    - Added support for the following GPUs: GeForce G205M, GeForce GT 240M LE,
+      GeForce 405M, GeForce 610, GeForce 615, GeForce 620M, GeForce GT 625M,
+      GeForce GT 625 (OEM), GeForce GT 635, GeForce 705M, GeForce 710M,
+      GeForce GT 710M, GeForce GT 720A, GeForce GT 730M, Tesla X2070,
+      Tesla S2050, Tesla K20s.
+    - Fixed a bug where glXSwapIntervalEXT failed to set a swap interval
+      value of zero in certain situations.
+  * New upstream long lived branch release 310.32 (2013-01-21).
+    - Fixed a bug when enabling framelock between displays connected to
+      the same GPU as other displays with different refresh rates, which
+      caused the latter to be incorrectly assigned to the framelock group.
+    - Updated the reporting of HDMI 3D framerates and pixel clocks to be
+      more consistent with how they are reported by HDMI 3D displays.
+    - Fixed a bug that could cause applications using GL_NV_vdpau_interop
+      to crash during modeswitches.
+    - Fixed a regression that could cause OpenGL applications to crash
+      while compiling shaders.
+    - Added a kernel module parameter, "NVreg_EnablePCIeGen3", which can be
+      used to enable PCIe gen 3 when possible. Note that on many systems
+      where the NVIDIA driver does not allow PCIe gen 3 by default,
+      stability problems can be expected when this option is enabled: users
+      should do so at their own risk.
+    - Fixed a VDPAU bug that could cause the X server to hang when decoding
+      some corrupted video streams.
+    - Added support for the following GPUs: Quadro K600, Quadro K2000,
+      Quadro K2000D, Quadro K4000, GeForce GTX 680MX, Tesla K20Xm.
+    - Renamed VGX products to GRID products in the "Supported NVIDIA GPU
+      Products" list.
+    - Added support for X.org xserver ABI 14 (xorg-server 1.14).
+    - Fixed libnvidia-encode.so library dependency by linking it with
+      libnvcuvid.so.1 instead of libnvcuvid.so while creating it.
+    - Improved performance of OpenGL framebuffer object binds with Xinerama
+      enabled by 2000-3000% when the application's windows do not span screen
+      boundaries.
+    - Fix performance issues when using some versions of HyperMesh with Quadro
+      GPUs.
+  * Restrict watch file to releases from the 310.xx long lived branch.
+  * Update nv-readme.ids.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 10 Mar 2013 17:57:05 +0100
+
+nvidia-graphics-drivers (310.19-1) experimental; urgency=low
+
+  * New upstream release 310.19 (2012-11-13).
+  * Merge changes from 304.64-4.
+  * Drop kernel-3.7.patch, fixed upstream.
+  * Fix debian/module/debian/kernel-version to cope with $KSRC/linux/version.h
+    being moved to $KSRC/include/generated/uapi/linux/version.h in Linux 3.7.
+    (Closes: #696570)
+  * nvidia-cuda-proxy: New package for nvidia-cuda-proxy-{control,server}.
+  * libxvmcnvidia1: Drop package, the library was removed by upstream as it is
+    only for legacy GPUs supported by the legacy-304xx driver.
+  * nvidia-libopencl1: Prefer nvidia-opencl-icd over opencl-icd.
+    (Closes: #695883)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 10 Jan 2013 13:25:30 +0100
+
+nvidia-graphics-drivers (310.14-1) experimental; urgency=low
+
+  * New upstream beta 310.14 (2012-10-15).
+    - Implemented workarounds for two Adobe Flash bugs by applying libvdpau
+      commit ca9e637c61e80145f0625a590c91429db67d0a40 to the version of libvdpau
+      shipped with the NVIDIA driver.
+    - Fixed an issue which affected the performance of moving windows of VDPAU
+      applications when run in some composite managers.
+    - Added unofficial GLX protocol support (i.e., for GLX indirect rendering)
+      for the GL_ARB_pixel_buffer_object OpenGL extension.
+    - Added support for HDMI 3D Stereo with Quadro Kepler and later GPUs. See
+      the documentation for the "Stereo" X configuration option in the README
+      for details.
+    - Added experimental support for OpenGL threaded optimizations, available
+      through the __GL_THREADED_OPTIMIZATIONS environment variable. For more
+      information, please refer to the "Threaded Optimizations" section in
+      chapter "Specifying OpenGL Environment Variable Settings" of the README.
+    - Improved performance and responsiveness of windowed OpenGL applications
+      running inside a Unity session.
+  * New upstream release 304.15.00.02 (2012-08-06).
+    - Added support for OpenGL 4.3.
+  * Upstream has dropped support for several old chips, e.g. GeForce 6xxx/7xxx
+    (they will be supported by the legacy-304xx driver until end of 2017).
+  * Add NEWS entry about models that were moved to legacy support.
+  * Update nv-readme.ids.
+  * Refresh use-nv-kernel.o.ARCH.patch.
+  * Drop fix-typos.patch, fixed upstream.
+  * libXvMCNVIDIA.so.1 is gone, was only supported on GeForce 6/7 series.
+  * Update symbols control files.
+  * conftest.h:
+    - Implement checks for linux/efi.h and linux/nvmap.h (310.14).
+    - Implement new conftest.sh functions outer_flush_all, nvmap_support, and
+      efi_enabled (310.14).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 17 Oct 2012 19:54:34 +0200
+
+nvidia-graphics-drivers (304.131-1) wheezy; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.131 (2015-11-16).
+    * Fixed CVE-2015-7869: Unsanitized User Mode Input.  (Closes: #805917)
+    - Fixed a bug that could cause texture corruption in some OpenGL
+      applications when video memory is exhausted by a combination of
+      simultaneously running graphical and compute workloads.
+    - Added support for X.Org xserver ABI 20 (xorg-server 1.18).
+    * Improved compatibility with recent Linux kernels.
+  * Add xorg-video-abi-20 as alternative dependency.
+  * conftest.h:
+    - Implement new conftest.sh functions hlist_for_each_entry,
+      of_parse_phandle, for_each_online_node, node_end_pfn (358.09).
+    - Update conftest.sh function scatterlist for logic reversal in
+      304.131/340.96/352.63, support both ways.
+  * debian/control: Add Breaks between mismatching upstream versions of
+    libcuda1 and nvidia-alternative to prevent partial upgrades. 
+  * Upload to wheezy.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 14 Dec 2015 09:53:49 +0100
+
+nvidia-graphics-drivers (304.128-1) wheezy; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.128 (2015-08-31).
+    * Fixed CVE-2015-5950: Memory corruption due to an unsanitized pointer.
+      (Closes: #800566)
+    * Improved compatibility with recent Linux kernels.
+  * libgl1-nvidia-glx: Add Provides+Conflicts:
+    libgl1-nvidia-glx-${nvidia:Version} to forbid co-installation of
+    libgl1-nvidia-legacy-304xx-glx from the same upstream version due to file
+    conflicts on versioned files that are not handled via alternatives.
+  * conftest.h:
+    - Implement new conftest.sh functions file_inode, drm_pci_set_busid
+      (340.76).
+    - Implement check for linux/log2.h (346.16).
+    - Implement check for xen/ioemu.h (346.59).
+    - Implement new conftest.sh functions write_cr4, xen_ioemu_inject_msi
+      (346.59), list_cut_position (349.12).
+    - Implement new conftest.sh functions backing_dev_info (346.82),
+      phys_to_dma, dma_ops, get_dma_ops, noncoherent_swiotlb_dma_ops (352.09).
+    - Implement new conftest.sh function dma_map_ops (352.30).
+    - Reorder conftest.h to match conftest.sh.
+    - Implement new conftest.sh function nvidia_grid_build (352.41).
+  * bug-script: Synchronize with unstable (340.93-4).
+  * Update lintian overrides.
+  * Upload to wheezy.
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 15 Oct 2015 12:39:53 +0200
+
+nvidia-graphics-drivers (304.125-1) wheezy; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.125 (2014-12-05).
+    * Fixes CVE-2014-8298.  (Closes: #772971)
+    - Added support for X.Org xserver ABI 19 (xorg-server 1.17).
+    - Improved compatibility with recent Linux kernels.
+    - Implemented support for disabling indirect GLX context creation using
+      the -iglx option available on X.Org server release 1.16 and newer.  Note
+      that future X.Org server releases may make the -iglx option the default.
+      To re-enable support for indirect GLX on such servers, use the +iglx
+      option.
+    - Added the "AllowIndirectGLXProtocol" X config option.  This option can
+      be used to disallow use of GLX protocol.  See "Appendix B. X Config
+      Options" in the README for more details.
+  * Refresh patches.
+  * Add xorg-video-abi-19, xorg-video-abi-18 as alternative dependencies.
+  * conftest.h:
+    - Implement new conftest.sh function acpi_op_remove (304.123).
+    - Implement new conftest.sh functions kbasename, fatal_signal_pending
+      (331.38).
+    - Implement new conftest.sh function kuid_t (331.49).
+    - Implement new conftest.sh function pm_vt_switch_required (331.67).
+    - Implement new conftest.sh function console_lock (331.79).
+    - Tighten check for drm/drmP.h.
+    - DRM is only supported on Linux >= 3.9.
+    - Implement new conftest.sh functions sg_table, sg_alloc_table (340.46).
+    - Implement extensions to conftest.sh function vm_operations_struct
+      (343.13).
+    - Implement check for drm/drm_gem.h (340.58).
+    - Implement new conftest.sh functions pci_save_state (340.58), follow_pfn,
+      fault_flags, atomic64_type (346.16).
+  * Add changelog entries from etch and squeeze updates.
+  * Upload to wheezy.
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 16 Dec 2014 21:38:22 +0100
+
+nvidia-graphics-drivers (304.123-1) UNRELEASED; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.123 (2014-07-10).
+    - Improved compatibility with recent Linux kernels.
+    - Fixed a bug that could result in system instability while restoring
+      the VGA console.
+    - Fixed an interaction problem with xserver 1.15 that occasionally caused
+      OpenGL applications to continue rendering when they are minimized or
+      unmapped.
+    - Updated nvidia-bug-report.sh to search the systemd journal for X
+      server logs and messages from the NVIDIA kernel module.
+    - Added support for X.org xserver ABI 18 (xorg-server 1.16).
+    - Fixed a bug that caused corruption or blank screens on monitors that use
+      EDID version 1.3 or older when they are connected via DisplayPort on
+      graphics boards that use external DisplayPort encoders, such as the Quadro
+      FX 4800.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 28 Sep 2014 20:46:10 +0200
+
+nvidia-graphics-drivers (304.121-1) UNRELEASED; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.121 (2014-03-11).
+    - Improved compatibility with recent Linux kernels.
+    - Fixed a bug that prevented the NVIDIA implementation of the Xinerama
+      extension protocol requests from being used when RandR was enabled.
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 22 Apr 2014 02:02:57 +0200
+
+nvidia-graphics-drivers (304.119-1) UNRELEASED; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.119 (2014-01-23).
+    - Fixed a crash when using WebGL in Firefox with a Geforce 6 GPU.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 15 Feb 2014 16:49:54 +0100
+
+nvidia-graphics-drivers (304.117-1) wheezy; urgency=medium
+
+  * New upstream legacy 304xx branch release 304.117 (2013-12-11).
+    - Added support for X.org xserver ABI 15 (xorg-server 1.15).
+  * New upstream legacy 304xx branch release 304.116 (2013-11-06).
+    - Fixed a security vulnerability in the microcode for microcontrollers
+      that are part of NVIDIA GPUs.  This vulnerability could be exploited
+      to take control of a system, and it is described in greater detail at:
+      http://cve.mitre.org/cgi-bin/cvename.cgi?name=2013-5987
+      (Closes: #735271)
+    - Improved compatibility with recent Linux kernels.
+    - Updated the NVIDIA OpenGL driver to write temporary files to $TMPDIR
+      if it is set, instead of unconditionally writing to /tmp.
+    - Updated a fallback of writing temporary files to $HOME/.nvidia to
+      use $HOME/.nv instead, as the latter path is already used for other
+      NVIDIA driver related files.
+  * Refresh patches.
+  * conftest.h:
+    - conftest.h: Add ARM support.
+    - Implement check for drm/drmP.h (319.12).
+    - Implement new conftest.sh functions drm_available (319.12),
+      dom0_kernel_present (325.08),
+      proc_create_data, pde_data, proc_remove (304.108, 325.15).
+    - Implement conftest.sh sanity checks (only emit warning)
+      nvidiafb_sanity_check (1.0-8174), xen_sanity_check (1.0-9746, 177.76),
+      preempt_rt_sanity_check (325.08).
+    - Implement new conftest.sh function get_num_physpages (173.14.38).
+    - Implement checks for linux/printk.h, linux/ratelimit.h,
+      linux/prio_tree.h (331.13).
+    - Implement new conftest.sh functions vm_operations_struct (331.13),
+      task_struct (331.17), address_space, address_space_init_once (331.20).
+  * Add xorg-video-abi-15 as alternative dependency.
+  * Merge some bugfixes from sid.
+  * Use canonical Vcs-* URLs.
+  * {libgl1-nvidia-glx,libcuda1}.postinst: Load debconf/confmodule, may be
+    used by /usr/lib/nvidia/check* scripts.  (Closes: #722469)
+  * debian/module/debian/prep-modules: Sanitize the kernel version. Replace
+    underscores (may occur in custom kernels) with dashes to be eligible for
+    package names and versions.  (Closes: #710891)
+  * Update lintian overrides.
+  * Upload to wheezy.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 15 Feb 2014 16:11:02 +0100
+
+nvidia-graphics-drivers (304.108-4) unstable; urgency=low
+
+  * Make libgl1-nvidia-glx-i386:i386 a real package depending on
+    libgl1-nvidia-glx:i386 and set M-A: foreign, s.t. the Recommends in
+    libgl1-nvidia-glx:amd64 actually works.  (Closes: #720058)
+  * bug-script: List the renamed nvidia*.ko modules, too.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 16 Sep 2013 14:19:54 +0200
+
+nvidia-graphics-drivers (304.108-3) unstable; urgency=low
+
+  * Rework patching after unpack: rename
+      debian/patches-manual => debian/patches, series => series-postunpack.
+  * conftest.h:
+    - Implement new conftest.sh function get_num_physpages (173.14.38).
+  * linux-3.11.patch: Redone, based on 173.14.38.
+  * Bump glx-alternative-nvidia dependency to 0.4.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 15 Sep 2013 16:36:24 +0200
+
+nvidia-graphics-drivers (304.108-2) unstable; urgency=low
+
+  * Stop building libxvmcnvidia1 package, now built from
+    src:nvidia-graphics-drivers-legacy-304xx.
+  * libgl1-nvidia-glx (<< 310) and libgl1-nvidia-legacy-304xx-glx are not
+    co-installable due to libnvidia-tls.so.304.108.  (Closes: #722288)
+  * Change the virtual package name providing the kernel module to follow the
+    renamed module.
+
+ -- Andreas Beckmann <anbe@debian.org>  Wed, 11 Sep 2013 05:37:09 +0200
+
+nvidia-graphics-drivers (304.108-1) unstable; urgency=low
+
+  * New upstream legacy 304xx branch release 304.108 (2013-08-08).
+    * Add support for Linux 3.10.
+  * Rename patches.
+  * linux-3.10-{i2c,procfs}.patch: Remove, fixed upstream.
+  * debian/module/debian/prep-modules: Sanitize the kernel version. Replace
+    underscores (may occur in custom kernels) with dashes to be eligible for
+    package names and versions.  (Closes: #710891)
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 22 Aug 2013 03:03:09 +0200
+
+nvidia-graphics-drivers (304.88-7) unstable; urgency=low
+
+  * Add new substvars ${nvidia-alternative}, #NVIDIA_ALTERNATIVE#.
+  * Rename the kernel module to nvidia-current.ko but retain its internal name
+    as 'nvidia'.
+  * nvidia{,-legacy-*}-kernel-dkms are now co-installable.  (Closes: #685617)
+  * nvidia-alternative:
+    - Add /etc/nvidia/nvidia-modprobe.conf (with the nvidia alias) and a slave
+      alternative /etc/modprobe.d/nvidia.conf to the nvidia alternative.
+      (Closes: #685648)
+    - Provides: ${nvidia-alternative}--kmod-alias.
+  * nvidia-kernel-dkms, nvidia-kernel-#KVERS#: Depend on
+    ${nvidia-alternative}--kmod-alias.
+  * nvidia-libopencl1: Provide virtual package libopencl-1.1-1 and update
+    description.
+  * nvidia-libopencl1.symbols: Change the dependency template to always
+    generate a Depends: ocl-icd-libopencl1 | libopencl1, libopencl-1.1-1.
+    (Closes: #717606)
+  * nvidia-libopencl1.shlibs: Removed in favor of doing the same in .symbols.
+  * nvidia-libopencl1.links: Stop shipping libOpenCL.so, will be moved to
+    nvidia-opencl-dev.
+  * nvidia-opencl-icd: Depend on
+      ocl-icd-libopencl1 | nvidia-libopencl1 | libopencl1
+    for more deterministic libopencl1 installation.  (Closes: #695883)
+  * libgl1-nvidia-glx.symbols: Change the dependency template to always
+    generate a Depends: libgl1-mesa-glx | libgl1 and stop manipulating the
+    .shlibs.
+  * libgl1-nvidia-glx:i386: Check for problematic stray /usr/lib32/libGL.so*
+    via Depends: nvidia-installer-cleanup (>= 20130816).  (Closes: #719915)
+  * Don't explicitly request xz compression - dpkg 1.17 does this by default.
+  * Drop empty Description paragraphs that worked around dpkg bug #680871.
+  * conftest.h:
+    - Implement check for drm/drmP.h (319.12).
+    - Implement new conftest.sh functions drm_available (319.12),
+      dom0_kernel_present (325.08),
+      proc_create_data, pde_data, proc_remove (304.108, 325.15).
+    - Implement conftest.sh sanity checks (only emit warning)
+      nvidiafb_sanity_check (1.0-8174), xen_sanity_check (1.0-9746, 177.76),
+      preempt_rt_sanity_check (325.08).
+  * kernel-3.10-{i2c,procfs}.patch: Replace with patches backported from
+    304.108.
+  * kernel-3.11.patch: New patch to fix compilation with Linux 3.11-rc.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sat, 17 Aug 2013 14:41:44 +0200
+
+nvidia-graphics-drivers (304.88-6) unstable; urgency=low
+
+  * kernel-3.10-{i2c,procfs}.patch: New patches to fix compilation with
+    Linux 3.10.  (Closes: #717311, #717361, #714981)
+  * Documentation updates.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 22 Jul 2013 12:52:11 +0200
+
+nvidia-graphics-drivers (304.88-5) unstable; urgency=low
+
+  * nvidia-kernel-source: Compress source tarball with xz. Update B-D, Depends
+    accordingly and Break older module-assistant versions.
+  * conftest.h: Add ARM support.
+  * nvidia-detect: Add support for jessie and 304xx legacy driver series.
+  * debian/control: Drop dependency versioning if satisfied in oldstable.
+  * Do not install nvidia-libopencl1.symbols in favor of redirecting to the
+    virtual libopencl1 via nvidia-libopencl1.shlibs.
+  * debian/rules: Generic handling of architecture lists, unpacking, renaming,
+    and blob dependencies.
+  * Convert module build system to use a more Kbuild friendly way.
+    - Turn debian/module/Makefile into a minimal wrapper.
+    - Rename NVIDIA's Makefile.kbuild to Kbuild.
+    - Use SYSSRC (NVIDIA's variable name) as kernel header override.
+    - Disable silent build.
+  * avoid-ld.gold.patch: Updated.
+  * use-nv-kernel.o.ARCH.patch: Renamed to ...
+  * use-nv-kernel-ARCH.o_shipped.patch: ... and updated.
+  * not-silent.patch: New.
+  * linux3.patch: Removed, obsolete.
+  * Add new substvars nvidia:kmod:source, nvidia:kmod:binary,
+    nvidia:kmod:Description for declaring kernel module relationships.
+  * Change the generic nvidia-kernel-{dkms,source} name to insert a legacy
+    part after 'nvidia' instead of after 'kernel'.
+  * Add support for renaming the kernel module to include a "legacy" part.
+
+ -- Andreas Beckmann <anbe@debian.org>  Mon, 15 Jul 2013 09:29:44 +0200
+
+nvidia-graphics-drivers (304.88-4) unstable; urgency=low
+
+  * Rename metapackage nvidia-glx to nvidia-driver. Add transitional package.
+  * Use new '${nvidia}' substvar instead of 'nvidia${nvidia:Legacy}'.
+  * debian/rules: Generalize control file renaming for legacy builds.
+  * Rename package nvidia-cuda-proxy to nvidia-cuda-mps: Upstream has renamed
+    the programs nvidia-cuda-proxy-* to nvidia-cuda-mps-* in release 319.xx.
+  * libcuda1: Add Suggests: nvidia-cuda-mps.
+  * libcuda1: Add Provides: libcuda-5.0-1.
+  * nvidia-libopencl1: Prefer nvidia-opencl-icd over opencl-icd.
+  * Drop support for backporting to squeeze.
+  * NEWS: Drop news items concerning upgrades to squeeze.
+  * debian/rules: Apply patches from debian/patches-manual/ after unpacking.
+  * man-fixes-nvidia-smi.patch: New patch, fix hyphen vs. minus sign,
+    wrapping, and spelling in nvidia-smi manpage.
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 04 Jul 2013 17:32:45 +0200
+
+nvidia-graphics-drivers (304.88-3) unstable; urgency=low
+
+  * nvidia-cuda-proxy: New package for nvidia-cuda-proxy-{control,server}.
+  * nvidia-kernel-source: rules: Use placeholder substitution for the source
+    package name. src:nvidia-graphics-modules rewrites control, s.t. this
+    cannot be parsed correctly for inserting into Built-Using.
+  * nvidia-alternative: Add slave alternatives for nvidia-settings.
+    (Closes: #688753)
+  * Recommend nvidia-settings (>= MAJOR).
+  * Use canonical Vcs-* URLs.
+  * Bump Standards-Version to 3.9.4. No changes needed.
+  * Drop transitional packages.  (Closes: #687506)
+  * Drop Conflicts/Breaks/Replaces against packages predating wheezy.
+  * Drop cleanup code targeting squeeze and wheezy from maintainer scripts.
+  * Update lintian overrides.
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 12 May 2013 23:44:53 +0200
+
+nvidia-graphics-drivers (304.88-2) unstable; urgency=low
+
+  * Update lintian overrides.
+  * libcuda1: Add missing Depends: nvidia-support. Postinst may fail if
+    nvidia-support is unpacked, but not configured.  (Closes: #675430)
+
+ -- Andreas Beckmann <anbe@debian.org>  Thu, 02 May 2013 12:20:20 +0200
+
+nvidia-graphics-drivers (304.88-1+deb7u1) wheezy; urgency=low
+
+  * Update lintian overrides.
+  * libcuda1: Add missing Depends: nvidia-support. Postinst may fail if
+    nvidia-support is unpacked, but not configured.  (Closes: #675430)
+
+ -- Andreas Beckmann <anbe@debian.org>  Sun, 12 May 2013 14:31:45 +0200
+
+nvidia-graphics-drivers (304.88-1) unstable; urgency=low
+
+  * New upstream legacy 304xx branch release 304.88 (2013-04-02).
+    - Fixed CVE-2013-0131: NVIDIA UNIX GPU Driver ARGB Cursor Buffer
+      Overflow in "NoScanout" Mode.  This buffer overflow, which occurred
+      when an X client installed a large ARGB cursor on an X server
+      running in NoScanout mode, could cause a denial of service (e.g.,
+      an X server segmentation fault), or could be exploited to achieve
+      arbitrary code execution.  (Closes: #704547)
+      For more details, see:
+      http://nvidia.custhelp.com/app/answers/detail/a_id/3290
+    * Fixes display turned off on VT text consoles.  (Closes: #703313)
+
+ -- Andreas Beckmann <anbe@debian.org>  Tue, 02 Apr 2013 22:43:31 +0200
+
+nvidia-graphics-drivers (304.84-1) unstable; urgency=low
+
+  * New upstream legacy 304xx branch release 304.84 (2013-03-04).
+    - Improved compatibility with recent Linux kernels.
+    - Fixed a bug that could lead to rendering corruption after an X
+      server generation (i.e., leaving an X server running after all
+      of its clients have exited).  (Closes: #700121, #696839, #702918)
+    - Fixed a bug that could cause the X server to crash when performing
+      an RandR 1.0 rotation (e.g., `xrandr --orientation left`) after
+      unplugging the last connected monitor.
+    - Added support for X.org xserver ABI 14 (xorg-server 1.14).
+    - Fixed font rendering performance and corruption problems on X servers with
+      backported support for the new glyph cache functionality added to Pixman
+      0.27.
+    - Fixed a potential X server crash during initialization, when a
+      graphics card with a TV connector has no TV connected.
+    - Added a new X configuration option, "UseHotplugEvents", to allow the
+      suppression of RandR events when adding or removing non-DisplayPort
+      displays. See the "X Config Options" appendix of the README for details.
+  * Add xorg-video-abi-14 as alternative dependency.
+  * kernel-3.7.patch: Remove, fixed upstream.
+  * Fix debian/module/debian/kernel-version to cope with $KSRC/linux/version.h
+    being moved to $KSRC/include/generated/uapi/linux/version.h in Linux 3.7.
+    (Closes: #696570)
+  * nvidia-vdpau-driver: Move to Section: non-free/video.  (See #700666)
+  * README.alternatives: Document to run
+    'dpkg-reconfigure glx-alternative-nvidia'
+    after running 'update-alternatives --config nvidia'.  (See #702782)
+  * README.Debian: Add information about reporting upstream bugs to NVIDIA.
+  * Add copyright information to the nvidia-detect script originally written
+    by Filipus Klutiero for the wiki page.
+  * patch-3.0-rt-nvidia.patch: Remove, disabled since 304.30-2.
+  * Put my patches into the public domain, they get applied to the kernel
+    module source that is under a non-free license from NVIDIA.
+  * Update my email address and remove DMUA.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 15 Mar 2013 11:23:39 +0100
+
+nvidia-graphics-drivers (304.64-5) UNRELEASED; urgency=low
+
+  * Dummy.
+
+ -- Andreas Beckmann <anbe@debian.org>  Fri, 15 Mar 2013 11:23:39 +0100
+
+nvidia-graphics-drivers (304.64-4) unstable; urgency=low
+
+  * nvidia-detect: Fix detection of Debian 7.0 (wheezy).  (Closes: #697282)
+  * kernel-3.7.patch: New patch to fix compilation with Linux 3.7 (which
+    replaced VM_RESERVED by VM_DONTEXPAND | VM_DONTDUMP).  (Closes: #697061)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 08 Jan 2013 11:44:34 +0100
+
+nvidia-graphics-drivers (304.64-3) unstable; urgency=low
+
+  * Add libxvmcnvidia1 package for the libXvMCNVIDIA*.so.1 library that was
+    previously included in libgl1-nvidia-glx. The libgl1-nvidia-glx package
+    was split in order to remove the libxvmc1 dependency and make it multiarch
+    co-installable.  (Closes: #676723, #685054, #686033, #688714)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 20 Dec 2012 19:35:54 +0100
+
+nvidia-graphics-drivers (304.64-2) unstable; urgency=low
+
+  * Always use the upstream changelog from the x86_64 release to avoid minor
+    differences causing multiarch conflicts.  (Closes: #692644)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 08 Nov 2012 19:48:43 +0100
+
+nvidia-graphics-drivers (304.64-1) unstable; urgency=low
+
+  * New upstream long lived branch release 304.64 (2012-11-06).
+    - Fixed a regression in backlight control functionality on some
+      notebook configurations.
+    - Fixed a performance issue with recent Linux kernels when allocating
+      and freeing system memory.
+    - Fixed a bug that prevented X driver gamma manipulation from working
+      after a VT-switch on some configurations.
+    - Added the option "--output-file" to nvidia-bug-report.sh to allow
+      specifying a custom filename for the log file.
+    - Fixed a hang when using OpenGL programs with some SLI Mosaic
+      configurations on pre-Fermi GPUs.
+    - Added sections to the "Supported NVIDIA GPU Products" list for NVS,
+      Tesla, and VGX products.
+    - Added support for the following GPUs: VGX K1, VGX K2, Tesla K20c,
+      Tesla K20m.
+  * Update nv-readme.ids.
+  * conftest.h: Implement new conftest.sh function set_memory_array_uc.
+  * build-module-packages.sh: Build modules only for the variant (current or
+    legacy-abcxx) that shipped the script.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 07 Nov 2012 10:14:11 +0100
+
+nvidia-graphics-drivers (304.60-1) unstable; urgency=low
+
+  * New upstream long lived branch release 304.60 (2012-10-18).
+    - Fixed a bug that caused the EIZO FlexScan SX2762W monitor to remain blank
+      when connected via DisplayPort.
+    - Fixed a bug that caused applications to stop rendering or the X server to
+      hang in Xinerama configurations when windows were moved, resized, mapped,
+      or unmapped.
+    - Fixed a bug that caused poor OpenGL performance on GeForce 6 and 7 PCI
+      cards.
+    - Fixed a bug that caused the X server to crash if a display was put into
+      DPMS off mode and subsequently re-enabled while screen transformations
+      are in use.
+    - Fixed a bug that caused the X Resize and Rotate extension to be enabled
+      when Xinerama is enabled.  These two X extensions are incompatible and
+      having them both enabled can confuse window managers such as KDE's kwin.
+      RandR is now correctly disabled when Xinerama is enabled.
+    - Fixed a bug causing OpenGL stereo applications to not work properly
+      when using passive stereo modes 5 through 9 on Quadro Fermi and newer
+      GPUs.
+    - Added support for the "Backlight" RandR output property for
+      configuring the brightness of some notebook internal panels.
+    - Fixed a bug that prevented the Ubuntu Unity launcher panel from
+      unhiding: https://bugs.launchpad.net/unity/+bug/1057000
+    - Fixed a bug that caused incorrect input transformation after resizing
+      an NVIDIA X screen with xserver ABI 12 (xorg-server 1.12) or newer.
+    - Fixed a bug that caused GLX to leak memory when Xinerama is
+      enabled.
+  * Upload to unstable.
+  * Restrict watch file to releases from the 304.xx long lived branch.
+  * libgl1-nvidia-glx:i386: Breaks: ia32-libs (<< 1:0), versioning was fixed.
+  * Fix missing legacy substitution.
+  * Revert libxvmc1 dependency downgrade HACK.
+  * libgl1-nvidia-glx: Stop shipping libXvMCNVIDIA*.so.1 to avoid dependency
+    on libxvmc1 (which is not yet converted to multiarch, see #640499), making
+    libgl1-nvidia-glx multiarch co-installable.
+  * conftest.h:
+    - Implement checks for linux/efi.h and linux/nvmap.h (310.14).
+    - Implement new conftest.sh functions outer_flush_all, nvmap_support, and
+      efi_enabled (310.14).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 20 Oct 2012 18:41:50 +0200
+
+nvidia-graphics-drivers (304.51-1) experimental; urgency=low
+
+  * New upstream long lived branch release 304.51 (2012-09-24).
+    - Added support for the following GPUs: GeForce GT 645M,
+      GeForce GTX 670MX, GeForce GTX 675MX, GeForce GTX 650 Ti.
+    - Added support for the new Quadro Sync board for Quadro Kepler GPUs.
+      See the "Configuring Frame Lock and Genlock" chapter in the README
+      for details.
+    - Fixed an X server crash on X.Org xserver 1.13 when it is compiled
+      without support for DRI2.
+    - Fixed a regression that broke color controls on older X servers.
+    - Fixed a bug that prevented panning from working correctly after a
+      modeswitch on some X servers with support for cursor constraining.
+    - Gamma ramp and colormap adjustments now apply correctly when screen
+      transformations such as rotation and keystone correction are in use.
+    * Closes: #688660.
+  * Update nv-readme.ids.
+  * Upload to experimental.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 27 Sep 2012 08:25:18 +0200
+
+nvidia-graphics-drivers (304.48-2) unstable; urgency=low
+
+  * libgl1-nvidia-glx-ia32: readd Depends: libgl1-nvidia-alternatives-ia32 to
+    prevent apt from removing libgl1-nvidia-alternatives-ia32 (which would
+    remove the diversions) while the old (pre-transitional)
+    libgl1-nvidia-glx-ia32 is still installed.  (Closes: #688659)
+  * get-orig-source: Fix caching for legacy drivers.
+  * bug-control: Report version info about revived
+    libgl1-nvidia-legacy-96xx-glx-ia32.
+  * libgl1-nvidia-glx:i386: Apply crude HACK to downgrade libxvmc1 dependency
+    to Recommends. Fixes multiarch installation of libgl1-nvidia-glx:amd64
+    with libgl1-nvidia-glx:i386. (See: #676723, #685054, #686033, #688714)
+    A proper fix will be splitting libxvmcnvidia1 from libgl1-nvidia-glx.
+  * Upgrade nvidia-settings relationship from Suggests to Recommends and use a
+    substvar for the name of the compatible nvidia-settings package.
+  * libgl1-nvidia-glx:i386: Add Breaks: ia32-libs (= 20120926) as the version
+    in squeeze-proposed-updates is now newer than the version in sid.
+  * There is no need to exclude squeeze-backports from using xz compression.
+  * Update lintian overrides.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 27 Sep 2012 07:52:51 +0200
+
+nvidia-graphics-drivers (304.48-1) unstable; urgency=low
+
+  * New upstream long lived branch release 304.48 (2012-09-11).
+    - Fixed RandR per-CRTC gamma persistence across modeswitches and
+      VT-switches.
+    - Fixed a bug that caused the X server to sometimes hang in response to
+      input events.  (Closes: #684941)
+    - Fixed a reduction in rendering performance for core X11 rendering on
+      certain GPUs that occurred in the 290.* series of releases.
+    - Fixed a bug that prevented PowerMizer from working correctly on
+      some boards with GDDR5 memory, such as some GeForce GT 240 SKUs.
+    - Added support for the following GPUs: GeForce GTX 660, GeForce GTX 650.
+    - Fixed a bug that caused OpenGL applications to not animate properly
+      when a rotation or a transformation was applied on some older X
+      server versions.
+    - Enabled FXAA with Unified Back Buffers.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * get-orig-source: Skip downloading if cached files are in ../.cache/
+  * Switch .deb compression to xz, saves 13 MB (24 %) on amd64.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 12 Sep 2012 12:23:09 +0200
+
+nvidia-graphics-drivers (304.43-1) unstable; urgency=low
+
+  * New upstream long lived branch release 304.43 (2012-08-27).
+    - Fixed a bug that caused pre-release versions of X.Org xserver 1.13 to
+      crash when certain GLX operations were performed, such as when starting
+      Firefox.
+    - Fixed a bug that caused VDPAU to hang when expanding the YouTube
+      Flash Player.
+    - Fixed a bug that prevented the display palette from being updated
+      immediately after an application called XStoreColors.
+    - Added support for the following GPUs: GeForce GTX 660 Ti,
+      Quadro K5000, Quadro K5000M, Quadro K4000M, Quadro K3000M, NVS 510.
+    * Closes: #684123.
+  * Update nv-readme.ids.
+  * conftest.h:
+    - Implement check for linux/screen_info.h (302.17).
+    - Implement check for linux/kconfig.h (304.30).
+    - Implement new conftest.sh function acpi_os_wait_events_complete
+      (304.43).
+  * 3.6_kernel.patch: Remove, fixed upstream.
+  * bug-control: Report installed versions of libgl1-nvidia-alternatives-ia32,
+    libgl1-nvidia{,-legacy-173xx}-glx-ia32, and ia32-libs.
+  * libgl1-nvidia-glx: The 302+ drivers add many features not supported by
+    older releases of nvidia-settings, therefore add
+    Breaks: nvidia-settings (<< 304), nvidia-settings-legacy-173
+  * {libgl1-nvidia-glx,libcuda1,nvidia-vdpau-driver,nvidia-opencl-icd}-ia32:
+    Add NEWS file describing the steps needed to install the multiarch :i386
+    nvidia packages on amd64.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sun, 09 Sep 2012 04:11:49 +0200
+
+nvidia-graphics-drivers (304.37-1) unstable; urgency=low
+
+  * New upstream long lived branch release 304.37 (2012-08-13).
+    - Removed the ability to enable SLI on GPUs with ECC enabled.
+    - Fixed several bugs that prevented some RandR transform geometries from
+      being applied.
+    - Fixed a bug that caused frequent hangs or crashes on some systems.
+      (Closes: #686092, #667684)
+    - Fixed a bug that would cause corruption and performance issues in certain
+      OpenGL applications such as Amnesia: The Dark Descent on GeForce 6 and 7
+      GPUs.
+  * New upstream release 295 series.
+    * CVE-2012-4225  (Closes: 684781)
+    - Implemented hotfix for a privilege escalation vulnerability reported on
+      August 1, 2012.  For more details, see:
+      http://nvidia.custhelp.com/app/answers/detail/a_id/3140
+  * nvidia-kernel-source: Add Built-Using attribute to the generated module
+    packages to record the exact versions of linux and nvidia-graphics-drivers
+    that were used during the build.
+  * libgl1-nvidia-glx:i386: Add Breaks: ia32-libs (<< 20120701) because that
+    is shipping /usr/lib32/libGL.so.1 which gets no longer diverted away.
+  * 3.6_kernel.patch: New patch to fix compilation with Linux 3.6, taken from
+    rpmfusion.  (Closes: #684486)
+  * nvidia-kernel-dkms: Set Multi-Arch: foreign (instead of allowed).
+  * Add nvidia-kernel-dkms (= ${binary:Version}) as preferred alternative to
+    (virtual) nvidia-kernel-${nvidia:Version}.  (Closes: #684782)
+  * Upload to unstable.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 14 Aug 2012 09:36:31 +0200
+
+nvidia-graphics-drivers (304.32-1) experimental; urgency=low
+
+  * New upstream beta 304.32 (2012-08-03).
+    - Fixed a bug that caused applications that use DirectColor visuals, such as
+      Enemy Territory: Quake Wars and Braid, to appear in shades of blue instead
+      of the correct colors.  (Closes: #683758)
+    - Modified handling of RRSetScreenSize requests to ignore requests that
+      do not actually resize the screen.  This reduces screen flicker in certain
+      cases when using GNOME.
+  * debian/rules: get-orig-source: Make --pasv overridable.
+  * Add xorg-video-abi-13 as alternative dependency.
+  * Update symbols control files.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 04 Aug 2012 14:41:00 +0200
+
+nvidia-graphics-drivers (304.30-2) experimental; urgency=low
+
+  * Disable patch-3.0-rt-nvidia.patch, no longer needed.
+  * Add legacy qualification to nvidia-settings suggestion.
+  * nvidia-opencl-icd: Ship new library libnvidia-opencl.so.1 and tighten
+    dependency on nvidia-opencl-common and libnvidia-compiler.
+    (Closes: #683678)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 03 Aug 2012 13:41:12 +0200
+
+nvidia-graphics-drivers (304.30-1) experimental; urgency=low
+
+  * New upstream beta 304.30 (2012-07-30).
+    - Added support for xserver ABI 13 (xorg-server 1.13).
+    - Added support for RandR per-CRTC gamma manipulation through the
+      RandR 1.2 RRGetCrtcGammaSize, RRGetCrtcGamma, and RRSetCrtcGamma
+      requests.
+    - Fixed a bug that caused RRSetOutputPrimary requests to incorrectly
+      generate BadValue errors when setting the primary output to None.  This
+      caused gnome-settings-daemon to crash after changing the screen
+      configuration in response to a display hotplug or the display change
+      hot-key being pressed.
+    - Fixed a problem where RENDER Glyphs operations would exhibit severe
+      performance issues in certain cases, such as when used with gradients
+      by Cairo and Chromium.
+    - Fixed a bug that caused X to hang when resuming certain DisplayPort
+      display devices (such as Apple brand mini-DisplayPort to dual-link DVI
+      adapters) from power-saving mode.
+    - Added support for the following GPU: Tesla K10.
+    - Fixed a bug that caused an X screen to be extended to Quadro SDI Output
+      devices by default.  An X screen will still use an SDI Output device if
+      it is the only display device available.  To use a SDI Output device on
+      an X screen with other display devices available, include the SDI Output
+      device with either the "UseDisplayDevice" or "MetaMode" X configuration
+      options.
+    - Updated X11 modeline validation such that modes not defined in a
+      display device's EDID are discarded if the EDID 1.3 "GTF Supported"
+      flag is unset or if the EDID 1.4 "Continuous Frequency" flag is
+      unset.  The new "AllowNonEdidModes" token for the ModeValidation
+      X configuration option can be used to disable this new check.
+    - Fixed a bug, introduced in the 295.xx release series, with EDID
+      detection on some laptop internal panels.  This bug caused the
+      laptop internal panel to show six small copies of the desktop.
+      (Closes: #681453)
+    - Added support for FXAA, Fast Approximate Anti-Aliasing.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * xserver-xorg-video-nvidia.postrm: Do not fail if the debconf templates
+    from nvidia-support are not available.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 31 Jul 2012 11:36:58 +0200
+
+nvidia-graphics-drivers (304.22-1) experimental; urgency=low
+
+  * New upstream beta 304.22 (2012-07-13).
+    - Added support for the following GPUs: GeForce GTX 680M, Quadro K1000M,
+      Quadro K2000M.
+    - Enhanced the functionality of the IncludeImplicitMetaModes X
+      configuration option:
+      + Implicit MetaModes will be added for the primary display device,
+        even if multiple display devices are in use when X is initialized.
+      + Implicit MetaModes will be added for common resolutions, even
+        if there isn't a mode with that resolution in the mode pool of
+        the display device.
+      + Extended the syntax of the IncludeImplicitMetaModes X
+        configuration option, e.g., to control which display device is
+        used for creation of implicit MetaModes.
+      See the description of the IncludeImplicitMetaModes X configuration
+      option in the README for details.
+    - Modified the handling of the RandR 1.0/1.1 requests RRGetScreenInfo
+      and RRSetScreenConfig (e.g., `xrandr -q --q1` and `xrandr --size ...`
+      and `xrandr --orientation ...`) such that they operate on MetaModes.
+      This was the behavior in NVIDIA X driver versions 295.xx and
+      earlier, but 302.xx releases altered the handling of these RandR
+      1.0/1.1 requests to operate on a single RandR output's modes.
+    - With the above changes to IncludeImplicitMetaModes and RandR 1.0/1.1
+      handling, fullscreen applications (e.g., SDL-based applications,
+      Wine), should have more resolutions available to them, and should
+      interact better with multiple monitor configurations.
+    - Fixed a bug that could cause G8x, G9x, and GT2xx GPUs to display a black
+      screen or corruption after waking up from suspend.  (Closes: #679577)
+    - Fixed several bugs that could cause some OpenGL programs to hang
+      when calling fork(3).
+    - Fixed an nvidia-settings bug that caused the results of ProbeDisplays
+      queries made with the --display-device-string option to be formatted
+      incorrectly.
+    - Improved the responsiveness of updates to the nvidia-settings
+      control panel when displays are hotplugged.
+    - Fixed a bug that caused display corruption when setting some
+      transforms, especially when panning a transformed display.
+    - Fixed a bug that caused extra RandR events to be generated the first
+      time a display is hotplugged.
+    - Fixed a bug that caused X11 modelines with '@' in their names to
+      be rejected.
+    - Added support for DisplayPort 1.2 branch devices, which allow multiple
+      displays to be connected to a single DisplayPort connector on a graphics
+      board.
+    - Fixed a bug that caused most OpenGL texture uploads to be slow when
+      the context was bound rendering to an RGB overlay drawable.
+    - Fixed a bug that caused audio over HDMI to not work after restarting
+      the X server on some MCP7x (IGP) GPUs.
+    - Updated the X configuration option "UseDisplayDevice" to honor the
+      value "none" on any GPU.
+    - Added support for DKMS in nvidia-installer. Installing the kernel
+      module through DKMS allows the module to be rebuilt automatically
+      when changing to a different Linux kernel. See the README and the
+      nvidia-installer help text for the "--dkms" option.
+    - Added RandR output properties _ConnectorLocation, ConnectorNumber,
+      ConnectorType, EDID, _GUID, and SignalFormat.  See the README for details
+      on these properties.
+    - Extended support for Base Mosaic to all G80+ SLI configurations with up
+      to three displays.
+    - Fixed a bug that caused some monitors to fail to wake from DPMS suspend
+      mode when multiple DisplayPort monitors were attached to one GPU.
+    - Removed controls for XVideo attributes from the "X Server XVideo
+      Settings" page of the nvidia-settings control panel. XVideo attributes
+      can be configured in XVideo player applications, or through utilities
+      such as xvattr.
+    - Fixed a bug that caused all ports on an XVideo adaptor to share
+      color correction settings.
+    - Removed support for the following X configuration options:
+         SecondMonitorHorizSync
+         SecondMonitorVertRefresh
+       Similar control is available through the NVIDIA HorizSync and
+       VertRefresh X configuration options.  Please see the NVIDIA driver
+       README for details.
+    - Fixed a bug that prevented NVIDIA 3D Vision Pro from working
+      properly when switching between X servers on different VTs.
+    * Closes: #682618
+  * Upload to experimental.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * Update lintian overrides.
+  * Work around dpkg-gencontrol bug #659814.
+  * Convert *-ia32 into transitional packages due to ia32-libs transition:
+    - $pkg:i386 Provides: $pkg-i386
+    - $pkg-ia32 Recommends: $pkg-i386
+    - Add multiarch instructions to long descriptions.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 17 Jul 2012 19:29:40 +0200
+
+nvidia-graphics-drivers (302.17-3) unstable; urgency=low
+
+  * nvidia-smi: Add missing Depends: libnvidia-ml1.  (Closes: #679332)
+  * nvidia-detect: squeeze-backports now has 295.59.
+  * nvidia-detect: wheezy does not have legacy 96xx.
+  * nvidia-libopencl1: Provides/Conflicts/Replaces: libopencl1.
+    (Closes: #679047)
+  * xserver-xorg-video-nvidia.{config,postinst}: Present a debconf note about
+    needing manual Xorg configuration to enable the nvidia driver.
+  * xserver-xorg-video-nvidia.postrm: Present a debconf note if the driver was
+    removed, but it is still enabled in xorg.conf(.d/).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 30 Jun 2012 18:04:03 +0200
+
+nvidia-graphics-drivers (302.17-2) unstable; urgency=low
+
+  * Upload to unstable.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 26 Jun 2012 10:48:21 +0200
+
+nvidia-graphics-drivers (302.17-1) experimental; urgency=low
+
+  * New upstream release 302.17 (2012-06-15).
+    - Made nvidiaXineramaInfoOrder consistent with the RRSetOutputPrimary
+      and RRGetOutputPrimary RandR requests: changes to either
+      nvidiaXineramaInfoOrder or RandR OutputPrimary will be reflected in
+      the other.
+    - Fixed an interaction problem between RandR 1.2, ConstrainCursor,
+      and panning that prevented panning from working properly.
+    - Fixed a bug that caused RandR RRNotify_CrtcChange events to not
+      be generated when switching between MetaModes with the same total
+      size but different layout of display devices.  This bug caused
+      some window managers to not update their layouts in response to
+      switching same-sized MetaModes.
+    - Added support for desktop panning when rotation, reflection,
+      or transformation is applied to a display device (either through
+      RandR or through the MetaMode syntax); panning would previously be
+      ignored in that case.
+    - Added an "EDID" property to RandR 1.2 outputs.  This property contains the
+      binary contents of the connected monitor's extended display identification
+      data, which allows applications such as the GNOME display properties
+      dialog to query information about it.
+    - Fixed a bug that caused audio over HDMI to not work on some GPUs
+      after querying the RandR configuration (e.g., `xrandr -q`).
+    - Added the "nvidiaXineramaInfo" X configuration option to report
+      the layout of multiple display devices within an X screen.  This is
+      enabled by default.  When disabled on X servers with RandR 1.2
+      support, the NVIDIA X driver will report one screen-sized region.
+      When disabled on X servers without RandR 1.2 support, no Xinerama
+      information will be reported.  For backwards compatibility, the
+      "NoTwinViewXineramaInfo" option disables nvidiaXineramaInfo.
+    - Added the "nvidiaXineramaInfoOrder" X configuration option as
+      a replacement for "TwinViewXineramaInfoOrder".  For backwards
+      compatibility, "TwinViewXineramaInfoOrder" is kept as a synonym for
+      "nvidiaXineramaInfoOrder".
+    - Added the "nvidiaXineramaInfoOverride" X configuration option as
+      a replacement for "TwinViewXineramaInfoOverride".  For backwards
+      compatibility, "TwinViewXineramaInfoOverride" is kept as a synonym
+      for "nvidiaXineramaInfoOverride".
+    - Fixed a bug that prevented the use of some SLI Mosaic topologies.
+    - Added the "MetaModeOrientation" X configuration option as a
+      replacement for "TwinViewOrientation".  "TwinViewOrientation"
+      is kept as a synonym for "MetaModeOrientation", for backwards
+      compatibility.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 21 Jun 2012 11:51:48 +0200
+
+nvidia-graphics-drivers (302.11-1) experimental; urgency=low
+
+  * New upstream beta 302.11 (2012-05-19).
+    - Added support for calculating the physical size and DPI of each
+      RandR 1.2 Output using the EDID Detailed Timing Description.
+    - Fixed a bug that prevented a workaround for the invalid EDID in certain
+      AUO laptop flat panels from being applied, leading to an 800x600 desktop
+      repeated several times across the screen.
+    - Fixed a bug that caused the link configuration of DisplayPort devices to
+      be reported incorrectly in nvidia-settings.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 21 May 2012 22:36:02 +0200
+
+nvidia-graphics-drivers (302.07-1) experimental; urgency=low
+
+  * New upstream beta 302.07 (2012-05-02).
+    - Fixed a bug that caused OpenGL programs to leak file descriptors
+      when calling exec() on themselves.
+    - Fixed rendering corruption at the start of new X server generation.
+      (Closes: #651155)
+    - Added X driver support for RandR 1.2 and RandR 1.3.  See "Support
+      for the X Resize and Rotate Extension" in the README for details.
+    - Extended the MetaMode X configuration option syntax with the
+      following new attributes:
+        "Rotation"    : specifies the display device's rotation
+        "Reflection"  : specifies the display device's reflection
+        "Transform"   : specifies a 3x3 transformation matrix to be
+                        applied to the display device
+        "ViewPortOut" : specifies the region of the mode in which to
+                        display pixels
+        "ViewPortIn"  : specifies the size of the region in the X screen
+                        to display in the ViewPortOut
+      For example, "DFP-0: nvidia-auto-select { Rotation=left }".
+      See "Configuring Multiple Display Devices on One X Screen" in the
+      README for details.
+    - Removed the "TwinView" X configuration option; the functionality
+      it provided is now enabled by default.
+      Previously, the NVIDIA X driver only enabled one display device
+      for an X screen unless "TwinView" was enabled.  Now, the NVIDIA
+      X driver enables, by default, as many display devices as the
+      GPU supports driving simultaneously.  To limit how many display
+      devices are driven by an X screen, use the "UseDisplayDevice"
+      X configuration option.
+    - Added a "CurrentMetaMode" attribute to the nvidia-settings command
+      line, to query and set the current MetaMode.
+      As an example, these two commands are equivalent:
+        xrandr --output DVI-I-2 --mode 1280x1024 --pos 0x0 \
+               --output DVI-I-3 --mode 1920x1200 --pos 1280x0
+        nvidia-settings --assign CurrentMetaMode=\
+                "DVI-I-2: 1280x1024 +0+0, DVI-I-3: 1920x1200 +1280+0"
+    - Removed overscan compensation configurability from NV-CONTROL and
+      nvidia-settings. This can be configured, with finer granularity,
+      through the ViewPortIn and ViewPortOut MetaMode attributes.
+      See "Configuring Multiple Display Devices on One X Screen" in the
+      README for details.
+    - Altered mode validation such that for digital display devices
+      the X driver only allows, by default, modes which are reported in
+      the EDID.  Previously, the NVIDIA X driver allowed other modes,
+      but implicitly scaled those other modes to one of the EDID modes.
+      Now, only the modes in the EDID are validated and the X driver
+      does not do any implicit scaling.  Any desired scaling can be
+      configured explicitly through the new "ViewPortIn" and "ViewPortOut"
+      MetaMode attributes.  See "Configuring Multiple Display Devices
+      on One X Screen" in the README for details.
+    - Removed Flat Panel Scaling configurability in nvidia-settings.
+      Any desired scaling can be configured through the new "ViewPortIn"
+      and "ViewPortOut" MetaMode attributes.
+    - Hotplug events (specifically, the RRNotify_OutputChange RandR
+      event) are now generated when display devices are connected and
+      disconnected from the GPU.  Many desktop environments automatically
+      resize the X desktop in response to these events.
+    - Added display device name aliases, such that X configuration options
+      that use display device names can refer to a display device by one of
+      several names, including the RandR Output name for the display
+      device.  The X log reports the list of aliases for each display device.
+    - Updated EDID parsing to include more complete support for EDID 1.4
+      and more recent versions of CEA-861.
+    - Removed the "Rotate" X configuration option.  This was used to
+      statically rotate the X screen.  Its functionality is replaced by
+      the "Rotation" MetaMode attribute and RandR 1.2 rotation support.
+      See the README for details.
+    - Removed the "RandRRotation" X configuration option.  This enabled
+      configurability of X screen rotation via RandR 1.1.  Its functionality
+      is replaced by the "Rotation" MetaMode attribute and RandR 1.2
+      rotation support.  See the README for details.
+    - Removed support for the following NV-CONTROL attributes:
+        NV_CTRL_GPU_SCALING
+        NV_CTRL_GPU_SCALING_DEFAULT_TARGET
+        NV_CTRL_GPU_SCALING_DEFAULT_METHOD
+        NV_CTRL_DFP_SCALING_ACTIVE
+        NV_CTRL_GPU_SCALING_ACTIVE
+        NV_CTRL_FRONTEND_RESOLUTION
+        NV_CTRL_BACKEND_RESOLUTION
+        NV_CTRL_OVERSCAN_COMPENSATION
+        NV_CTRL_FLATPANEL_BEST_FIT_RESOLUTION
+    - Improved rendering performance for RENDER bitmap text.
+    - Enabled the OpenGL "Sync to VBlank" option by default.
+    - Expose the following additional FSAA modes via NV-CONTROL,
+      nvidia-settings, and through X visuals and GLXFBConfigs:
+        16X multisample FSAA on all GeForce GPUs
+        Coverage sample FSAA on G80 and above GeForce GPUs
+        32X multisample FSAA on G80 and above Quadro GPUs
+        64X multisample FSAA on Fermi and above Quadro GPUs
+    - Enabled conformant texture clamping by default in OpenGL.
+    - Removed support for the GVO Clone mode NV-CONTROL attributes:
+        NV_CTRL_GVO_DISPLAY_X_SCREEN
+        NV_CTRL_GVO_X_SCREEN_PAN_X
+        NV_CTRL_GVO_X_SCREEN_PAN_Y
+    - Updated the NVIDIA X driver's handling of X configuration options
+      that affect an entire GPU, not just a particular X screen running
+      on a GPU (e.g., "NoPowerConnectorCheck"): for such X configuration
+      options, the X driver will now honor the option on any of the X
+      screens configured on the GPU.  Prior to this change, the NVIDIA
+      X driver only honored such options on the first X screen configured
+      on a GPU.
+    - Added a checkbox to nvidia-settings to control the texture clamping
+      attribute.  When the box is checked, OpenGL textures are clamped
+      according to the OpenGL specification.  When it is unchecked, GL_CLAMP
+      is remapped to GL_CLAMP_TO_EDGE for borderless 2D textures.
+  * Upload to experimental.
+  * Update symbols control files.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 09 May 2012 13:45:27 +0200
+
+nvidia-graphics-drivers (295.59-1) unstable; urgency=low
+
+  * New upstream long-lived branch release 295.59 (2012-06-11).
+    - Disabled the use of certain OpenGL optimizations with Autodesk Maya
+      and Mudbox, due to conflicts between these applications and the
+      optimizations. Some performance loss in Autodesk Maya and Mudbox is
+      possible, as a result.
+    - Added support for the following GPUs: GeForce GT 620M, GeForce GT 640M,
+      GeForce GT 640M LE, GeForce GT 650M, GeForce GTX 660M, GeForce GTX 670M,
+      GeForce GTX 675M, GeForce GTX 555, GeForce GTX 560 SE, GeForce GT 415,
+      GeForce GTX 460 v2, NVS 5400M, NVS 310, Quadro 410.
+    - Fixed a behavior issue where redundant DPMS state transitions were
+      leading to unexpected screen blanking on DisplayPort displays.
+  * Update nv-readme.ids.
+  * bug-script: report all /lib/modules/.../nvidia.ko and their version.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 15 Jun 2012 10:50:03 +0200
+
+nvidia-graphics-drivers (295.53-1) unstable; urgency=low
+
+  * New upstream long-lived branch release 295.53 (2012-05-16).
+    - Added support for the following GPUs: GeForce GTX 670, GeForce 605,
+      GeForce GT 610, GeForce GT 630, GeForce GT 640, GeForce GT 645.
+    - Fixed a bug affecting some G-Sync configurations which could cause
+      active stereo content to be inverted on some display devices.
+  * Update nv-readme.ids.
+  * conftest.h: implement check for asm/system.h (295.53).
+  * kernel-3.4.patch: remove, fixed upstream.
+  * Add lintian overrides for hardening-*.
+  * bug-script: report traces of Ubuntu ld.so.conf.d GL configuration.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 21 May 2012 21:44:34 +0200
+
+nvidia-graphics-drivers (295.49-1) unstable; urgency=low
+
+  * New upstream long-lived branch release 295.49 (2012-05-03).
+    - Added support for the following GPU: GeForce GTX 690.
+    - Fixed a problem where starting, stopping, and moving OpenGL application
+      windows was very slow on Quadro FX 4600, Quadro FX 5600, GeForce 8800
+      GTX, GeForce 8800 GTS, and GeForce 8800 Ultra.
+    - Fixed an OpenGL performance regression which affected Geforce 6 and
+      Geforce 7 series integrated GPUs.  (Closes: #668854)
+  * Update nv-readme.ids.
+  * Update lintian overrides.
+  * nvidia-vdpau-driver: Add Breaks against pre-multiarch libvdpau1.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 09 May 2012 10:02:50 +0200
+
+nvidia-graphics-drivers (295.40-1) unstable; urgency=medium
+
+  * New upstream long-lived branch release 295.40 (2012-04-11).
+    - Closed a security vulnerability which made it possible for attackers to
+      reconfigure GPUs to gain access to arbitrary system memory. For further
+      details, see: http://nvidia.custhelp.com/app/answers/detail/a_id/3109
+      CVE-2012-0946
+    - Fixed a bug that caused DisplayPort devices to occasionally fail to turn
+      back on after the system is resumed from suspend.
+    - Added a ModeValidation X configuration option token,
+      "AllowNon3DVisionModes", to allow modes that are not optimized for
+      NVIDIA 3D Vision to be validated on 3D Vision monitors.
+    - Added support for the following GPUs: GeForce GT 635M, GeForce 610M.
+  * Set urgency to medium for security bugfix.
+  * Update nv-readme.ids.
+  * Update lintian overrides.
+  * conftest.h:
+    - Implement new conftest.sh function pci_get_domain_bus_and_slot (290.06).
+    - Implement new conftest.sh function set_memory_uc and simplify functions
+      set_pages_uc, change_page_attr (295.09).
+    - Kernel versions of symbol (dis-)appearance from lxr.
+   * New patch kernel-3.4.patch to fix the module build with kernel 3.4 which
+     has split and removed asm/system.h.  Based on patch from Antonio Ospite.
+     (Closes: #667719)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 12 Apr 2012 19:56:08 +0200
+
+nvidia-graphics-drivers (295.33-2) unstable; urgency=low
+
+  * New patch patch-3.0-rt-nvidia.patch taken from Arch Linux: support
+    building the kernel module for RT kernels.  (Closes: #641654)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 04 Apr 2012 13:24:26 +0200
+
+nvidia-graphics-drivers (295.33-1) unstable; urgency=low
+
+  * New upstream long-lived branch release 295.33 (2012-03-22).
+    - Added support for the following GPUs: GeForce GTX 680, GeForce GT 630M,
+      GeForce GT 620.
+    - Fixed a VDPAU bug where decoding some H.264 streams would cause hardware
+      errors on lower-end products, resulting in corruption and poor
+      performance.
+    - Fixed a bug that caused DisplayPort audio to stop working after monitors
+      are hotplugged on GeForce GT 520.
+    - Improved compatibility with recent Linux kernels.
+    - Fixed a behavior change that prevented ConnectedMonitor from being usable
+      with DisplayPort connectors.
+    - Marked the GVO Clone mode NV-CONTROL attributes:
+        NV_CTRL_GVO_DISPLAY_X_SCREEN
+        NV_CTRL_GVO_X_SCREEN_PAN_X
+        NV_CTRL_GVO_X_SCREEN_PAN_Y
+      as deprecated.  They will be removed in a future release.  To display
+      an X screen over GVO, it is recommended to use GVO with MetaModes,
+      instead.
+    - Fixed a bug that caused DisplayPort devices to not be listed in
+      Xorg.*.log.  For example, if only DisplayPort devices are attached, the
+      log file would contain
+        (--) NVIDIA(0): Connected display device(s) on NVIDIA GPU at PCI:2:0:0
+        (--) NVIDIA(0):     none
+    - Added support for 3D Vision ready displays that have a NVIDIA 3D Vision
+      infrared emitter built inside the panel itself.
+    - Fixed a bug that caused OpenGL applications to crash with some libc
+      versions, such as eglibc 2.15.  (Closes: #660189)
+    - Fixed a bug that caused HDMI audio to stop working on AppleTV devices when
+      an X server was started.
+  * Add missing upstream changelog entries in 295.20 and earlier releases.
+  * Update nv-readme.ids.
+  * Update symbols control files.
+  * Add xorg-video-abi-12 as alternative dependency and bump xserver-xorg-core
+    dependency accordingly to be usable with Xorg Xserver 1.12 RC1.
+  * Update to Standards-Version: 3.9.3.
+  * Use the final copyright-format/1.0 URL.
+  * Reorder debian/copyright and use the Comment: field for extra information.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 23 Mar 2012 14:19:45 +0100
+
+nvidia-graphics-drivers (295.20-1) unstable; urgency=low
+
+  * New upstream long-lived branch release 295.20 (2012-02-13).
+    (Closes: #659855)
+    - Fixed a bug that caused black areas to appear on the back faces of
+      some models in Maya.
+    - Fixed a bug that resulted in the printing of spurious loader error
+      messages.
+    - Fixed a bug that could cause X to crash after hotplugging displays.
+    - Fixed a bug which caused face selections to be misrendered in
+      Maya when using the paint selection tool.
+    - Improved performance for interactive tools in Mudbox.
+  * New upstream beta 295.17 (2012-01-31).
+    - Fixed a bug that could cause some OpenGL applications (including
+      desktop environments like KDE and GNOME Shell) to hang.
+    - Fixed a bug that prevented the internal panel from working on some
+      laptops with GeForce 7 series GPUs.  (Closes: #652995)
+  * New upstream release 275 series.
+    - Added support for the following GPU: NVS 5200M
+    - Added support for deleting SDI audio ancillary data packets when a video
+      frame is dropped on a Quadro SDI Output device.  See the
+      NV_CTRL_GVO_ANC_BLANKING attribute in NVCtrl.h for details.  This option
+      can be set via the "GvoAudioBlanking" attribute in nvidia-settings.
+    - Added support for xserver 1.11.99.901 (also known as 1.12 RC1).
+  * Upload to unstable.
+  * Bump debhelper dependency to 9.
+  * debian/rules: Switch to dh --with dkms.
+  * Redirect bug reports against module binary packages to
+    nvidia-kernel-source.
+  * nvidia-đetect: Support querying a PCI ID given on the command line instead
+    of autodetecting an installed NVIDIA GPU.
+  * Add some notes about the 'EQ overflowing...' error to the README.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 15 Feb 2012 21:35:57 +0100
+
+nvidia-graphics-drivers (295.09-1) experimental; urgency=low
+
+  * New upstream beta 295.09 (2011-12-27).
+    - Fixed an OpenGL bug where using display lists on Fermi-based GPUs
+      could result in missing rendering in some cases.
+    - Fixed an OpenGL bug that caused incorrect rendering when using
+      framebuffer objects to render to 16-bit color textures with
+      alpha.
+    - Added support for the following GPU: Tesla X2090.
+    - Fixed two bugs that caused sporadic application crashes in some multi-
+      threaded OpenGL applications.
+    - Fixed a bug that caused creating OpenGL 4.2 contexts
+      with glXCreateContextAttribsARB to fail.
+    - Fixed a bug that caused OpenGL to print
+        Xlib:  extension "NV-GLX" missing on display ":0".
+      when used with a non-NVIDIA implementation of the GLX X extension.
+    - Implemented color depth 30 (10 bits per component) support for GeForce 8
+      series and higher GPUs.
+    - Implemented support for constraining cursors to the visible regions of
+      connected displays; see the "ConstrainCursor" X Option in the README for
+      details.
+  * New upstream long-lived branch release 275.43 (2011-12-14).
+    - Fixed a bug that would cause Firefox to abort on pages with Flash when
+      layers acceleration was force-enabled on Linux and Solaris.
+    - Fixed a bug that caused a crash when glDrawArrays was used with a non-VBO
+      vertex attribute array to draw on a Xinerama screen other than screen 0
+      using an indirect GLX context.
+  * Upload to experimental.
+  * Refresh use-nv-kernel.o.ARCH.patch.
+  * Update symbols control files.
+  * Update nv-readme.ids.
+  * Update lintian overrides.
+  * nvidia-detect: Add IDs for the 275.xx package in squeeze-backports and
+    suggest the backported package for newer GPUs that don't work in squeeze.
+  * Fix debian/module/debian/kernel-version to report the correct version for
+    using in the package name.  Try $KSRC/include/generated/utsrelease.h
+    before $KSRC/include/config/kernel.release (which has changed in 3.1).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 03 Jan 2012 16:02:43 +0100
+
+nvidia-graphics-drivers (290.10-1) unstable; urgency=low
+
+  * New upstream release 290.10 (2011-11-22).
+    - Fixed a bug that would cause OpenGL applications to crash when run
+      with recent releases of glibc such as glibc 2.14.90.
+    - Improved the performance of FBO bind operations when using Xinerama by
+      ~30% in some cases.
+    - Fixed a bug that could cause stereo corruption when driving a stereo
+      display and a non-stereo display from the same GPU.
+    - Fixed a bug that could cause display devices on a secondary GPU to get
+      swapped between X screens when restarting the X server.
+    - Fixed a bug that could result in line flickering in full-scene anti-
+      aliasing contexts.
+    - Fixed a bug that caused the physical dimensions of rotated monitors to be
+      reported incorrectly.
+    - Add support for the pre-VBO DrawArrays command in the server-side GLX
+      driver module.  The NVIDIA client-side GLX implementation never sends
+      this command, but the server needs to support it for compatibility with
+      other GLX client implementations.
+    - Fixed a regression that caused blank/white windows when exhausting video
+      memory on GeForce 6 and 7 series GPUs while using composited
+      desktops.  (Closes: #646975)
+  * New upstream release 275 series.
+    - Fixed a bug that caused a crash when glDrawArrays was used with a non-VBO
+      vertex attribute array to draw on a Xinerama screen other than screen 0
+      using an indirect GLX context.
+  * Upload to unstable.
+  * Update lintian overrides.
+  * debian/copyright: Update to dep5.mdwn?revision=202.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 23 Nov 2011 05:02:23 +0100
+
+nvidia-graphics-drivers (290.06-1) experimental; urgency=low
+
+  * New upstream beta 290.06 (2011-11-04).
+    - Added support for the following GPU: GeForce GTX 460 SE v2.
+    - Fixed a bug that would cause applications which export custom allocation
+      functions to our driver (such as Adobe Flash in Firefox or Chrome) to
+      crash.
+  * Upload to experimental.
+  * Update nv-readme.ids.
+  * Update lintian overrides.
+  * Merge changes from 280.13.really.275.36-1.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 04 Nov 2011 22:11:36 +0100
+
+nvidia-graphics-drivers (290.03-1) experimental; urgency=low
+
+  * New upstream beta 290.03 (2011-10-21).
+    - Fixed a bug that prevented the driver from loading on some systems with
+      integrated graphics.
+    - Fixed issues in VDPAU that prevented allocating and displaying extremely
+      large VdpOutputSurfaces.
+    - Added support for limiting heap allocations in the OpenGL driver through
+      the use of the __GL_HEAP_ALLOC_LIMIT environment variable.  See the README
+      for further details.
+    - Added an "Accel" option to the X driver to allow disabling its use of the
+      graphics processing hardware.  This is useful when other components, such
+      as CUDA, require exclusive use of the GPU's processing cores.
+    - Modified how the OpenGL driver allocates executable memory so it may
+      continue to function properly if /tmp is mounted noexec. As some fallback
+      allocation methods may be prohibited under SELinux policy, the driver now
+      supports detection of this policy as well as manual override of this
+      detection via the __GL_SELINUX_BOOLEANS environment variable.
+    - Fixed a bug that caused various GLSL built-in uniforms to not
+      be updated properly when calling glPopAttrib.
+    - Improved performance by caching compiled OpenGL shaders to disk. Added a
+      "GLShaderDiskCache" option to the X driver to enable/disable this
+      feature. Added the __GL_SHADER_DISK_CACHE and __GL_SHADER_DISK_CACHE_PATH
+      environment variables for further configuration. See the README for
+      further details.
+  * New upstream long-lived branch release 275.36 (2011-11-04).
+    - Added support for the following GPU: GeForce 510.
+    - Fixed a bug that caused trapezoid and triangle rendering to be very slow
+      on older GPUs with xorg-server 1.11.  (Closes: #642757 and 15 dupes)
+  * Upload to experimental.
+  * Update symbols control files.
+  * Update nv-readme.ids.
+  * Refresh use-nv-kernel.o.ARCH.patch.
+  * bug-control: collect information about installed nouveau packages.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 24 Oct 2011 02:30:46 +0200
+
+nvidia-graphics-drivers (285.05.09-1) experimental; urgency=low
+
+  * New upstream beta 285.05.09 (2011-10-03).
+    - Fixed a bug causing a Linux kernel BUG when retrieving CPU information on
+      some systems.
+    - Fixed a bug causing some applications to hang on exit.
+    - Fixed a bug causing flickering in some GPU/display combinations.
+    - Fixed a bug that could result in poor OpenGL performance after hotplugging
+      a monitor.
+    - Added support for the following GPU: GeForce GT 520MX.
+    - Fixed a bug causing possible text corruption when recovering from GPU
+      errors.
+  * New upstream long-lived branch release 275.28 (2011-09-09).
+    - Added support for xserver ABI 11 (xorg-server 1.11).  (Closes: #639737)
+    - Fixed a bug that caused the GLSL built-in uniforms gl_FrontMaterial
+      and gl_BackMaterial to not be updated properly when calling
+      glMaterial from a display list.
+    - Fixed an error handling bug that caused the OpenGL driver to
+      crash while running certain WebGL applications.
+    - Fixed a bug in VDPAU that caused a glibc assertion when a call to
+      VdpDeviceCreateX11 failed in certain ways.
+  * Upload to experimental.
+  * Update symbols control files.
+  * Update nv-readme.ids.
+  * Merge changes from 280.13.really.275.28-1.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 04 Oct 2011 14:37:00 +0200
+
+nvidia-graphics-drivers (285.03-2) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * Merge changes from 280.13-2.
+  * Rebuild with alternative dependency on xorg-video-abi-11.
+    NVIDIA does not yet support this version officially, therefore the
+    "IgnoreABI" option needs to be enabled, see xorg.conf(5).
+  * Upload to experimental.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 30 Aug 2011 15:44:04 +0200
+
+nvidia-graphics-drivers (285.03-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream beta 285.03 (2011-08-17).
+    - Fixed a bug causing corruption of images which are 2047 pixels wide.
+    - Improved performance of the RENDER extension on Fermi-based GPUs.
+    - Fixed a bug causing the X server to crash after a VT-switch while running
+      an OpenGL stereo application which is a member of a swap group.
+  * Upload to experimental.
+  * Refresh use-nv-kernel.o.ARCH.patch.
+  * Update symbols control files.
+  * Update nv-readme.ids.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 22 Aug 2011 11:51:51 +0200
+
+nvidia-graphics-drivers (280.13.really.275.36-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 275.36 (2011-11-04).
+    - Fixed a bug that caused trapezoid and triangle rendering to be very slow
+      on older GPUs with xorg-server 1.11.  (Closes: #642757 and 15 dupes)
+    - Added support for the following GPU: GeForce 510.
+  * Update watch file to mangle the '280.13.really.' version prefix.
+  * Drop libvdpau1 multiarch workaround, libvdpau1 0.4.1-3 got multiarch.
+  * bug-control: collect information about installed nouveau packages.
+  * Bump nvidia-kernel-common versioned dependency to 20110213 (updates initrd
+    to enable/disable the nouveau blacklist).
+  * Bump glx-alternative-nvidia versioned dependency to 0.2.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 04 Nov 2011 21:10:22 +0100
+
+nvidia-graphics-drivers (280.13.really.275.28-2) UNRELEASED; urgency=low
+
+  * Dummy.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 04 Nov 2011 21:10:21 +0100
+
+nvidia-graphics-drivers (280.13.really.275.28-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 275.28 (2011-09-09).
+    * WARNING: this is a downgrade, some features added in 280.xx are no
+      longer available and some devices may be no longer supported.
+    - Added support for xserver ABI 11 (xorg-server 1.11).
+    - Fixed a bug that caused the GLSL built-in uniforms gl_FrontMaterial
+      and gl_BackMaterial to not be updated properly when calling
+      glMaterial from a display list.
+    - Fixed an error handling bug that caused the OpenGL driver to
+      crash while running certain WebGL applications.
+    - Fixed a bug in VDPAU that caused a glibc assertion when a call to
+      VdpDeviceCreateX11 failed in certain ways.
+  * Add xorg-video-abi-11 as alternative dependency and bump xserver-xorg-core
+    dependency.  (Closes: #639737)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 12 Sep 2011 00:06:58 +0200
+
+nvidia-graphics-drivers (280.13-5) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Add a NEWS entry about incompatibility with Xorg Xserver 1.11.
+  * Drop Conflicts with pre-squeeze kernel *-2.6.32-trunk-*.
+  * xserver-xorg-video-nvidia: add (versioned) Depends: xserver-xorg-core.
+  * Use PCI IDs extracted from the README, not the kernel module.
+  * Ship PCI ID lists of GPUs supported by the different legacy drivers in
+    the nvidia-detect package in /usr/share/nvidia.  (Closes: #639793)
+  * Let nvidia-detect read the PCI IDs from /usr/share/nvidia/ instead of
+    hardcoding them in the script.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 09 Sep 2011 15:31:58 +0200
+
+nvidia-graphics-drivers (280.13-4) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Avoid multiarch file conflicts:
+    - Install the x86 README.txt in libgl1-nvidia-glx and nvidia-vdpau-driver.
+    - Use wildcards instead of multiarch paths in *.lintian-overrides.
+  * Work around make bug #635317: "make 3.82 breaks kernel module build:
+    'mixed implicit and normal rules' in linux-headers-*" (only affects the
+    version in experimental) by adding Breaks: make (= 3.82-1) to the source
+    packages.  (Closes: #640539)
+  * Add a nvidia-detect package with a script 'nvidia-detect' to detect NVIDIA
+    GPUs and recommend a driver meta package to install.  (Closes: #614825)
+    Based on the script from http://wiki.debian.org/NvidiaGraphicsDrivers
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 06 Sep 2011 06:26:50 +0200
+
+nvidia-graphics-drivers (280.13-3) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Revert enabling xorg-video-abi-11, there are some more ABI changes in
+    Xserver 1.11.0 that didn't get properly versioned and may cause trouble,
+    see http://www.nvnews.net/vbulletin/showthread.php?t=165665
+    (Reopens: #639737)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 31 Aug 2011 09:49:09 +0200
+
+nvidia-graphics-drivers (280.13-2) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Add experimental alternative dependency on xorg-video-abi-11 for using the
+    NVIDIA driver with Xserver 1.11 in unstable.  NVIDIA does not yet support
+    this version officially, therefore the "IgnoreABI" option needs to be
+    enabled, see xorg.conf(5).  (Closes: #639737)
+  * Call check-for-mismatching-nvidia-module properly by passing the new
+    upstream version as first argument.  (Closes: #636680)
+  * Bump debhelper dependency to >= 8.1.3 for experimental debhelper compat
+    level 9, which is used for multiarch build.  (Closes: #637368)
+  * Add instructions for squeeze-backports to README.source and a
+    prepare-squeeze-backport target to debian/rules that performs the
+    necessary changes.
+  * Add empty /usr/lib/tls directory to ensure smoother upgrades.
+  * Add lintian overrides for shlib-calls-exit (experimental tag).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 30 Aug 2011 15:01:09 +0200
+
+nvidia-graphics-drivers (280.13-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 280.13 (2011-08-03).
+    - Fixed a GLX bug that could cause the X server to crash when
+      rendering a display list using GLX indirect rendering.
+    - Fixed a GLX bug that could cause a hang in applications that
+      use X server grabs.
+    - Fixed an X driver bug that caused 16x8 stipple patterns to
+      be rendered incorrectly.
+  * Upload to unstable.
+  * conftest.h: remove obsolete conftest.sh function signal_struct, no longer
+    used by the legacy drivers.
+  * Because PCI ID extraction from the binary object no longer seems to work,
+    extract the supported PCI IDs from the README and track changes in
+    debian/nv-readme.ids.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Thu, 04 Aug 2011 06:40:28 +0200
+
+nvidia-graphics-drivers (280.11-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream beta 280.11 (2011-07-26).
+    - Fixed a GLX_EXT_texture_from_pixmap bug that caused corruption
+      when texturing from sufficiently small pixmaps and, in particular,
+      corruption in the GNOME Shell Message Tray.
+  * Upload to experimental.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 23 Jul 2011 17:00:20 +0200
+
+nvidia-graphics-drivers (280.04-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream beta 280.04 (2011-06-29).
+    - Added support for the following GPUs: GeForce GTX 570M,
+      GeForce GTX 580M.
+    - Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extension:
+          GL_EXT_vertex_attrib_64bit
+    - Added GLX protocol support (i.e., for GLX
+      indirect rendering) for the following OpenGL extensions:
+        GL_ARB_half_float_pixel
+        GL_EXT_packed_depth_stencil
+  * Upload to experimental.
+  * Update symbols control files.
+  * Add Breaks: nvidia-smi (<< $(nvidia:Version}) to libnvidia-ml1 because the
+    interface is changing frequently but the soname is kept.
+  * Update lintian overrides.
+  * Convert lintian overrides to use the [arch] format (lintian 2.5.1) instead
+    of #!i386#/#!amd64# parameter substitution.
+  * Work around autoreject by ftp-master which is still running lintian 2.5.0.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sun, 03 Jul 2011 11:56:43 +0200
+
+nvidia-graphics-drivers (275.21-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 275.21 (2011-07-21).
+    - Restored the release splash screen in the NVIDIA X driver (the beta
+      splash screen was accidentally re-enabled between 275.09.07 and
+      275.19).
+    - Added X configuration options "3DVisionProHwButtonPairing",
+      "3DVisionProHwSinglePairingTimeout", "3DVisionProHwMultiPairingTimeout",
+      and "3DVisionProHwDoubleClickThreshold" to configure hardware button
+      based pairing in NVIDIA 3D Vision Pro.
+      See "Appendix B. X Config Options" in the README for more information.
+    - Fixed a bug that prevented initialization of the NVIDIA 3D Vision or
+      NVIDIA 3D Vision Pro hub if no EDID was present.
+  * Use a versioned dependency on the transitional
+    libgl{1,x}-nvidia-alternatives packages.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 22 Jul 2011 16:59:32 +0200
+
+nvidia-graphics-drivers (275.19-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 275.19 (2011-07-15).
+    - Fix memory error and abort reported by glibc when running the application
+      FieldView from Intelligent Light.
+    - Fixed an OpenGL driver bug that caused an application crash when running
+      Altair HyperMesh.
+    - Fixed a performance problem when switching between stereo and monoscopic
+      rendering in the application Smoke.
+    - Fixed poor X driver handling of pixmap out of memory scenarios.
+    - Fixed an interrupt handling deficiency that could lead to performance and
+      stability problems when many NVIDIA GPUs shared few IRQs.
+    - Added support for the following GPUs: GeForce GT 540M.
+    - Fixed bugs in the VDPAU presentation queue that could cause GPU errors
+      and hangs when destroying a presentation queue. This happens when
+      exiting applications, and also when toggling to and from full-screen
+      mode in Adobe Flash.
+  * Run check-for-conflicting-opengl-libraries from libgl1-nvidia*-glx{,-ia32}
+    and xserver-xorg-video-nvidia* postinst.
+  * Run check-for-mismatching-nvidia-module from libgl1-nvidia*-glx{,-ia32},
+    xserver-xorg-video-nvidia* and libcuda1{,-ia32} postinst, if available.
+    (Closes: #620327)
+  * Add Depends: nvidia-support to libgl1-nvidia*-glx{,-ia32} and
+    xserver-xorg-video-nvidia.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 19 Jul 2011 21:03:24 +0200
+
+nvidia-graphics-drivers (275.09.07-5) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Add dependency on libgl{1,x}-nvidia-alternatives to nvidia-alternative to
+    ensure the old packages are not removed prematurely.  (Closes: #632742)
+  * Add Breaks: nvidia-smi (<< $(nvidia:Version}) to libnvidia-ml1 because the
+    interface is changing frequently but the soname is kept.
+  * Convert lintian overrides to use the [arch] format (lintian 2.5.1) instead
+    of #!i386#/#!amd64# parameter substitution.
+  * Partially merge 195.36.31-91 (UNRELEASED):
+    - Generate some *-ia32.lintian-overrides by swapping [i386] and [amd64].
+  * Partially merge 195.36.31-92 (UNRELEASED):
+    - Collect xorg.conf and most recent Xorg.*.log when reporting bugs.
+    - Remove the nvidia alternative before removing the libraries.
+    - Only add slave links if the destination directory exists.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 06 Jul 2011 21:57:28 +0200
+
+nvidia-graphics-drivers (275.09.07-4) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Upload to unstable.
+  * Drop lintian 2.4.3 compatibility overrides.
+  * Ship the /usr/lib/nvidia/current directory in the nvidia-alternative
+    package to ensure the master alternative exists.
+  * Drop empty directories from xserver-xorg-driver-nvidia, these are provided
+    by glx-alternative-nvidia.
+  * Update bug-control to report information about some of the recently
+    added/renamed packages.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 27 Jun 2011 22:03:13 +0200
+
+nvidia-graphics-drivers (275.09.07-3) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * Upload to experimental.
+  * Add XS-Autobuild: yes to debian/control.  See instructions in #602838.
+  * Add Pre-Depends: glx-diversions to the transitional packages to ensure
+    clean diversion upgrades in some corner cases.
+  * Install the following files that exist in both current and legacy drivers
+    into a version specific directory /usr/lib/nvidia/{current,legacy-*}:
+    libGL.so.1, libglx.so, nvidia_drv.so, libnvidia-cfg.so.1,
+    libXvMCNVIDIA.so.1, libXvMCNVIDIA_dynamic.so.1, nvidia-bug-report.sh.
+  * The 'nvidia' alternative (set up by package nvidia-alternative{,-legacy-*})
+    handles creation of appropriate symlinks in /usr/lib/nvidia.
+  * The 'glx' alternative (set up by package glx-alternative-nvidia) handles
+    creation of appropriate symlinks in /usr/lib, /usr/lib/xorg, etc.
+  * Update bug-script to list files in the new private directory as well as in
+    multiarch directories.
+  * Enable multiarch build.
+    - Add Multi-Arch: same/foreign/allowed.
+    - Use compat level 9.
+    - Work around missing multiarch support in libvdpau1.
+  * Add Conflicts: lib{*}-ia32 [i386] to lib{*} to prevent mixing multiarch
+    and biarch packages, e.g. lib{*}:i386 and lib{*}-ia32:amd64 on amd64.
+  * Stop working around the upstream tarball layout changes after 195xx, work
+    around this in the legacy packages instead.
+  * Provide nvidia-glx-any, xserver-xorg-video-nvidia-any,
+    libgl1-nvidia-glx-any, libgl1-nvidia-glx-ia32-any.
+  * Convert the Conflicts: *-legacy-*, fglrx-* to versioned Breaks: as the
+    library and driver parts should be co-installable by now.  There still can
+    be only one nvidia-*-dkms package installed at a time as they all generate
+    the same kernel module: nvidia.ko.  (Closes: #610021)
+  * Update README.alternatives.
+
+  [ Russ Allbery ]
+  * Update Lintian overrides for libnvidia-complier and libcuda1 for the
+    move to multiarch paths.
+
+ -- Russ Allbery <rra@debian.org>  Thu, 23 Jun 2011 16:07:52 -0700
+
+nvidia-graphics-drivers (275.09.07-2) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * Upload to experimental.
+  * Switch to multiarch-aware diversion and alternatives handling provided by
+    the glx-diversions/glx-alternative-nvidia packages.
+    (Closes: #630527, #630775, #630579, #630565, #630850)
+  * Drop Breaks: libgl1-mesa-glx (>= 7.10.2-4~).
+  * Move handling of alternatives from nvidia-glx and libgl1-nvidia-glx to
+    nvidia-alternative (new package) and glx-alternative-nvidia (from
+    glx-alternatives).  libGL.so.1 and libglx.so (the Xorg module) no longer
+    can be configured independently, avoiding possible mixed NVIDIA/MESA
+    setups.
+  * Convert old packages libgl{1,x}-nvidia-alternatives to transitional ones.
+  * Note: The diversion and alternative handling of
+    libgl1-nvidia-{glx,alternatives}-ia32 is not being changed.
+    These packages will become obsolete by adding multiarch support.
+  * Split the Xorg driver and modules from nvidia-glx into new package
+    xserver-xorg-driver-nvidia (package name agreed by Cyril Brulebois).
+  * Override a spelling error in the binary-only part of the kernel module.
+  * Drop override for no longer emitted experimental shlib-calls-exit.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 18 Jun 2011 13:45:25 +0200
+
+nvidia-graphics-drivers (275.09.07-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 275.09.07 (2011-06-14).
+    - Fixed a bug that caused desktop corruption in GNOME 3 after a
+      VT-switch or suspend/resume cycle.  (Closes: #629203)
+    - Added support for the following GPUs: GeForce GT 545, GeForce GTX 560,
+      GeForce GTX 560M, GeForce 315M, GeForce 320M, GeForce 410M,
+      Quadro 3000M, Quadro 4000M, Quadro 5010M.
+  * Upload to unstable.
+  * Update symbols control files.
+  * Refresh linux3.patch, upstream partially added Linux 3 support.
+  * Partially merge 195.36.31-91 (UNRELEASED).
+    - Add Pre-Depends: nvidia-installer-cleanup to nvidia-kernel-dkms.
+    - Let nvidia-opencl-icd{,-ia32} depend on libnvidia-compiler{,-ia32},
+      OpenCL code usually requires compilation at runtime.  (Closes: #629808)
+    - Temporarily add versioned Breaks: libgl1-mesa-glx (>= 7.10.2-4~), we need
+      to rework the diversions for cooperation with multiarch enabled MESA
+      libraries.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 15 Jun 2011 17:13:16 +0200
+
+nvidia-graphics-drivers (275.09.04-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream beta 275.09.04 (2011-06-04).
+    - Fixed a bug that caused freezes and crashes when resizing windows in
+      KDE 4 with desktop effects enabled using X.Org X server version 1.10
+      or later.  (Closes: #629513, #627608, #625877)
+    - Modified the X driver to request that hardware inform the audio driver
+      whenever a display is disabled. This will allow the audio driver to
+      generate the appropriate jack unplug events to applications.
+    - Added support for the GL_EXT_x11_sync_object extension.  See the
+      extension specification in the OpenGL registry here:
+        http://www.opengl.org/registry/specs/EXT/x11_sync_object.txt
+      for more details.
+    - Improved performance of window resize operations in KDE 4 on systems
+      with slow CPUs.
+  * Upload to experimental.
+  * Update symbols control files.
+  * Add linux3.patch to make the module build on linux-3.0.  (Closes: #628925)
+
+  [ Russ Allbery ]
+  * Add DM-Upload-Allowed: yes to debian/control.
+
+ -- Russ Allbery <rra@debian.org>  Tue, 07 Jun 2011 09:50:24 -0700
+
+nvidia-graphics-drivers (275.09-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream beta 275.09 (2011-05-20).
+    - Added support for hardware button based pairing to NVIDIA 3D Vision Pro.
+      Single click button on the hub to enter into a pairing mode which pairs
+      one pair of glasses at a time. Double click the same button on the
+      hub to enter into a pairing mode which pairs multiple pairs of glasses
+      at a time.
+    - Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extensions:
+      GL_NV_framebuffer_multisample_coverage
+      GL_NV_texture_barrier
+    - Added GLX protocol support (i.e., for GLX
+      indirect rendering) for the following OpenGL extension:
+      GL_NV_register_combiners2
+    - Fixed a bug that caused the pop-out and external DVI displays to go blank
+      on Lenovo ThinkPad W701 laptops.
+    - Fixed a bug that caused corruption on the menus in OpenOffice.org when the
+      screen is rotated.
+    - Improved performance of certain memory allocations.
+    - Fixed a bug that caused Java2D widgets to disappear when Java is
+      configured to render using FBOs.
+    - Added a new X configuration option "BaseMosaic" which can be used to
+      extend a single X screen transparently across all of the available
+      display outputs on each GPU. See "Appendix B. X Config Options" in the
+      README for more information.
+    - Fixed a bug causing incorrect reporting of GPU core and ambient
+      temperatures via NV-CONTROL.
+  * Upload to experimental.
+  * Update symbols control files.
+  * Refresh conditionally-include-linux_version.h.patch and
+    use-nv-kernel.o.ARCH.patch.
+  * conftest.h: implement checks for generated/compile.h and
+    generated/utsrelease.h (275.09).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 28 May 2011 15:20:41 +0200
+
+nvidia-graphics-drivers (270.41.19-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 270.41.19 (2011-05-20).
+    - Fixed a bug in the VDPAU presentation queue that could cause 1
+      second hangs when transitioning from blit-based display to overlay-
+      based display. This would most commonly happen when disabling a
+      compositing manager.
+    - Fixed a bug that could cause crashes when capturing SDI video.
+    - Fixed a corner-case in which the OpenGL driver could leak resources
+      in applications utilizing fork().
+    - Addressed a Linux kernel interface compatibility problem that could
+      lead to ioremap() errors and, potentially, functional and/or
+      stability problems.
+    - Fixed a bug that caused SLI initialization to fail on some Intel
+      based systems.
+    - Fixed a bug that caused SLI initialization to fail when using recent
+      Linux kernels, such as 2.6.38.
+  * Update nv-kernel.ids.
+  * Update symbols control files.
+  * Partially merge 195.36.31-91 (UNRELEASED).
+    - Drop nvidia-kernel-compat-2.6.38.patch and adjust conftest.h to mark
+      aquire_console_sem as no longer available in 2.6.38 and newer kernels.
+      This avoids different behaviour between the kernel modules built from
+      upstream installer and the Debian packages.
+    - Add avoid-ld.gold.patch to explicitly link with ld.bfd.  The kernel
+      module built with ld.gold does not work properly.
+      (Closes: #625761, #626279)
+    - Drop dependency on nvidia-common in favor of nvidia-installer-cleanup.
+    - Convert nvidia-vdpau-driver{,-ia32} related versioned Conflicts/Replaces
+      to Breaks/Replaces.
+    - Turn nvidia-glx-ia32 into a transitional package, the libraries have
+      been shipped in libgl1-nvidia-glx-ia32 for quite some time.
+    - Add support for arch-specific overrides (lintian 2.5.0).
+    - Let the triggers only create the alternatives to diverted libraries if
+      the diverted file is a symbolic link and points to an actual file.  This
+      avoids failures running the triggers on some systems with broken
+      diverted files.  (Closes: #626399)
+    - Perform the same validation and correction of the diverted symlinks in
+      libgl1-nvidia-alternatives and libgl1-nvidia-alternatives-ia32.
+    - Add Depends: nvidia-support to nvidia-glx.  The new support package
+      ships the nvidia-bug-report.sh manpage.
+    - Override the binary-without-manpage lintian warning now that we provide
+      a manpage (in nvidia-support).
+    - conftest.h: implement conftest.sh function ioremap_cache (270.41.19).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sun, 22 May 2011 21:34:48 +0200
+
+nvidia-graphics-drivers (270.41.06-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 270.41.06 (2011-04-20).  (Closes: #624644)
+    - Fixed a bug that caused some GPUs to stop responding when the X Server
+      was started. All GPUs are susceptible, but the failure was primarily
+      seen on GF104 and GF106 boards.
+    - Added support for the following GPUs: Tesla M2090, Tesla M2075,
+      Tesla C2075, Quadro 7000.
+  * New upstream beta 270.41.03 (2011-04-18).
+    - Fixed a bug causing the X server to hang every 49.7 days on 32-bit
+      platforms.
+    - Added support for the following GPUs: GeForce GT 520, GeForce GT 520M,
+      GeForce GT 525M, GeForce GT 530, GeForce 405, GeForce GT 420,
+      GeForce GT 440, GeForce GT 445M, GeForce GT 550M, GeForce GT 555M,
+      GeForce GTX 470M, GeForce GTX 485M, GeForce GTX 550 Ti, GeForce GTX 590,
+      NVS 4200M, Quadro 1000M, Quadro 2000M.
+  * Upload to unstable.
+  * Update nv-kernel.ids.
+  * Update symbols control files.
+  * Refresh use-nv-kernel.o.ARCH.patch and fix-typos.patch.
+  * Partially merge 195.36.31-91 (UNRELEASED).
+    - Update to Standards-Version: 3.9.2.
+    - Override the experimental lintian tag shlib-calls-exit (libGL.so.*).
+    - Support backport specific operations in debian/rules by setting the
+      BACKPORT variable in debian/rules.defs.
+    - Set the supported Xorg ABIs in debian/rules.defs, use substvars for Xorg
+      related Depends/Provides, compute the values in debian/rules.
+      Add compatibility settings for old Xorg versions for backports only.
+    - Add #LIBDIR# and #PRIVATE# substitution variables for generated control
+      files.
+  * Add nvidia-installer-cleanup as an alternative to nvidia-common.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 02 May 2011 15:39:10 -0700
+
+nvidia-graphics-drivers (270.30-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream beta 270.30 (2011-03-02).
+    - Added support for xserver ABI 10 (xorg-server 1.10).
+  * New upstream beta 270.29 (2011-02-24).
+  * New upstream beta 270.26 (2011-02-15).  (Closes: #616353)
+    - Added NV-CONTROL event notification for NV_CTRL_FRAMELOCK_SYNC_READY
+      status changes.
+    - Added support for the following GPUs: GeForce GTX 560 Ti.
+    - Added a new X configuration option "Interactive", which defaults to
+      enabled, but can be disabled to allow long-running GPU compute programs
+      to run concurrently with X.
+    - Fixed a bug in the VDPAU presentation queue that could cause VDPAU
+      "display preemption" when rendering to tiny or zero-sized windows or
+      pixmaps.
+    - Fixed a bug in VDPAU which prevented use of the overlay presentation
+      queue following an application exiting without gracefully destroying its
+      VDPAU presentation queue.
+    - Fixed a bug in VDPAU that prevented the overlay from ever being used if
+      a presentation queue was created while the target window was redirected
+      using the Composite extension when the presentation queue was created.
+  * New upstream beta 270.18 (2011-01-21).
+    - Reorganized the NVIDIA driver's /proc file system layout to better
+      reflect current needs: /proc/driver/nvidia/cards/0..N has been
+      moved to /proc/driver/nvidia/gpus/0..N/information
+    - Added new shared library: libnvidia-ml.so.
+      NVML provides programmatic access to static information and monitoring
+      data for NVIDIA GPUs, as well as limited managment capabilities. It is
+      intended for use with Tesla compute products.
+      See web-based documentation and associated nvml.h header for more info.
+    - Added a new X configuration option "3DVisionDisplayType" to specify
+      the display type when NVIDIA 3D Vision is enabled with a non
+      3D Vision ready display.
+    - Fixed several bugs relating to hardware-accelerated gradients, which were
+      causing visual corruption in some of the default Ubuntu GNOME themes.
+  * New upstream beta 265 series.
+    - Modified colormap updates to no longer be synchronized to vblank.  This
+      allows applications to send XStoreColor and XStoreColors requests faster
+      than the screen's refresh rate.
+      This behavior can be controlled by a new NV-CONTROL attribute,
+      NV_CONTROL_SYNC_LUT_UPDATES.  By default, LUT updates are not
+      synchronized.  This may cause flickering in some applications that use the
+      colormap to perform animation, such as xpilot running on a depth 8 X
+      screen.  If you experience flickering, try running
+          nvidia-settings -a [gpu:0]/SynchronousPaletteUpdates=1
+  * Upload to experimental.
+  * Update nv-kernel.ids.
+  * Update symbols control files.
+  * Refresh use-nv-kernel.o.ARCH.patch.
+  * Add package libnvidia-ml1 for the NVIDIA management library (NVML), a new
+    library added by upstream.
+  * Alternatively depend on xorg-video-abi-10.
+  * Let nvidia-vdpau-driver Conflicts/Replaces the obsolete transitional
+    package nvidia-libvdpau-dev.
+  * Merge 195.36.31-90 (UNRELEASED).
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 18 Mar 2011 12:25:31 +0100
+
+nvidia-graphics-drivers (260.19.44-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 260.19.44 (2011-03-07).
+    (Closes: #607430, #610755, #612136)
+    - Updated the NVIDIA X driver to not update mode timings for G-Sync
+      compatibility when NVIDIA 3D Vision or NVIDIA 3D VisionPro is
+      enabled along with a G-Sync device.
+    - Added support for the following GPUs: Quadro 2000 D, Quadro 400.
+  * New upstream release 260.19.36 (2011-01-21).
+    - Updated the NVIDIA kernel module to ensure that all system memory
+      allocated by it for use with GPUs or within user-space components of the
+      NVIDIA driver stack is initialized to zero.  (Closes: #609338)
+      A new NVIDIA kernel module option, InitializeSystemMemoryAllocations,
+      allows administrators to revert to the previous behavior.
+    - Fixed a bug that caused X servers version 1.9 and higher to crash when
+      color index overlays were enabled.
+    - Fixed a bug that caused pixel value 255 to be treated as transparent in
+      color index overlays.
+    * Fix deadlock in some applications that fork.  (Closes: #612998)
+  * New upstream release 260.19.29 (2010-12-13).
+    - Added support for the following GPUs: GeForce GTX 460 SE,
+      GeForce GTX 570, Quadro 5000M, NVS 300.
+    - Fixed a bug that caused some OpenGL applications to become
+      unresponsive for up to a minute on some GPUs when changing
+      the resolution or refresh rate.
+    - Added support for NVIDIA 3D Vision Pro.
+      See the "Stereo" X configuration documentation in the README
+      for further details.
+    - Added a new X configuration option "3DVisionProConfigFile"
+      to allow user provide a filename which NVIDIA X driver uses
+      to store 3D Vision Pro configuration settings.
+      See "Appendix B. X Config Options" in the README for
+      more information.
+  * Merge 195.36.31-7.
+  * Remove NVIDIA_kernel-260.19.34-778465.diff, applied upstream.
+  * Update nv-kernel.ids.
+  * Detect license changes by comparing debian/copyright with the shipped
+    LICENSE during build.
+  * Pre-Depend on nvidia-common for interactive (using debconf)
+    nvidia-installer cleanup.  There is a mutual exclusion between using the
+    nvidia-installer and the driver packages.
+    - Checks for /usr/bin/nvidia-installer and asks the user whether to run
+      'nvidia-installer --uninstall'.  If that fails, offers to just delete
+      the remaining files.  If the user chooses to do the cleanup himself,
+      installation is blocked as long as nvidia-installer is still found on
+      the system.  (Closes: #605337, #611705)
+    - Adds a pre-install hook for the nvidia-installer, giving a warning to
+      users running a NVIDIA-Linux-*.run file directly while Debian packages
+      providing the driver are installed.  This hook fails intentionally, but
+      unfortunately the default choice if the hook failed is to continue
+      anyway.  Therefore the hook tries to kill the nvidia-installer process.
+    - Provides a script that checks for conflicting libraries (libGL.so.*.*
+      remaining from previous usage of the nvidia-installer) and offers to
+      delete them.  The script is intended to be run from postinst.  If the
+      user chooses not to delete them, postinst configure fails as long as the
+      user has not cleaned up or lets the postinst delete the files.
+  * nvidia-glx{,-ia32}.postinst: run the cleanup of conflicting libGL.so.*.*
+    (Currently the conflicting libraries are moved to
+    /var/lib/nvidia-backup.XXXXXX instead of deleting them.) (Closes: #606175)
+  * Install a dummy file in /usr/lib/nvidia/diversions to ensure it is not
+    removed by some old maintainer script.  Causes trouble if the destination
+    directory of some diversion is missing and the diverted file is installed
+    later on.  (Closes: #608625)
+  * Add patch nvidia-kernel-compat-2.6.38.patch to fix build with 2.6.38-rc
+    kernels.  (Closes: #613798)
+  * Depend on xorg-video-abi-8 without minor version (Closes: #612956) and
+    provide xorg-driver-video to match what Xorg 1.9 provides and expects.
+  * Add script build-module-packages.sh to the documentation of the
+    nvidia-kernel-source package, uses module-assistant to do a quick build of
+    the modules for all installed linux-headers.
+  * Prevent concurrent installation of mismatching upstream versions of
+    libgl1-nvidia-glx and libgl1-nvidia-glx-ia32.  (Closes: #614040)
+  * Catch module-assistant failures after nvidia-kernel-source updates without
+    running 'module-assistant clean nvidia'.  Only works if the old version
+    already contained this change and a module was built.
+  * Use dpkg-parsechangelog to extract the upstream version number from
+    debian/changelog, simplifying debian/rules.defs even more.
+  * Update lintian-overrides to work with lintian 2.5.0.
+  * Add patch fix-typos.patch to fix a typo in the module (found by lintian).
+  * Drop Conflicts: binutils-gold, the problem is no longer reproducible with
+    binutils-gold 2.21.0.20110302-2 and driver 260.19.44 or 195.36.31, so
+    either the driver or gold was fixed inbetween.  (See #581336)
+
+  [ Russ Allbery ]
+  * Readd the Lintian overrides for the old embedded library tags, since
+    part of the ftp-master verification process seems to be using an older
+    Lintian.
+
+ -- Russ Allbery <rra@debian.org>  Wed, 16 Mar 2011 23:13:13 -0700
+
+nvidia-graphics-drivers (260.19.21-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release 260.19.21 (2010-11-11).  (Closes: #603754)
+    - Fixed a race condition in OpenGL that could cause crashes with
+      multithreaded applications.
+    - Fixed a bug that may cause OpenGL applications which fork to crash.
+    - Fixed a bug in VDPAU that caused it to attempt allocation of huge
+      blocks of system memory. This regression was introduced in the
+      260.* driver series.
+  * New upstream release 260.19.12 (2010-10-13).
+    - Added support for the following GPUs: GeForce GTS 450, GeForce GTX 460M,
+      GeForce GT 415M, GeForce GT 425M, GeForce GT 420M, GeForce GT 435M,
+      Quadro 2000, Quadro 600.
+    - Fixed the CustomEDID X configuration option so that it can handle
+      EDID files from Linux procfs; e.g., /proc/acpi/video/IGPU/LCD0/EDID.
+  * New upstream release 260.19.06 (2010-09-15).
+    - Fixed an interaction problem with a change in X server behavior that
+      caused slow text rendering on X.Org xserver 1.9.
+    - Enhanced VDPAU to support interop with CUDA and OpenGL when Xinerama
+      is active.
+    - Fixed a bug in VDPAU that prevented temporal-spatial de-interlacing from
+      operating when temporal de-interlacing was not also enabled.
+    - Added support for configuring the dithering depth used when driving
+      a flat panel with a GeForce 8 family or Quadro 4600/5600 or
+      newer GPU.  See the "Dithering Controls" in the Flat Panel page
+      in nvidia-settings.
+  * New upstream release 260.19.04 (2010-09-08).
+    - Added support for the nvcuvid API.
+      nvcuvid provides a mechanism for decoding video and exposing the
+      surfaces to CUDA, allowing applications to perform custom processing of
+      the video. nvcuvid is primarily targeted at transcoding and video-
+      processing applications. nvcuvid was already available on other
+      platforms.
+    - Fixed a bug in VDPAU that could cause a "display preemption" when
+      toggling MPlayer to full-screen the first time.
+    - Added OpenGL 4.1 support for Quadro Fermi, GeForce GTX 4xx, and
+      later GPUs.
+    - Enhanced VDPAU to fully support Xinerama.
+    - Fixed a bug in the X driver that prevented operation of Xinerama when
+      using multiple NVIDIA GPUs from different major hardware generations
+      on X with ABI 4 or greater.
+    - Fixed a bug in the OpenGL driver's Xinerama support.
+      Rendering should have ocurred to all physical X screens driven by an
+      NVIDIA GPU compatible with the NVIDIA GPU driving physical X screen 0.
+      However, if some physical X screen did not satisfy that requirement,
+      then not only would that physical X screen not be rendered to (as
+      expected), but also all physical X screens with a higher number would
+      not be rendered to (which was unexpected).
+    - Added GPU "Processor Clock" reporting to the nvidia-settings PowerMizer
+      page.
+    - Implemented support for SLI Mosaic Mode on Quadro FX 5800 and
+      Quadro Fermi and newer Quadro GPUs.
+    - Enhanced the VDPAU overlay-based presentation queue to allow it to be
+      used when SLI is active, and in some cases when the X composite
+      extension is enabled. See the README for further details.
+    - Added support for configuring the dithering mode used when driving
+      a flat panel with a GeForce 8 family or Quadro 4600/5600 or
+      newer GPU.  See the "Dithering Controls" in the Flat Panel page
+      in nvidia-settings.
+    - Added support for configuring individual displays as any eye in passive
+      stereo mode "4" when using TwinView or SLI Mosaic through extensions to
+      the MetaMode syntax.
+    - Added ColorSpace and ColorRange features for HDMI. These give
+      the ability to output YUV over HDMI and select full/reduced
+      color range on RGB over HDMI. ColorSpace and ColorRange
+      are X Configuration options and can be changed dynamically
+      through nvidia-settings.
+  * Upload to experimental.
+  * Merge 195.36.31-6.
+  * Update nv-kernel.ids.
+  * Drop 2.6.36-ioctl.patch, fixed upstream.
+  * conftest.h: implement new (after 195.xx) conftest.sh functions
+    pci_dma_mapping_error, scatterlist, pci_domain_nr, file_operations,
+    sg_init_table.  Kernel versions of symbol (dis-)appearance from lxr.
+  * Update symbols control files.
+  * Update lintian overrides.
+  * libnvcuvid1: new package for the nvcuvid library added upstream.
+  * Xorg 1.9 is supported since 256.53: add xorg-video-abi-8.0 as alternative
+    dependency and stop providing xserver-xorg-video-6.  (Closes: #603755)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sat, 20 Nov 2010 17:39:28 -0800
+
+nvidia-graphics-drivers (256.53-2) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * Upload to experimental.
+  * Merge 195.36.31-4, 195.36.31-5.
+  * Stop shipping CUDA and OpenCL headers.  NVIDIA will stop including them in
+    the 260.xx release.  The NVIDIA CUDA Toolkit (which is the only user of
+    these header files) already contains them and is the recommended source
+    for these header files.
+  * Drop libcuda1-dev and nvidia-libopencl1-dev packages, move libOpenCL.so
+    link to nvidia-libopencl1.  libcuda1 and nvidia-libopencl1 Conflicts and
+    Replaces their old -dev packages for clean upgrades without transitionals.
+  * NOTE to packagers of software that uses NVIDIA CUDA and/or OpenCL: use
+    Build-Depends: nvidia-cuda-dev and/or nvidia-opencl-dev or
+    nvidia-cuda-toolkit.  If a certain OpenCL API is required, add versioned
+    B-D on opencl-headers, e.g (<< 1.1) for API 1.0 or (>> 1.1) for API 1.1.
+  * Drop transitional packages that were released with squeeze:
+    - nvidia-glx-dev (now Conflicts/Replaces by libgl1-nvidia-glx)
+    - nvidia-libvdpau1{,-ia32}, nvidia-libvdpau-dev
+    - libnvidia-compiler1{,-ia32}
+      (now Conflicts/Replaces by libnvidia-compiler{,-ia32}).
+  * Lower Priority of *-ia32 packages to extra (debcheck).
+  * Switch default Section to non-free/libs with a few exceptions: x11
+    (nvidia-glx), utils (nvidia-smi), kernel (nvidia-kernel-{source,dkms}),
+    oldlibs (nvidia-glx-ia32).
+
+  [ Russ Allbery ]
+  * Use /lib/modules/`uname -r`/build as the default kernel build location
+    for nvidia-kernel-source instead of /usr/src/linux, since this is set
+    up automatically by the current linux-headers-* packages.
+  * In the nvidia-kernel-source documentation, remove mention of setting
+    KVERS, which should no longer be needed, and mention that setting KSRC
+    is optional if the build link exists and you're building for the
+    currently running kernel.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Mon, 11 Oct 2010 14:50:06 +0200
+
+nvidia-graphics-drivers (256.53-1) experimental; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release.
+    (Closes: #586958, #592205, #592574, #594310, #595210)
+  * Upload to experimental.
+  * Packaging based on 195.36.31-3.
+  * Add libxvmc1 to Build-Depends.
+  * Several libraries were renamed and SONAMEs were changed by upstream.
+  * Ship new header cudaVDPAU.h.
+  * Update symbols control files.
+  * Update nv-kernel.ids.
+  * Update lintian overrides.
+  * Add Conflicts: fglrx-driver, fglrx-glx, fglrx-glx-ia32 to the
+    libgl*-nvidia-alternatives packages, too.
+  * libgl1-nvidia-alternatives-ia32: abort before configuring on broken
+    systems, i.e. /usr/lib32 being a symlink pointing to
+    /emul/ia32-linux/usr/lib (reinstall libc6-i386 to fix)
+  * debian/*.postinst(configure): abort early if DPKG_MAINTSCRIPT_PACKAGE is
+    not set (usually if called from dpkg-reconfigure, see #560317)
+  * Add myself to Uploaders.
+
+  [ Russ Allbery ]
+  * Remove Andres Mejia from Uploaders at his request.
+
+ -- Russ Allbery <rra@debian.org>  Sat, 18 Sep 2010 15:07:19 -0700
+
+nvidia-graphics-drivers (195.36.31-92) UNRELEASED; urgency=low
+
+  [ Andreas Beckmann ]
+  * Merge diversions, alternatives and multiarch changes from 275xx releases:
+  * Switch to multiarch-aware diversion and alternatives handling provided by
+    the glx-diversions/glx-alternative-nvidia packages.
+  * Move handling of alternatives from nvidia-glx and libgl1-nvidia-glx to
+    nvidia-alternative (new package) and glx-alternative-nvidia (from
+    glx-alternatives).  libGL.so.1 and libglx.so (the Xorg module) no longer
+    can be configured independently, avoiding possible mixed NVIDIA/MESA
+    setups.
+  * Convert old packages libgl{1,x}-nvidia-alternatives to transitional ones.
+  * Note: The diversion and alternative handling of
+    libgl1-nvidia-{glx,alternatives}-ia32 is not being changed.
+    These packages will become obsolete by adding multiarch support.
+  * Split the Xorg driver and modules from nvidia-glx into new package
+    xserver-xorg-driver-nvidia (package name agreed by Cyril Brulebois).
+  * Install the following files that exist in both current and legacy drivers
+    into a version specific directory /usr/lib/nvidia/{current,legacy-*}:
+    libGL.so.1, libglx.so, nvidia_drv.so, libnvidia-cfg.so.1,
+    libXvMCNVIDIA.so.1, libXvMCNVIDIA_dynamic.so.1, nvidia-bug-report.sh.
+  * Do the same with libnvidia-tls.so.1, tls/libnvidia-tls.so.1 and
+    libGLcore.so.1 which are only supplied by the legacy packages.
+  * The 'nvidia' alternative (set up by package nvidia-alternative{,-legacy-*})
+    handles creation of appropriate symlinks in /usr/lib/nvidia.
+  * The 'glx' alternative (set up by package glx-alternative-nvidia) handles
+    creation of appropriate symlinks in /usr/lib, /usr/lib/xorg, etc.
+  * Convert the Conflicts: *-legacy-*, fglrx-* to versioned Breaks: as the
+    library and driver parts should be co-installable by now.  There still can
+    be only one nvidia-*-dkms package installed at a time as they all generate
+    the same kernel module: nvidia.ko.
+  * Provide nvidia-glx-any, xserver-xorg-video-nvidia-any,
+    libgl1-nvidia-glx-any, libgl1-nvidia-glx-ia32-any.
+  * Update README.alternatives.
+  * Update bug-script to list files in the new private directory as well as in
+    multiarch directories.  Collect xorg.conf and most recent Xorg.*.log.
+  * Update bug-control to report information about some of the recently
+    added/renamed packages.
+  * Run check-for-conflicting-opengl-libraries from libgl1-nvidia*-glx{,-ia32}
+    and xserver-xorg-video-nvidia* postinst.
+  * Enable multiarch.
+    - Add ${misc:Pre-Depends} to all library packages.
+    - Add Multi-Arch: same/foreign/allowed.
+    - Use compat level 9.
+    - Use #LIBDIR# substitution variable.
+    - Work around missing multiarch support in libvdpau1.
+  * Run check-for-mismatching-nvidia-module from libgl1-nvidia*-glx{,-ia32},
+    xserver-xorg-video-nvidia* and libcuda1{,-ia32} postinst, if available.
+  * Add Depends: nvidia-support to libgl1-nvidia*-glx{,-ia32} and
+    xserver-xorg-video-nvidia.
+  * Remove the nvidia alternative before removing the libraries.
+  * Only add slave links if the destination directory exists.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 06 Jul 2011 15:13:12 +0200
+
+nvidia-graphics-drivers (195.36.31-91) UNRELEASED; urgency=low
+
+  [ Andreas Beckmann ]
+  * Merge general changes from 270xx/275xx releases:
+  * Update to Standards-Version: 3.9.2.
+  * Drop nvidia-kernel-compat-2.6.38.patch and adjust conftest.h to mark
+    aquire_console_sem as no longer available in 2.6.38 and newer kernels.
+    This avoids different behaviour between the kernel modules built from
+    upstream installer and the Debian packages.
+  * Add no-smp_lock.patch to remove the superfluous inclusion of
+    linux/smp_lock.h (kernel_locked is not used anywhere, so this seems to
+    be bitrot).  That header is no longer available in 2.6.39-rc4, so this
+    patch fixes build with the kernel in experimental.
+  * Add avoid-ld.gold.patch to explicitly link with ld.bfd.  The kernel
+    module built with ld.gold does not work properly.
+  * Add linux3.patch to make the module build on linux-3.0.
+  * Add nvidia-installer-cleanup as an alternative to nvidia-common.
+  * Drop dependency on nvidia-common in favor of nvidia-installer-cleanup.
+  * Add Pre-Depends: nvidia-installer-cleanup to nvidia-kernel-dkms.
+  * Convert nvidia-vdpau-driver{,-ia32} related versioned Conflicts/Replaces
+    to Breaks/Replaces.
+  * Turn nvidia-glx-ia32 into a transitional package, the libraries have
+    been shipped in libgl1-nvidia-glx-ia32 for quite some time.
+  * Let the triggers only create the alternatives to diverted libraries if
+    the diverted file is a symbolic link and points to an actual file.  This
+    avoids failures running the triggers on some systems with broken
+    diverted files.
+  * Perform the same validation and correction of the diverted symlinks in
+    libgl1-nvidia-alternatives and libgl1-nvidia-alternatives-ia32.
+  * Add Depends: nvidia-support to nvidia-glx.  The new support package
+    ships the nvidia-bug-report.sh manpage.
+  * conftest.h:
+    - Implement conftest.sh function ioremap_cache (270.41.19).
+    - Implement checks for generated/compile.h and generated/utsrelease.h
+      (275.09).
+  * Let nvidia-opencl-icd{,-ia32} depend on libnvidia-compiler{,-ia32},
+    OpenCL code usually requires compilation at runtime.
+  * Support backport specific operations in debian/rules by setting the
+    BACKPORT variable in debian/rules.defs.
+  * Set the supported Xorg ABIs in debian/rules.defs, use substvars for Xorg
+    related Depends/Provides, compute the values in debian/rules.
+    Add compatibility settings for old Xorg versions for backports only.
+  * Drop lintian 2.4.3 compatibility overrides.
+  * Convert lintian-overrides to use [arch lists] introduced in lintian 2.5.1.
+  * Generate some *-ia32.lintian-overrides by swapping [i386] and [amd64].
+  * Fall back to the old version of nvidia.ids if extract-pci-ids.sh failed.
+  * Remove support for restoring the upstream layout used up to 195xx.
+  * Canonicalize the location of upstream's README.txt, NVIDIA_Changelog and
+    kernel module source path.
+  * Add Conflicts: lib{*}-ia32 [i386] to lib{*} to prevent mixing multiarch
+    and biarch packages, e.g. lib{*}:i386 and lib{*}-ia32:amd64 on amd64.
+  * Add XS-Autobuild: yes to debian/control.  See instructions in #602838.
+  * Add #MAJOR# substitution variable.
+  * Add #LIBDIR# and #PRIVATE# substitution variables for generated control
+    files.
+
+  [ Russ Allbery ]
+  * Add DM-Upload-Allowed: yes to debian/control.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 05 Jul 2011 11:44:00 +0200
+
+nvidia-graphics-drivers (195.36.31-90) UNRELEASED; urgency=low
+
+  [ Andreas Beckmann ]
+  * Merge general changes from 256xx/260xx releases:
+  * Use dpkg-parsechangelog to extract the upstream version number from
+    debian/changelog, simplifying debian/rules.defs even more.
+  * Drop Conflicts: binutils-gold, driver or gold was fixed.
+  * Detect license changes by comparing debian/copyright with the shipped
+    LICENSE during build.
+  * Catch module-assistant failures after nvidia-kernel-source updates without
+    running 'module-assistant clean nvidia'.  Only works if the old version
+    already contained this change and a module was built.
+  * Add script build-module-packages.sh to the documentation of the
+    nvidia-kernel-source package, uses module-assistant to do a quick build of
+    the modules for all installed linux-headers.
+  * Install a dummy file in /usr/lib/nvidia/diversions to ensure it is not
+    removed by some old maintainer script.  Causes trouble if the destination
+    directory of some diversion is missing and the diverted file is installed
+    later on.
+  * conftest.h: implement new (after 195.xx) conftest.sh functions
+    pci_dma_mapping_error, scatterlist, pci_domain_nr, file_operations,
+    sg_init_table.  Kernel versions of symbol (dis-)appearance from lxr.
+  * Pre-Depend on nvidia-common for interactive (using debconf)
+    nvidia-installer cleanup.  There is a mutual exclusion between using the
+    nvidia-installer and the driver packages.
+    - Checks for /usr/bin/nvidia-installer and asks the user whether to run
+      'nvidia-installer --uninstall'.  If that fails, offers to just delete
+      the remaining files.  If the user chooses to do the cleanup himself,
+      installation is blocked as long as nvidia-installer is still found on
+      the system.
+    - Adds a pre-install hook for the nvidia-installer, giving a warning to
+      users running a NVIDIA-Linux-*.run file directly while Debian packages
+      providing the driver are installed.  This hook fails intentionally, but
+      unfortunately the default choice if the hook failed is to continue
+      anyway.  Therefore the hook tries to kill the nvidia-installer process.
+    - Provides a script that checks for conflicting libraries (libGL.so.*.*
+      remaining from previous usage of the nvidia-installer) and offers to
+      delete them.  The script is intended to be run from postinst.  If the
+      user chooses not to delete them, postinst configure fails as long as the
+      user has not cleaned up or lets the postinst delete the files.
+  * nvidia-glx{,-ia32}.postinst: run the cleanup of conflicting libGL.so.*.*
+    (Currently the conflicting libraries are moved to
+    /var/lib/nvidia-backup.XXXXXX instead of deleting them.)
+  * Use /lib/modules/`uname -r`/build as the default kernel build location
+    for nvidia-kernel-source instead of /usr/src/linux, since this is set
+    up automatically by the current linux-headers-* packages.
+  * In the nvidia-kernel-source documentation, remove mention of setting
+    KVERS, which should no longer be needed, and mention that setting KSRC
+    is optional if the build link exists and you're building for the
+    currently running kernel.
+  * Stop shipping CUDA and OpenCL headers.  NVIDIA will stop including them in
+    the 260.xx release.  The NVIDIA CUDA Toolkit (which is the only user of
+    these header files) already contains them and is the recommended source
+    for these header files.
+  * Drop libcuda1-dev and nvidia-libopencl1-dev packages, move libOpenCL.so
+    link to nvidia-libopencl1.  libcuda1 and nvidia-libopencl1 Conflicts and
+    Replaces their old -dev packages for clean upgrades without transitionals.
+  * NOTE to packagers of software that uses NVIDIA CUDA and/or OpenCL: use
+    Build-Depends: nvidia-cuda-dev and/or nvidia-opencl-dev or
+    nvidia-cuda-toolkit.  If a certain OpenCL API is required, add versioned
+    B-D on opencl-headers, e.g (<< 1.1) for API 1.0 or (>> 1.1) for API 1.1.
+  * Lower Priority of *-ia32 packages to extra (debcheck).
+  * Switch default Section to non-free/libs with a few exceptions: x11
+    (nvidia-glx), utils (nvidia-smi), kernel (nvidia-kernel-{source,dkms}),
+    oldlibs (nvidia-glx-ia32).
+  * Drop transitional packages that were released with squeeze:
+    - nvidia-glx-dev (now Conflicts/Replaces by libgl1-nvidia-glx)
+    - nvidia-libvdpau1{,-ia32}, nvidia-libvdpau-dev
+      (now Conflicts/Replaces by nvidia-vdpau-driver{,-ia32})
+    - libnvidia-compiler1{,-ia32}
+      (now Conflicts/Replaces by libnvidia-compiler{,-ia32}).
+  * Prevent concurrent installation of mismatching upstream versions of
+    libgl1-nvidia-glx and libgl1-nvidia-glx-ia32.
+  * Provide xorg-driver-video.
+  * Add patch nvidia-kernel-compat-2.6.38.patch to fix build with 2.6.38
+    kernels.
+  * Add patch fix-typos.patch to fix a typo in the module (found by lintian).
+  * Update lintian-overrides to work with lintian 2.5.0.  Keep error overrides
+    compatible with older lintian releases until ftp-master is updated.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 13 Apr 2011 19:50:56 +0200
+
+nvidia-graphics-drivers (195.36.31-7) unstable; urgency=medium
+
+  [ Andreas Beckmann ]
+  * Security fix.  (Closes: #609338)
+    Apply upstream patch NVIDIA_kernel-260.19.34-778465.diff to fix
+    information leak in the kernel module: kernel memory was returned
+    uninitialized to user space.
+  * Add instructions how to switch driver installation from the NVIDIA way
+    (running the *.run file) to the Debian way (using packages).
+  * Let the bug-script collect detailed information about OpenGL and NVIDIA
+    libraries and their symlinks, diversions and alternatives currently found
+    on the system.  Also list files remaining from using the nvidia-installer.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Tue, 22 Feb 2011 20:35:45 +0000
+
+nvidia-graphics-drivers (195.36.31-6squeeze2) stable-proposed-updates; urgency=low
+
+  * CVE-2012-4225.  (Closes: #684781)
+    Add upstream patch nvidia-blacklist-vga-pmu-registers-195.diff:
+    Fix exploitable local privilege escalation through VGA window manipulation
+    via the device nodes that allows access to arbitrary physical memory.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 17 Aug 2012 00:43:36 +0200
+
+nvidia-graphics-drivers (195.36.31-6squeeze1) stable-proposed-updates; urgency=medium
+
+  * Security fix (backported from 195.36.31-7).  (Closes: #609338)
+    Apply upstream patch NVIDIA_kernel-260.19.34-778465.diff to fix
+    information leak in the kernel module: kernel memory was returned
+    uninitialized to user space.
+  * CVE-2012-0946 (backported from 295.40-1):
+    Add upstream patch nvidia-blacklist-register-mapping-195.diff:
+    Closed a security vulnerability which made it possible for attackers to
+    reconfigure GPUs to gain access to arbitrary system memory. For further
+    details, see: http://nvidia.custhelp.com/app/answers/detail/a_id/3109
+  * Let the bug-script collect detailed information about OpenGL and NVIDIA
+    libraries and their symlinks, diversions and alternatives currently found
+    on the system.  Also list files remaining from using the nvidia-installer.
+    Report status of more related packages.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 15 Jun 2012 11:40:37 +0200
+
+nvidia-graphics-drivers (195.36.31-6) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * If both original and diverted file exist when removing obsolete
+    diversions, move the original file (which is not owned by any package) out
+    of the way.  This problem may originate from incorrect diversion creation
+    before lenny (and was not noticed or fixed in lenny) or having used the
+    nvidia installer to install the driver in the past.  (Closes: #600327)
+  * Add a NEWS entry recommending to update all pre-squeeze nvidia packages
+    before switching to a -legacy- variant.  (Closes: #596843)
+  * Update gdm/kdm insufficient timeout NEWS entry: mention xdm (no workaround
+    needed) and that kdm was fixed in 4:4.4.5-4.
+  * Document the warnings emitted by the maintainer scripts in README.Debian.
+  * Install the upstream README.txt in the dkms package.  It is referenced by
+    the package description.  Add a README.Debian, too.  (Closes: #602733)
+  * Add a note about the driver not working under the Xen hypervisor to
+    README.Debian.  (See: #570365)
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Wed, 17 Nov 2010 14:43:29 -0800
+
+nvidia-graphics-drivers (195.36.31-5) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Drop Breaks: xserver-xorg-core (<< 2:1.6).
+    There is no file name conflict between /usr/lib/libGLcore.so.1 (from
+    NVIDIA) and /usr/lib/xorg/modules/extensions/libGLcore.so (only in
+    xserver-xorg-core << 2:1.6) that could cause the wrong library to be
+    loaded by NVIDIA's libgl.so.
+  * Change xserver dependency to 'xorg-video-abi-6.0 | xserver-xorg-core
+    (<< 2:1.7.7)' as the driver is supposed to work with older abi versions,
+    too.  This is not needed for squeeze, but helps backports to lenny.
+  * Add Pre-Depends: libc6-i386 (>= 2.9-18) to all packages handling files in
+    /usr/lib32.
+  * Restrict nvidia-opencl-common Recommends: nvidia-opencl-icd-ia32 to amd64.
+  * libgl1-nvidia-alternatives needs to Breaks: old nvidia-glx*-dev packages,
+    some were shipping a libGL.so symlink which may cause problems on partial
+    upgrades.
+  * libgl*-nvidia-alternatives* needs to Depends: dpkg (>= 1.15) for using
+    dpkg-divert --listpackage in the postinst script.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Sun, 10 Oct 2010 20:53:35 +0200
+
+nvidia-graphics-drivers (195.36.31-4) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Remove /emul directories if empty after removing old NVIDIA files in
+    the nvidia-glx-ia32 postinst.
+  * Update versioned Breaks for the new NVIDIA legacy releases.
+  * Add Conflicts: fglrx-driver, fglrx-glx, fglrx-glx-ia32 to the
+    libgl*-nvidia-alternatives packages, too.  (Closes: #597443)
+  * libgl1-nvidia-alternatives-ia32: abort before configuring on broken
+    systems, i.e. /usr/lib32 being a symlink pointing to
+    /emul/ia32-linux/usr/lib (reinstall libc6-i386 to fix)
+  * debian/*.postinst(configure): abort early if DPKG_MAINTSCRIPT_PACKAGE is
+    not set (usually if called from dpkg-reconfigure, see #560317)
+  * nvidia-glx{,-ia32}: print warning in postinst if unknown
+    /usr/lib{,32}/libGL.so.*.* exist.  (Closes: #596898)
+  * nvidia-glx: depend on xorg-video-abi-6.0 as suggested by Xorg maintainers.
+  * libgl1-nvidia-glx: don't remove alternative owned by libgl1-nvidia-dev.
+  * NEWS: rephrase legacy 71xx note because these drivers no longer work with
+    current Xorg.
+  * nvidia-kernel-source: lower Recommends: nvidia-glx to Suggests to avoid
+    pulling nvidia-kernel-dkms into the system before the user had a chance to
+    build a module (see #590221).
+  * Add new patch 2.6.36-ioctl.patch to fix module build for kernel 2.6.36.
+  * Add changelog entries missing due to concurrent development: 1.0.9625-2
+    (experimental), 1.0.9625-1 (experimental) and 1.0.7174-4 (unstable).
+  * Stop shipping libGL.so symlinks and handling alternatives involving them.
+  * Stop shipping NVIDIA's copy of the OpenGL headers, depend on
+    libgl1-mesa-dev instead.  NVIDIA will stop distributing the headers
+    starting with the 260.xx release and recommends to use the official ones.
+  * Transition from nvidia-glx-dev directly to libgl1-mesa-dev.
+  * Drop the libgl1-nvidia-dev package (and stop shipping libXvMCNVIDIA.a).
+  * Add myself to Uploaders.
+
+  [ Russ Allbery ]
+  * Remove Andres Mejia from Uploaders at his request.
+
+ -- Andreas Beckmann <debian@abeckmann.de>  Fri, 24 Sep 2010 12:15:39 +0200
+
+nvidia-graphics-drivers (195.36.31-3) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Remove workaround for dpkg-divert bug #581544, fixed in dpkg 1.15.8.
+  * Validate the diverted libGL.so.1 symlink.  (Closes: #594416, #594737)
+  * Change handling of Xorg module libglx.so to use alternatives, too.  Move
+    the diversion of libglx.so to new package libglx-nvidia-alternatives and
+    use a trigger there to create the alternatives.  (Closes: #594299)
+  * Divert the debug symbols of libglx.so from Xorg, too.
+  * All diversions are now configurable via alternatives.  (Closes: #401582)
+  * README.alternatives: document the diversions and alternatives.
+    (Closes: #594297)
+  * Update main and module source packages to debhelper 8.
+    - dh_makeshlibs automatically picks up libraries in /usr/lib/nvidia etc.
+  * nvidia-kernel-{dkms,source}: add Conflicts: with badly sorting obsolete
+    packages linux-{image,headers}-2.6.32-trunk-*.
+  * extract-pci-ids.sh: sync with nvidia_supported script from Ubuntu maverick
+    to add 256.xx nv-kernel.o parsing support.
+  * debian/{rules, restore-upstream-directory-structure}: prepare 256.xx
+    support by restoring the upstream structure used by legacy-71xx up to
+    195.xx.
+
+ -- Russ Allbery <rra@debian.org>  Wed, 01 Sep 2010 16:14:32 -0700
+
+nvidia-graphics-drivers (195.36.31-2) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * Move trigger and maintainer scripts handling the diversions/alternatives
+    of the libGL.so* from MESA to separate packages that can be used by the
+    legacy packages, too: libgl1-nvidia-alternatives{,-ia32}.
+  * Handle ia32 alternatives of libGL.so* via trigger, too.
+  * Update lintian-overrides.
+
+ -- Russ Allbery <rra@debian.org>  Sat, 21 Aug 2010 16:07:19 -0700
+
+nvidia-graphics-drivers (195.36.31-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream release.
+    - Drop patch NVIDIA_kernel-195.36.24-682377.diff, now included.
+  * Update nvidia.ids.
+  * Fix the dpkg-shlibdeps generation of packages built while nvidia-glx is
+    installed: add back a special shlibs entry for libGL.so.1 and remove
+    libGL.so.1 from the symbols file to ensure to generate a dependency on
+    libgl1-mesa-glx | libgl1 only.  (Closes: #587091)
+  * Install libGL.so* in /usr/lib{,32}/nvidia/ and use alternatives to handle
+    /usr/lib{,32}/libGL.so.1 and /usr/lib{,32}/libGL.so.
+  * Split the nvidia-glx{,-ia32} packages, move the runtime libraries to
+    libgl1-nvidia-glx{,-ia32}.  (Closes: #369316)
+    Since we use alternatives to replace the diverted files we can migrate
+    the diversions in postinst instead of preinst to simplify updates.
+  * Rename package nvidia-glx-dev to libgl1-nvidia-dev (add dummy package).
+  * Introduce virtual packages nvidia-glx{,-ia32}, libgl1-nvidia-glx{,-ia32},
+    libgl1-nvidia-dev, nvidia-kernel-dkms.  Add a matching Provides/Conflicts:
+    to the corresponding real packages, so that the legacy packages can do the
+    same and we can stop listing each variant we have in Conflicts and
+    Recommends lists.
+  * Add Conflicts: fglrx-driver, fglrx-glx, fglrx-glx-ia32.
+  * nvidia-glx: install HTML variant of the README, too.
+  * Update to Standards-Version: 3.9.1.  Not switching to Breaks+Replaces.
+    Not touching old versioned Conflicts.  No other changes needed.
+  * Rename the libnvidia-compiler1 packages to libnvidia-compiler.  The
+    library is actually a (fairly huge) plugin used by libcuda1 (with the
+    same upstream version) only.  It has currently no SONAME and starting with
+    256.xx upstream will add a SONAME including the current upstream version.
+    To avoid renaming the package for every new upstream release the SOVERSION
+    will be dropped from the package name.  Add transitional packages.
+  * Update lintian-overrides and minor cleanup of the packaging scripts.
+  * Clean up more carefully after the module build.
+  * Move diversions to /usr/lib{,32}/nvidia/diversions.
+  * Remove possible LEGACY part from virtual package name
+    nvidia-kernel-NVIDIAVERSION (provided by the kernel module).
+  * Add a new substvar for marking the special driver from the NVIDIA Perfkit.
+  * Add helper script debian/extract-pci-ids.sh to extract the PCI IDs of
+    supported devices from nv-kernel.o.  Based on the nvidia_supported script
+    found in Ubuntu's nvidia-current package.  Refresh nv-kernel.ids.
+  * Add new package nvidia-smi for the NVIDIA System Management Interface (a
+    TESLA control utility).  (Closes: #592482)
+
+  [ Russ Allbery ]
+  * Fix determination of the package name in nvidia-kernel-source when
+    generating *.changes files.  (Closes: #589949)
+  * The old nvidia-glx postrm would remove /usr/lib/nvidia/diversions out
+    from under us, so ensure that it exists in the postinst of
+    libgl1-nvidia-glx before creating diversions.
+
+ -- Russ Allbery <rra@debian.org>  Sun, 15 Aug 2010 16:43:53 -0700
+
+nvidia-graphics-drivers (195.36.24-4) unstable; urgency=low
+
+  * Remove the conflicts with ccache in nvidia-kernel-source and
+    nvidia-kernel-dkms and instead set CCACHE_DISABLE in the environment
+    when doing a module build.  (Closes: #582748)
+
+ -- Russ Allbery <rra@debian.org>  Sun, 13 Jun 2010 19:50:11 -0700
+
+nvidia-graphics-drivers (195.36.24-3) unstable; urgency=low
+
+  [ Russ Allbery ]
+  * Tighten the dependency on debhelper since we rely on current debhelper
+    behavior with handling architecture-specific packages.
+  * nvidia-glx now provides xserver-xorg-video-6 so that a user can remove
+    the other video drivers if they chose.
+  * Tell dh_makeshlibs that the loadable vdpau driver in /usr/lib/vdpau
+    isn't a traditional shared library so that it doesn't unnecessarily
+    add the ldconfig calls to the maintainer scripts.
+  * Add Lintian override for the mismatch between the nvidia-glx package
+    name and the SONAMEs of the libraries it includes.
+
+  [ Andreas Beckmann ]
+  * ship missing symlink /usr/lib/tls/libnvidia-tls.so.1
+  * bug-control: report package-status: linux-headers-2.6
+  * debian/module/debian/rules: fix the clean: target to find the kernel
+    config
+  * nvidia-kernel-source.README.Debian: clarify and add m-a debug hint
+  * debian/rules: use DEB_HOST_ARCH instead of DEB_BUILD_ARCH
+  * bump nvidia-kernel-common versioned dependency to 20100522
+  * debian/changelog: update packaging copyright, use gpl2+
+  * debian/control: add Conflicts: ccache (<< 3.0~) (closes: #582748)
+    (an alternate solution would be setting CCACHE_DISABLE=1)
+  * nvidia-glx: add Pre-Depends: dpkg (>= 1.15.7.2)
+  * nvidia-glx: switch to dpkg-maintscript-helper for removal of obsolete
+    config file /etc/default/nvidia-glx
+  * nvidia-glx: work around dpkg-divert bug #581544: useless errors on not
+    writable destination if source does not exist
+  * update watch file magic, add legacy support, upcoming upstream renames
+  * update get-orig-source: target for upcoming upstream renames
+  * debian/control: reformat and synchronize descriptions
+  * add NEWS entry about X display manager startup timeouts and give hints
+    where to increase the default timeouts
+  * add/update old NEWS entries about the legacy drivers
+  * install the same NEWS in nvidia-glx and nvidia-kernel-source
+  * stop creating/removing /usr/lib/libGL.so in the maintainer scripts and the
+    init script (closes: #422002, #546210)
+  * link with the MESA OpenGL implementation by default when compiling with
+    ... -lGL ...
+    - nvidia-glx: add a dpkg trigger to handle creating/removing of
+      /usr/lib/libGL.so depending on the state of libgl1-mesa-dev
+    - nvidia-glx-ia32: ship /usr/lib32/libGL.so symlink pointing to the
+      diverted libGL.so.1.2 from ia32-libs
+  * nvidia-glx-{dev,ia32}: ship /usr/lib{,32}/nvidia/libGL.so, allowing
+    explicit linking with the NVIDIA OpenGL implementation via
+    ... -L/usr/lib/nvidia -lGL ...
+  * nvidia-glx-dev: install headers into /usr/include/nvidia/GL and recommend
+    libgl1-mesa-dev | libgl-dev instead of conflicting with it; rewrite long
+    description and advise to install libgl1-mesa-dev for building portable
+    OpenGL applications (closes: #278256, #370542, #445363, #552388)
+  * compiling OpenGL applications will use the MESA implementation by default,
+    to explicitly compile with the NVIDIA headers use -I/usr/include/nvidia
+  * remove the now function-less /etc/init.d/nvidia-glx script
+  * nvidia-glx.prerm, nvidia-glx-dev.postrm: drop empty maintainer scripts
+  * nvidia-glx{,-ia32}: add symbols control files and drop .shlibs files,
+    accidental linking with libGL.so.1 from NVIDIA is prevented in a different
+    way
+  * nvidia-glx: add Conflicts: fglrx-glx
+  * overhaul maintainer scripts
+  * nvidia-glx: add /usr/share/xserver-xorg/pci/nvidia.ids (closes: #483821)
+  * nvidia-glx.README.Debian: update instructions on configuring xorg.conf
+    (closes: #516379, #576295)
+  * nvidia-glx.README.Debian: add a note about XvMC (closes: #390932)
+  * rename XF86Config.sample to xorg.conf.sample (closes: #392243)
+  * debian/control: use new nvidia:Legacy and nvidia:LegacyDesc substvars
+  * libnvidia-compiler1{,-ia32}: ship the libnvidia-compiler.so symlink,
+    libcuda1 uses this name to dlopen the compiler library
+  * nvidia-opencl-icd{,-ia32}: recommend libnvidia-compiler1{,-ia32}
+  * use generic download URLs pointing to the directories, not the files
+    itself, remove placeholder substitution for URL_X86, URL_X86_64
+  * no longer generate debian/copyright and convert it to DEP-5 format
+  * add Conflicts: nvidia-glx-legacy that was never really taken care of
+
+ -- Russ Allbery <rra@debian.org>  Sat, 12 Jun 2010 19:46:42 -0700
+
+nvidia-graphics-drivers (195.36.24-2) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * add upstream patch NVIDIA_kernel-195.36.24-682377.diff to fix support for
+    more than one GPU with kernel 2.6.32 (closes: #566874)
+  * nvidia-glx: add Recommends: nvidia-vdpau-driver
+  * make nvidia-libvdpau* transitional packages that pull libvdpau* instead,
+    no need to have a non-free variant of the wrapper library that uses a
+    different search path and would require additional compatibility symlinks
+    (closes: #581570, #561108, #570390, #578881, #581827, #581828)
+  * nvidia-kernel-{dkms,source}: temporarily add conflicts with binutils-gold
+    from experimental, currently modules linked with gold cause kernel oops
+    while loading (see: #581336)
+  * add bug-control script to collect more information about related packages
+  * nvidia-vdpau-driver: cleanup /usr/lib/libvdpau_nvidia.so left over by some
+    old versions of the nvidia-libvdpau* packages
+  * nvidia-glx: cleanup /etc/default/nvidia-glx.dpkg-new that might be left
+    over from previous upgrades
+  * run dh_install --list-missing
+  * package libnvidia-compiler.so.*: new packages libnvidia-compiler1,
+    libnvidia-compiler1-ia32
+  * add packages for NVIDIA OpenCL support via installable client driver
+    (ICD): nvidia-opencl-common, nvidia-opencl-icd, nvidia-opencl-icd-ia32,
+    nvidia-libopencl1, nvidia-libopencl1-ia32, nvidia-libopencl1-dev
+  * module source tarball generation: add legacy support
+  * debian/nvidia-{glx,kernel}*.in: add #LEGACY# where appropriate
+  * debian/rules: automatically rename control files when building legacy
+    packages
+  * debian/rules: add new substitution placeholders #!i386#, #!amd64# that are
+    substituted with '#' on the respective architecture and '' elsewhere
+  * update/conditionalize lintian overrides
+
+  [ Jordi Pujol ]
+  * simplify installation by using debian/tmp as intermediate directory
+
+  [ Russ Allbery ]
+  * Improve the nvidia-kernel-dkms description to state that one must have
+    the kernel header package installed for DKMS modules to automatically
+    be built.  (Closes: #581963)
+
+ -- Russ Allbery <rra@debian.org>  Sat, 22 May 2010 19:29:59 -0700
+
+nvidia-graphics-drivers (195.36.24-1) unstable; urgency=low
+
+  [ Russ Allbery ]
+  * New upstream release.  (Closes: #571674, #575457, #575550, #578589)
+  * Add an nvidia-kernel-dkms package which builds the kernel module using
+    DKMS and hence automatically does the right thing with kernel upgrades
+    (provided the module builds).  (Closes: #334848, #395226, #528758)
+  * Overhaul the build system in nvidia-kernel-source to not require
+    module-assistant, be more robust in its derivation of the kernel
+    version, and embed the kernel package version in the module package
+    version.  Recommend nvidia-kernel-common since it's a dependency of
+    the generated module package.  Remove the unnecessary recommendation
+    of devscripts.  (Closes: #254859, #279182, #303521, #368669, #473378)
+    (Closes: #523879, #534535)
+  * nvidia-kernel-<version> now only recommends linux-image-<version>
+    instead of depending on it, allowing the package to be used with
+    hand-built kernels not installed as regular packages.
+  * Build the tarball for nvidia-kernel-source directly in the staging
+    directory rather than using dh_install to install it elsewhere and do
+    that as a dh_auto_install override.  This simplifies creation of the
+    nvidia-kernel-dkms package.
+  * All packages that suggested nvidia-kernel-source now suggest
+    nvidia-kernel-dkms as an alternative.
+
+  [ Andreas Beckmann ]
+  * do not ship empty directory in module package
+  * debian.binary/rules, debian.binary/install.template: use dh_install to
+    install the module
+  * debian.binary/rules: fix clean target if debian/control is missing and
+    cleanup ancient code (closes: #241994, #295909, #460509)
+  * update debian.binary/control.template using the copy from
+    nvidia-graphics-modules-i386
+  * include a copy of the NVIDIA changelog in the module packages built from
+    nvidia-kernel-source
+  * install the changelog from the nvidia-kernel-source package, too, if
+    building via nvidia-graphics-modules
+  * nvidia-kernel-source: bump debhelper dependency to 7 to match module
+    packaging templates
+  * merge debian.binary/copyright with debian/copyright.in
+  * debian/control:
+    - drop versioned Depends/Build-Depends satisfied in lenny
+    - drop Conflicts/Replaces for packages existing before lenny only
+  * TLS cleanup: Debian only ships TLS enabled 2.6 kernels, so remove all
+    dynamic TLS checking and symlink updating code (closes: #394085)
+    - nvidia-glx.README.Debian: don't talk about TLS any longer
+    - debian/nvidia-glx.init: remove (inactive) tls symlink adjusting code
+    - debian/nvidia-glx.default: remove, no longer needed
+    - nvidia-glx.postinst: remove /etc/default/nvidia-glx on upgrades
+    - stop shipping /usr/lib/nvidia/tls_test*
+  * debian/nvidia-glx.bug-script: new bug script that reports a bit of useful
+    version and hardware information
+  * debian/control: bump debhelper B-D to (>= 7.2.3~) for dh_bugfiles
+  * debian/rules: use dh_bugfiles to install bug script
+  * Create symlinks NVIDIA-Linux{-i386,-amd64,} pointing to the extracted
+    upstream archives to reduce #DIRNAME# and $(dirname_*) usage. (Using
+    wildcards is not a good idea since beta releases use a different naming
+    scheme.)
+  * debian/*.in: replace #DIRNAME# with NVIDIA-Linux and rename *.in to * if
+    this was the only substitution
+  * patches/*, patches.save/*, patches.dpatch.save/*: remove, long obsolete
+  * debian/rules: remove obsolete code
+  * debian/upstream_info, debian/rules: simplify
+    - add URL_X86 and URL_X86_64, include both URLs in debian/copyright
+    - drop unused variables BASE_VERSION, FILENAME, DIRNAME, URL, RELEASE,
+      UPSTREAMVERSION, NEXTVER
+  * conftest.h: implement conftest.sh function acpi_walk_namespace (new in
+    195.xx), acpi_walk_namespace is available since 2.4.0 (checked with lxr)
+  * conftest.h: reorder and make INIT_WORK implementation more complete
+  * debian.binary/control.template: rename to *.in
+  * debian/rules: use same variable substitutions as for debian/*.in to create
+    debian.binary/control.template
+  * debian/rules: rename target build-kernel-stamp to module-source-stamp,
+    reindent, simplify and unify; do not require root for building the tarball
+  * debian/rules: rename target configure-stamp to unpack-stamp and fix
+    dependencies
+  * debian/rules: remove unused stamp files, targets and variables
+  * maintainer scripts:
+    - synchronize with dh_make templates
+    - document the target release squeeze for some cleanup operations as a
+      hint to remove them after squeeze release
+    - remove code deactivated before etch release
+    - remove diversion transition and cleanup code introduced before etch
+      release
+    - remove libwfb.so diversion cleanup code introduced before lenny release
+  * nvidia-glx: stop diverting /usr/lib/xorg/modules/extensions/libGLcore.so,
+    was removed in Xorg 1.6, add Breaks: xserver-xorg-core (<< 2:1.6) instead
+  * nvidia-glx: stop diverting files not seen in etch or later:
+    - /usr/lib/xorg/modules/extensions/libGLcore.a
+    - /usr/lib/xorg/modules/extensions/libglx.a
+  * nvidia-glx: clean up diversion of /usr/lib/libGL.a (was not being created
+    in etch or later), the file is provided by libgl1-mesa-swx11-dev which
+    conflicts with nvidia-glx
+  * remove empty maintainer script nvidia-glx-dev.preinst.in
+  * debian/rules, debian/*.install.in: use dh_install instead of manual
+    installation
+  * debian/*.dirs: remove or minimize
+  * debian/rules: reindent and simplify
+  * debian/rules: switch to dh with a few overrides
+  * debian.binary/patches/select-nv-kernel.o.ARCH.patch: add new patch instead
+    of editing files with sed when creating the tarball
+  * update lintian overrides
+  * debian/rules: generate most parts of the AUTOGEN list automatically
+  * debian/changelog, debian/*.README*: whitespace cleanup
+  * move files: debian.binary/ ==> debian/module/debian/,
+    Makefile, conftest.*, patches.h ==> debian/module/
+  * debian/rules: adjust for debian/module/
+  * switch to source format 3.0 (quilt)
+  * debian/module/debian/: set source format 1.0, the module source "package"
+    is shipped as .tar.bz2 and unpacked with tar, therefore no newer features
+    can be used
+  * conftest.h: ensure the macros from linux/version.h are available
+  * debian/module/debian/patches/conditionally-include-linux_version.h.patch:
+    new patch, ensure linux/version.h is included only once (that header does
+    not have include guards)
+  * debian/README*: remove reference to http://people.debian.org/~rdonald
+  * remove Randall Donald from Uploaders per his request
+  * debian/control:
+    - remove dependency on x11-common, probably remained from the X11R6 time
+    - reformat, synchronize, use more substvars
+    - add Conflicts with nvidia-glx-legacy-* packages
+    - reorder packages for better logical grouping
+  * install the bug-script in all packages as well as in the binary modules
+    packages built from nvidia-kernel-source
+  * replace shell script debian/upstream_info with makefile fragment
+    debian/rules.defs
+  * debian/rules, debian/README.source: add new target get-orig-source and
+    simplify instructions for tarball creation:
+    uscan --report && dch -v <version> && debian/rules get-orig-source
+  * fix-2.6.33-build.patch: remove, fixed by upstream in 195.36.24
+  * libcuda1.symbols: update for symbol changes in 195.xx
+  * nvidia-kernel-source.README.Debian: mention dkms and m-a before everything
+    else, drop some very outdated information
+  * debian/rules.defs, debian/rules: add variable/placeholder LEGACY
+    and new subst vars nvidia:Legacy and nvidia:LegacyDesc
+
+ -- Russ Allbery <rra@debian.org>  Mon, 10 May 2010 17:40:26 -0700
+
+nvidia-graphics-drivers (190.53-4) unstable; urgency=high
+
+  * Set urgency to high for RC bug fixes.
+  * Add Conflicts and Replaces for the fix in 190.53-3 to the
+    nvidia-*vdpau*-ia32 packages.  (190.53-2 installed files in
+    the opposite package as was intended.)  (Closes: #577059)
+  * Remove postinst for generated module packages.  This script used to
+    set up the NVIDIA device files in /dev, but this is now handled by
+    nvidia-kernel-common.
+  * Remove empty postrm from generated module packages.
+  * Tell update-rc.d to only start the nvidia-glx script and not create
+    stop links, matching the LSB script header.  (Closes: #577055)
+  * Make nvidia-kernel-source depend on module-assistant.  At least for
+    right now, it uses the make fragments provided by module-assistant to
+    implement required rules for the module building interface.
+  * Make all Lintian overrides for binary problems that the license
+    doesn't allow us to fix (unstripped shared libraries, executable
+    stack, non-PIC code, etc.) general rather than referring to specific
+    files.  We won't be able to fix these in any files they turn up in.
+    This allows us to use static Lintian override files and stop
+    substituting version numbers into them in debian/rules, simplifying
+    the build process.
+  * Add some additional Lintian overrides for nvidia-glx for the weirdness
+    we need to partly replace the free libGL libraries.
+
+ -- Russ Allbery <rra@debian.org>  Fri, 09 Apr 2010 17:26:41 -0700
+
+nvidia-graphics-drivers (190.53-3) unstable; urgency=high
+
+  [ Andres Mejia ]
+  * Fix weak library dependency of dev packages.
+  * Bump Standards-Version to 3.8.4.
+  * Include Copyright line in copyright file. Copyright line was taken from
+    cuda.h header file.
+  * Place updated NVIDIA license in copyright file.
+  * Fix file permissions in installed files.
+  * Fix installation of libvdpau_nvidia.so.* for nvidia-vdpau-driver-ia32
+    package.
+  * Add myself to Uploaders field in answer to bug #568952.
+
+  [ Russ Allbery ]
+  * Set urgency to high for RC bug fixes.  The version currently in
+    testing is not usable with the X server in testing.
+  * Do not run configure under $(ROOT_CMD) in kdist_config.  kdist_build
+    already runs that target under $(ROOT_CMD), so this provokes errors
+    from fakeroot about nesting invocations.  Nothing this target does
+    requires fakeroot.  Thanks, Bastian Kleineidam.  (Closes:  #416594)
+  * nvidia-glx-dev should depend on libx11-dev since GL/glx.h includes
+    headers from it.  Thanks, Baruch Even.  (Closes: #433178)
+  * Do not remove /usr/lib/libGL.so on purge of nvidia-glx.  At that
+    point, we've removed our diversion, so this is someone else's file and
+    we shouldn't be deleting it.
+  * Remove our diversions on aborted installations of nvidia-glx, since we
+    may have gotten far enough to create them.
+  * Document the nvidia-glx postrm cases and rationale in more detail in
+    comments in the postrm.  Thanks, Sven Joachim.  (Closes: #575272)
+  * Stop stripping the binaries.  The NVIDIA license does not allow us to
+    modify the binaries in any way.
+  * Stop generating debian/control and risking that the rules to do so may
+    fire during a normal package build.  The only variable being
+    substituted into the generated debian/control was the NVIDIA version,
+    and that only in binary package stanzas.  Instead, generate an
+    ${nvidia:Version} substvar with that value and use that substvar in
+    debian/control.
+  * Force source format 1.0.  The interaction of the packaging and the
+    upstream source is way too complicated to figure out how to move to
+    3.0 (quilt) at this point.
+  * Add a preliminary README.source explaining how to import new upstream
+    versions and build the package for upload.
+  * Add an explanation for the non-free placement of this package to
+    debian/copyright as requested by Policy 12.5.
+  * Add myself to Uploaders.
+
+  [ Andreas Beckmann ]
+  * Add Enhances: lib[32]vdpau1 to nvidia-vdpau-driver[-ia32].
+  * Add Breaks: libvdpau1 (<< 0.4) to nvidia-vdpau-driver (new directory
+    layout does not work with old wrapper)
+  * Add Depends: lib[32]vdpau1 | nvidia-libvdpau1[-ia32]
+    to nvidia-vdpau-driver[-ia32].
+  * vdpau symlink cleanup: for the "plugins" only the
+    /usr/lib[32]/vdpau/libvdpau_XYZ.so.1 -> libvdpau_XYZ.so.VERSION
+    links are needed, nothing in /usr/lib[32]/ and no libvdpau_XYZ.so
+  * Update symbols files and lintian overrides for moved vdpau libraries.
+  * nvidia-vdpau-driver: drop postinst/postrm scripts.
+  * nvidia-vdpau-driver-ia32: add README.txt.
+  * debian/control.in: update documentation references.
+  * libcuda1: update symbols files for new symbols (190.xx).
+  * Drop ia32-libs alternative dependencies.
+  * Install upstream changelog as changelog.gz (closes: #459721)
+  * debian/watch: check x86 and x86_64, uscan can download multiple files
+  * nvidia-glx.shlibs: add libnvidia-cfg.so
+  * nvidia-glx: update lintian overrides for moved libnvidia-cfg.so
+  * nvidia-glx: add lintian overrides for spelling errors
+  * debian.binary/control.template: make module package depend on the
+    corresponding linux-image (closes: #463403)
+  * debian/*.NEWS: remove asterisks to make lintian happy
+  * nvidia-kernel-source: switch patch system from dpatch to quilt (closes:
+    #479541)
+  * debian.binary/patches/fix-2.6.33-build.patch: new patch to fix module
+    build with kernel 2.6.33 (closes: #573251)
+  * improve handling of generated files (closes: #533518)
+  * Add more bug numbers to old changelog entries.
+  * Add missing changelog entry about ia32 transition to 185.18.14-2.
+
+ -- Russ Allbery <rra@debian.org>  Thu, 08 Apr 2010 18:13:48 -0700
+
+nvidia-graphics-drivers (190.53-2) unstable; urgency=low
+
+  [ Randall Donald ]
+  * Fix libvdpau_nvidia.so symlink (closes: #566518)
+
+  [ Andres Mejia ]
+  * Fix dependencies for nvidia-libvdpau1 and nvidia-libvdpau1-ia32. (closes:
+    #566691)
+  * Ensure NVIDIA driver packages are in source tree before attempting to build.
+  * Fix deprecated use of '<' to '<<' in package relationships.
+  * Start using the most recent debhelper compat version.
+  * Bump Standards-Version to 3.8.3.
+  * Use dh_prep instead of dh_clean -k.
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 29 Jan 2010 17:44:12 -0800
+
+nvidia-graphics-drivers (190.53-1) unstable; urgency=low
+
+  [Harald Dunkel]
+  * fix nvidia-libvdpau1.dirs
+  * fix find-and-replace loop to ignore debian.binary/patches directory
+  * fix lib32 path for libvdpau_nvidia and libvdpau_trace
+
+  [Randall Donald]
+  * New upstream. (closes: #563022, #565965)
+  * Add new vdpau directory structure (closes: #547248)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 16 Jan 2010 10:59:16 -0800
+
+nvidia-graphics-drivers (190.42-4) UNRELEASED; urgency=low
+
+  * Fix issue with upgrading from 190.42-2. (Closes: #558369)
+  * Add Provides entry of vdpau-driver for vdpau driver packages.
+  * Rename nvidia-libvdpau1-driver to nvidia-vdpau-driver.
+  * Rename nvidia-libvdpau1-driver-ia32 to nvidia-vdpau-driver-ia32.
+  * Add proper Replaces and Conflicts entries for package renames.
+  * Update Depends entries for nvidia-libvdpau1* packages. (Closes: #558482)
+
+ -- Andres Mejia <mcitadel@gmail.com>  Sun, 29 Nov 2009 15:52:27 -0500
+
+nvidia-graphics-drivers (190.42-3) unstable; urgency=low
+
+  [ Andres Mejia ]
+  * Provide a package for just the NVIDIA VDPAU driver.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 25 Nov 2009 10:52:55 -0800
+
+nvidia-graphics-drivers (190.42-2) unstable; urgency=low
+
+  * Fix nextver (closes: #556594, #556571)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 17 Nov 2009 09:59:19 -0800
+
+nvidia-graphics-drivers (190.42-1) unstable; urgency=low
+
+  * New Upstream (closes: #555739,#555297,#555298)
+  * change section of kernel module to non-free/kernel
+  * move libnvidia-cfg.so to /usr/lib (closes: #505863)
+  * alter watch file (closes: #550095)
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 11 Nov 2009 13:13:28 -0800
+
+nvidia-graphics-drivers (185.18.36-2) unstable; urgency=low
+
+  * Add 2.6.31 support in conftest.h (closes: #540663)
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 03 Sep 2009 16:50:48 -0700
+
+nvidia-graphics-drivers (185.18.36-1) unstable; urgency=low
+
+  * New Upstream (closes: #542889, #543155)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 24 Aug 2009 15:54:18 -0700
+
+nvidia-graphics-drivers (185.18.31-2) unstable; urgency=low
+
+  * actually build using ia32-libs. thwapp!!
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 21 Aug 2009 15:21:16 -0700
+
+nvidia-graphics-drivers (185.18.31-1) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * New upstream: 185.18.31
+  * use the re-introduced monolithic ia32-libs on amd64 (closes: #536545)
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 21 Aug 2009 12:28:32 -0700
+
+nvidia-graphics-drivers (185.18.14-2) unstable; urgency=low
+
+  [ Andreas Beckmann ]
+  * /emul/ia32-linux/usr/lib to /usr/lib32 transition (closes: #534873)
+  * cleanup /emul/ia32-linux/usr/lib/tls/libnvidia-tls.so.1
+  * do not ship generated files in the source package
+  * nvidia-kernel-source: recommend module-assistant
+  * shlibs cleanup (closes: #533515)
+    - update Build-Depends to include all needed libraries
+    - updates for ia32-libs changes, now separate ia32-lib* packages
+    - let the shlibs system generate all dependencies
+    - debian/nvidia-glx.shlibs: switch to libgl1-mesa-glx | libgl1 (closes:
+      #526463)
+    - debian/nvidia-glx-ia32.shlibs: new file
+  * debian/nvidia-glx-dev.links.in: remove comment (generates unwanted and
+    invalid symlink)
+  * switch to dh_lintian
+  * update lintian overrides for nvidia-glx*
+  * nvidia-libvdpau* cleanup (closes: #519792)
+  * debian/nvidia-libvdpau.shlibs: removed, identical to generated shlibs
+  * rename nvidia-libvdpau* to nvidia-libvdpau1* (closes: #534536)
+  * cleanup leftover files from nvidia-libvdpau-ia32
+  * add overrides and symbol files for nvidia-libvdpau1*
+  * libcuda1, libcuda1-ia32, libcuda-dev: split from their respective
+    nvidia-glx-* packages (closes: #497077)
+  * add overrides and symbol files for libcuda1*
+  * restore support for 2.6.2[78] (closes: #523727)
+  * really put 32 and 64 bit versions of nv-kernel.o in the source package
+    (closes: #533279)
+  * nvidia-kernel-source: abort module compilation with helpful error message
+    if build directory was not cleaned after old package build (closes:
+    #533217, #523947)
+  * debian/nvidia-glx.README.Debian:
+    - update references (closes: #533195)
+    - drop outdated section about header installation (closes: #411894)
+  * debian/nvidia-glx-dev.links.in: removed, contained only a dangling symlink
+  * debian/nvidia-kernel-source.README.Debian.in: fix typo (closes: #434376)
+  * lintian cleanup
+    - nvidia-glx.NEWS, nvidia-kernel-source.NEWS: reindent
+    - debian/watch: add dummy file, website is not parsable
+    - debian/control.in: cosmetics
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 06 Jul 2009 12:28:32 -0700
+
+nvidia-graphics-drivers (185.18.14-1) unstable; urgency=low
+
+  [ Randall Donald ]
+  * New upstream: (closes: #532568, #532568, #532774)
+  * still only builds via module-assistant
+
+  [ Harald Dunkel ]
+  * create empty patches.h
+  * new nvidia-libvdpau, nvidia-libvdpau-ia32, nvidia-libvdpau-dev: (closes: #519792)
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 10 Jun 2009 15:35:55 -0700
+
+nvidia-graphics-drivers (180.44-2) unstable; urgency=low
+
+  * Fix the dh_clean issue that just showed up now for some reason
+    and freaked everyone out. (closes: #523716, #523757, #523764)
+
+ -- Randall Donald <rdonald@debian.org>  Sun, 12 Apr 2009 15:11:36 -0700
+
+nvidia-graphics-drivers (180.44-1) unstable; urgency=low
+
+  [ Randall Donald ]
+  * The "Len is a super guy" release
+  * New upstream (closes: #523583, #523566)
+  * set kernel debhelper compat at 7
+  * change nvidia-glx card support subscription.
+
+  [ Lennart Sorensen ]
+  * Patch for Debian 2.6.29
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 11 Apr 2009 10:51:06 -0700
+
+nvidia-graphics-drivers (180.29-1) unstable; urgency=low
+
+  [ Harald Dunkel ]
+  * new upstream
+  * add shlibs information for libvdpau
+  * add 32bit libraries for vdpau
+  * remove debian/temp during cleanup
+
+  [ Randall Donald ]
+  * Add vdpau.so links (closes: #513765)
+  * Yay Lenny released. Now upload to unstable (closes: #514788)
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 19 Jan 2009 12:09:26 -0800
+
+nvidia-graphics-drivers (180.22-2) experimental; urgency=low
+
+  * Add VDPAU stuff (closes: #511524)
+
+ -- Randall Donald <rdonald@debian.org>  Sun, 11 Jan 2009 13:09:26 -0800
+
+nvidia-graphics-drivers (180.22-1) experimental; urgency=low
+
+  * New upstream. (closes: #501668)
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 09 Jan 2009 21:27:48 -0800
+
+nvidia-graphics-drivers (177.82-1) experimental; urgency=low
+
+  * New upstream.
+  * non-SSE re-enabled (closes: #462429)
+  * replace supported cards list with summary.
+
+ -- Randall Donald <rdonald@debian.org>  Sun, 21 Dec 2008 15:18:21 -0800
+
+nvidia-graphics-drivers (177.80-2) experimental; urgency=low
+
+  * Temporarily remove the Provides on xserver-xorg-video-2 for those using
+  experimental Xorg. (closes: #504585)
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 12 Nov 2008 11:25:41 -0800
+
+nvidia-graphics-drivers (177.80-1) experimental; urgency=low
+
+  * New upstream.
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 07 Oct 2008 16:10:53 -0700
+
+nvidia-graphics-drivers (173.14.09-5) unstable; urgency=high
+
+  * RC bug:  write *.deb and *.changes file into the same subdirectory
+  (closes: #493470)
+  * ARCH is undefined, define and use DEB_HOST_ARCH instead
+  (Thanks to Harald Dunkel <harald.dunkel@t-online.de>)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 01 Sep 2008 10:58:05 -0700
+
+nvidia-graphics-drivers (173.14.09-4) unstable; urgency=medium
+
+  * Fix bashism for nvidia-glx-ia32 (closes: #495478)
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 28 Aug 2008 11:03:15 -0700
+
+nvidia-graphics-drivers (173.14.09-3) unstable; urgency=high
+
+  * Only ship TLS libs. RC bug fix (closes: #441975)
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 23 Jul 2008 09:41:44 -0700
+
+nvidia-graphics-drivers (173.14.09-2) unstable; urgency=low
+
+  * comment out chmod on missing patch directory. (closes: #487624, #487350)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 23 Jun 2008 10:31:33 -0700
+
+nvidia-graphics-drivers (173.14.09-1) unstable; urgency=low
+
+  * New upstream.
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 19 Jun 2008 17:42:28 -0700
+
+nvidia-graphics-drivers (173.14.05-1) unstable; urgency=low
+
+  [ Randall Donald ]
+  * New upstream. (closes: #483619)
+  * move xen patch to source build patches.
+  * remove 2.6.25 patch, now is upstream.
+
+  [ Lennart Sorensen ]
+  * new Xen patch for 173.04.05.
+
+  [ Randall Donald ]
+  * add Lsb headers (closes: #479242)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 03 Jun 2008 21:14:40 -0700
+
+nvidia-graphics-drivers (169.12-4) unstable; urgency=low
+
+  * Fix permissions on kernel patches directory (closes: #483074)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 27 May 2008 20:24:29 -0700
+
+nvidia-graphics-drivers (169.12-3) unstable; urgency=low
+
+  * Make sure wfb diversion is removed. (closes: #482995)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 26 May 2008 09:27:40 -0700
+
+nvidia-graphics-drivers (169.12-2) unstable; urgency=low
+
+  * Add initial linux-modules-nonfree-2.6 intergration, 2.6.24 only
+  * create storage directories for old patches and don't include in binary
+    packages.
+  * Remove wfb diversion and don't install nvidia's copy.
+  * Patch for 2.6.25 support
+  * Patch to compile on xen enabled kernels (closes: #476504, #481485)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 24 May 2008 19:57:18 -0700
+
+nvidia-graphics-drivers (169.12-1) unstable; urgency=low
+
+  * fix shlib dep
+  * New upstream.
+  * remove xserver-xorg-core dependency.
+  * add cuda files (closes: #463776)
+  * add bzip2 to build-depends. (closes: #466139)
+  * add uploaders field that went missing: (closes: #454999, #472448)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 05 Apr 2008 17:59:56 -0700
+
+nvidia-graphics-drivers (169.09-1) unstable; urgency=low
+
+  * New upstream. (with fan fix!)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 02 Feb 2008 15:21:28 -0800
+
+nvidia-graphics-drivers (169.07-2) unstable; urgency=low
+
+  * Fix permissions on patches.old (closes: #459848, #460173)
+  * fix root_cmd (closes: #459833)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 12 Jan 2008 17:10:40 -0800
+
+nvidia-graphics-drivers (169.07-1) unstable; urgency=low
+
+  * New upstream.
+  * Remove ROOT_CMD from debian.binary/rules (closes: 416594)
+  * always include x86_64 nv-kernel.o and detect which to use at kernel-source
+  build time. (closes: #458295, #437128)
+  * move patches dir out of the way.
+  * rename tarball to nvidia-kernel.tar.bz2 for upcoming module packaging.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 07 Jan 2008 12:15:15 -0800
+
+nvidia-graphics-drivers (100.14.19-1) unstable; urgency=low
+
+  * new upstream.
+  * Xorg 7.3 compatible (closes: #420177 )
+  * divert libwfb.so and libGLcore.so (closes: #442846, #441400)
+  * change maintainer to packaging team.
+  * change x11-common depends to 1:7.3+2
+  * change provides to xserver-xorg-video-2
+  * remove use of update-modules (closes: #435650)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 22 Sep 2007 17:16:06 -0700
+
+nvidia-graphics-drivers (100.14.11-1) unstable; urgency=low
+
+  * New upstream. (closes: #430841)
+  * add more GPUs to supported list
+  * Disable Xen patch until it compiles again.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 02 Jul 2007 17:41:57 -0700
+
+nvidia-graphics-drivers (100.14.09-1) unstable; urgency=low
+
+  * The "use the released version and not the beta drivers" release.
+  * Remove root_cmd from module rules file. (closes: #416594)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 19 Jun 2007 23:50:31 -0700
+
+nvidia-graphics-drivers (100.14.06-1) unstable; urgency=low
+
+  * New upstream.
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 16 Jun 2007 20:12:55 -0700
+
+nvidia-graphics-drivers (1.0.9755-1) unstable; urgency=low
+
+  * new upstream uploaded to unstable (closes: #415041)
+  * change description to refer only to xorg. (closes: #404599, #402223)
+  * fix Description regarding supported cards. (closes: #416946)
+  * Add Vcs header
+  * Add Xen support (thanks to Marco Nenciarini) (closes: #367326)
+
+ -- Randall Donald <rdonald@debian.org>  Sun, 22 Apr 2007 20:26:57 -0700
+
+nvidia-graphics-drivers (1.0.9746-2) experimental; urgency=low
+
+  * include libnvidia-wfb.so.<version> for 8800 peeps.
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 30 Dec 2006 17:00:50 -0800
+
+nvidia-graphics-drivers (1.0.9746-1) experimental; urgency=low
+
+  * new upstream with 8800 support.
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 26 Dec 2006 15:56:06 -0800
+
+nvidia-graphics-drivers (1.0.9631-1) experimental; urgency=low
+
+  * New Upstream.
+  * Uploaded to experimental while 8776 is being settled for etch.
+
+ -- Randall Donald <rdonald@debian.org>  Thu,  7 Dec 2006 19:38:58 -0800
+
+nvidia-graphics-drivers (1.0.9629-2) unstable; urgency=low
+
+  * remove libGL.so created by init script. (closes: #400129)
+
+ -- Randall Donald <rdonald@debian.org>  Sat,  2 Dec 2006 13:28:04 -0800
+
+nvidia-graphics-drivers (1.0.9629-1) unstable; urgency=low
+
+  * New Upstream (closes: #397505)
+  * Check for compiler existance (closes: #319544)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 11 Nov 2006 13:35:39 -0800
+
+nvidia-graphics-drivers (1.0.9625-2) experimental; urgency=low
+
+  * Include NOSMBUS patch. (closes: #390767)
+  * Include all changes made to the 1.0.8774 branch:
+      add diversion of libGL.so to nvidia-glx-ia32 (closes: #393056)
+      make init script create libGL.so for nvidia-glx-dev
+      make sure nvidia-glx-dev diversions are removed and conflict with older
+      versions of -dev
+      make init script detect libgl1-mesa-dev and create libGL.so link
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 19 Oct 2006 20:32:25 -0700
+
+nvidia-graphics-drivers (1.0.9625-1) experimental; urgency=low
+
+  * Beta Drivers supporting GLX_EXT_texture_from_pixmap.
+  * install nvidia_drv.so
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 23 Sep 2006 11:29:28 -0700
+
+nvidia-graphics-drivers (1.0.8776-4) unstable; urgency=high
+
+  * Add patch for compiling against 2.6.19. (closes: #401201, #402000)
+
+ -- Randall Donald <rdonald@debian.org>  Thu,  4 Jan 2007 20:18:03 -0800
+
+nvidia-graphics-drivers (1.0.8776-3) unstable; urgency=low
+
+  * rm libGL.so created by init script. (closes: #400129)
+
+ -- Randall Donald <rdonald@debian.org>  Sun,  3 Dec 2006 17:55:23 -0800
+
+nvidia-graphics-drivers (1.0.8776-2) unstable; urgency=low
+
+  * Check for compiler existance (closes: #319544)
+  * remove old nvidia-glx-dev.links lines (closes: #398677)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 18 Nov 2006 21:07:46 -0800
+
+nvidia-graphics-drivers (1.0.8776-1) unstable; urgency=medium
+
+  * New upstream.
+  * Includes upstream hotfix for Rapid7 Advisory R7-0025 Buffer Overflow
+    (closes: #393573)
+  * urgency=medium for RC bug fix
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 19 Oct 2006 18:26:24 -0700
+
+nvidia-graphics-drivers (1.0.8774-7) unstable; urgency=low
+
+  * add diversion of libGL.so to nvidia-glx-ia32 (closes: #393056)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 14 Oct 2006 13:36:34 -0700
+
+nvidia-graphics-drivers (1.0.8774-6) unstable; urgency=low
+
+  * make init script create libGL.so for nvidia-glx-dev as well
+  as providing the file will get diverted. Also remove the extra
+  nvidia-glx-dev removal diversions not needed anymore. (closes: #392639)
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 13 Oct 2006 10:42:25 -0700
+
+nvidia-graphics-drivers (1.0.8774-5) unstable; urgency=high
+
+  * make sure nvidia-glx-dev diversions are removed and conflict with older
+  versions of -dev
+  * urgency=high for fixing broken upgrade path.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 11 Oct 2006 11:21:39 -0700
+
+nvidia-graphics-drivers (1.0.8774-4) unstable; urgency=high
+
+  * The problem in #208198 no longer exists but another one has arisen due
+  to unwanted linking against NVIDIA's libGL.so.1. Solution: Have nvidia-glx
+  divert libGL.so and have the init script test for the existence of the
+  diverted libGL.so.xlibmesa file and then create a /usr/lib/libGL.so symlink
+  to libGL.so.1.2.xlibmesa. Slightly evil but doesn't leave any dangling
+  symlinks after the init script is called.  (closes: #208198)
+  * High-urgency upload for RC bugfix.
+  * run a version-change to update files in subversion, especially control
+  (closes: #391795)
+  * Clean up X11R6 diversions. (closes: #380433)
+
+ -- Randall Donald <rdonald@debian.org>  Mon,  9 Oct 2006 16:18:26 -0700
+
+nvidia-graphics-drivers (1.0.8774-3) unstable; urgency=low
+
+  * make nvidia-glx provide xserver-xorg-video-1.0 for xorg 7.1
+    (closes: #385114)
+  * upload xorg 7.1 version to unstable
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 21 Sep 2006 10:44:17 -0700
+
+nvidia-graphics-drivers (1.0.8774-2) experimental; urgency=low
+
+  * make nvidia-glx provide xserver-xorg-video-1.0 for xord 7.1
+  (closes: #385114)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 28 Aug 2006 20:54:34 -0700
+
+nvidia-graphics-drivers (1.0.8774-1) unstable; urgency=low
+
+  * New upstream. (closes: #384608)
+  * uncomment dh_installmodules in module's rules file.
+  * Some important bugs will be fixed with -2
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 28 Aug 2006 20:27:45 -0700
+
+nvidia-graphics-drivers (1.0.8762-2) unstable; urgency=low
+
+  * Have nvidia-glx-dev conflict with mesa-common-dev
+
+ -- Randall Donald <rdonald@debian.org>  Fri,  2 Jun 2006 20:44:38 -0700
+
+nvidia-graphics-drivers (1.0.8762-1) unstable; urgency=low
+
+  * New upstream.
+  * take out dh_strip temporarily while the current strip fails on the
+    nvidia libs.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 22 May 2006 15:26:58 -0700
+
+nvidia-graphics-drivers (1.0.8756-4) unstable; urgency=low
+
+  * Include a good nvidia-kernel-source.tar.gz
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 11 Apr 2006 22:48:33 -0700
+
+nvidia-graphics-drivers (1.0.8756-3) unstable; urgency=low
+
+  * Adjust for Xorg7.0 support. Thanks to Rasmus Bog Hansen <moffe@zz9.dk>
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 11 Apr 2006 10:08:13 -0700
+
+nvidia-graphics-drivers (1.0.8756-2) unstable; urgency=low
+
+  * nvidia-glx-dev: Add the missing Provides: libgl-dev (closes: #361589)
+
+ -- Randall Donald <rdonald@debian.org>  Sun,  9 Apr 2006 09:54:21 -0700
+
+nvidia-graphics-drivers (1.0.8756-1) unstable; urgency=low
+
+  * New upstream (closes: #361352)
+  * Please don't file wishlist bugs after only a few hours.
+  * nvdia-glx-dev: put headers under /usr/include and conflict
+    with other libgl-dev
+  * nvidia-glx-dev: stricter depends on nvidia-glx (closes: #335539)
+  * nvidia-glx: include libnvidia-cfg (closes: #356800)
+  * lower debhelper level back to sarge ver. 4 level (closes: #356775)
+
+ -- Randall Donald <rdonald@debian.org>  Fri,  7 Apr 2006 18:55:06 -0700
+
+nvidia-graphics-drivers (1.0.8178-3) unstable; urgency=low
+
+  * upload fix for 2.6.16 (closes: #357992, #346355)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 28 Mar 2006 19:48:59 -0800
+
+nvidia-graphics-drivers (1.0.8178-2.1) unstable; urgency=low
+
+  * add new upstream patch NVIDIA_kernel-1.0-8178-U012206.diff.txt,
+    closes #357992
+
+ -- Harald Dunkel <harald.dunkel@t-online.de>  Fri, 24 Mar 2006 06:51:49 +0100
+
+nvidia-graphics-drivers (1.0.8178-2) unstable; urgency=low
+
+  * very belated change of kernel-image to linux-image in Recommends.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 13 Feb 2006 20:26:15 -0800
+
+nvidia-graphics-drivers (1.0.8178-1) unstable; urgency=low
+
+  * Upload to archive.
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 27 Dec 2005 13:46:44 -0800
+
+nvidia-graphics-drivers (1.0.8178-0.1) unstable; urgency=low
+
+  * patch scheme added
+  * applied NVidia's patch NVIDIA_kernel-1.0-8178-U122205
+
+ -- Harald Dunkel <harald.dunkel@t-online.de>  Tue, 27 Dec 2005 15:23:41 +0100
+
+nvidia-graphics-drivers (1.0.8178-0) unstable; urgency=low
+
+  * new upstream
+
+ -- Harald Dunkel <harald.dunkel@t-online.de>  Sat, 24 Dec 2005 09:27:56 +0100
+
+nvidia-graphics-drivers (1.0.8174-1) unstable; urgency=low
+
+  * The "Radiohead" Release ;)
+  * New upstream.
+  * Upload to unstable.
+  * Thanks to Harald Dunkel for initial build.
+  * LEGACY GPUs: If you have a TNT, TNT2, Vanta, GeForce 256, GeForce DDR,
+    Quadro, GeForce2 Pro, GeForce2 GTS, GeForce2 Ultra, GeForce2 Ti,
+    Quadro2Pro, DO NOT INSTALL THIS RELEASE!!! They are not supported.
+  * update NEWS files again.
+  * add Xorg 6.8 to the descriptions to cut down on confusion.
+  * add reference to linux- kernel packages in README.Debian
+  * nvidia-xconfig will be in a separate package.
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 10 Dec 2005 18:33:37 -0800
+
+nvidia-graphics-drivers (1.0.8174-0) unstable; urgency=low
+
+  * new upstream
+
+ -- Harald Dunkel <harald.dunkel@t-online.de>  Wed,  7 Dec 2005 19:40:50 +0100
+
+nvidia-graphics-drivers (1.0.7676-2) experimental; urgency=low
+
+  * add exit 0 to module postrm (closes: #252018)
+  * add more documentation to /etc/default/nvidia-glx (closes: #280237)
+  * reorganize nvidia-glx init script
+  * remove xserver provides (man this was an old addition) (closes: #329320)
+  * fix nvidia-glx-dev missing links (closes: #336778)
+  * now that sarge is stable upgrade DH_COMPAT to 5 (closes: #336734)
+  * Supply diversion for libglx.so to work with newer xorg.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 23 Nov 2005 01:20:12 +0000
+
+nvidia-graphics-drivers (1.0.7676-1) experimental; urgency=low
+
+  * New Upstream. (includes fix for GeForce FX 7880)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 29 Aug 2005 15:48:27 -0700
+
+nvidia-graphics-drivers (1.0.7676-0) experimental; urgency=low
+
+  * new upstream
+
+ -- Harald Dunkel <harald.dunkel@t-online.de>  Mon, 15 Aug 2005 21:53:07 +0200
+
+nvidia-graphics-drivers (1.0.7667-3) experimental; urgency=low
+
+  * back out libGL.so mess until it upgrades properly.
+  * move back to experimental while work is being done on the above.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 18 Jul 2005 13:08:11 -0700
+
+nvidia-graphics-drivers (1.0.7667-2) unstable; urgency=low
+
+  * fix dangling libGL.so issue. nvidia-glx by itself will now
+    link to the diverted xlibmesa library (closes: #208198, #306533, #272438)
+  * Move nvidia-kernel-source to Suggests in nvidia-glx (closes: #295891)
+  * Modify description to make note of GPUs NOT supported
+  * update module README.Debian to refer to  nvnews.net forum.
+    (closes: #299916)
+  * Update nvidia-kernel-source README.Debian to mention module-assistant
+    and remove mention of patches that are unnecessary and other old
+    references.
+  * change upstream_info to not use bashisms. (closes: #304322)
+  * Update to policy 3.6.2
+  * Move GL headers to /usr/share/nvidia/includes/GL. (closes: #268274)
+  * Remove unnecessary dependancy on libglu
+  * Add NEWS item about using legacy packages.
+  * LEGACY GPUs: If you have a TNT, TNT2, Vanta, GeForce 256, GeForce DDR,
+  Quadro, GeForce2 Pro, GeForce2 GTS, GeForce2 Ultra, GeForce2 Ti, Quadro2Pro,
+  DO NOT INSTALL THIS RELEASE!!! Use the nvidia-glx-legacy and
+  nvidia-kernel-source-legacy packages instead.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 13 Jul 2005 14:23:26 -0700
+
+nvidia-graphics-drivers (1.0.7667-1) experimental; urgency=low
+
+  * New upstream (closes: #315446)
+  * Thanks again to Harald Dunkel for patch and amd64 testing.
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 24 Jun 2005 22:51:46 -0700
+
+nvidia-graphics-drivers (1.0.7664-2) experimental; urgency=low
+
+  * downgrade the libc6 change back to the version in unstable.
+    (closes: #315313)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 21 Jun 2005 14:07:42 -0700
+
+nvidia-graphics-drivers (1.0.7664-1) experimental; urgency=low
+
+  * The "Commander Cool Drew Hess" release.
+  * New upstream. (Thanks to Harald Dunkel for initial work)
+  * uploaded to experimental due to needing GLIBC_2.3.3
+  and legacy support for some GPU's has been removed.
+  * Add news item about legacy support.
+  * LEGACY GPUs: If you have a TNT, TNT2, Vanta, GeForce 256, GeForce DDR,
+  Quadro, GeForce2 Pro, GeForce2 GTS, GeForce2 Ultra, GeForce2 Ti, Quadro2Pro,
+  DO NOT INSTALL THIS RELEASE!!!  NVIDIA will be supporting these cards in a
+  special legacy driver (as yet unreleased and not included in this package).
+  So if you have the one of the above listed GPUs,
+  remain with the 1.0.7174-3 release.
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 18 Jun 2005 16:46:48 -0700
+
+nvidia-graphics-drivers (1.0.7664-0) experimental; urgency=low
+
+  * New upstream.
+
+ -- Harald Dunkel <harald.dunkel@t-online.de>  Sat, 11 Jun 2005 22:42:26 +0200
+
+nvidia-graphics-drivers (1.0.7174-4) unstable; urgency=low
+
+  * Remove glu depends.
+  * other fixes are being applied to a 1.0.7667 version coming soon.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 18 Jul 2005 14:30:46 -0700
+
+nvidia-graphics-drivers (1.0.7174-3) unstable; urgency=low
+
+  * reinclude nvidia docs
+
+ -- Randall Donald <rdonald@debian.org>  Thu,  7 Apr 2005 02:39:50 -0700
+
+nvidia-graphics-drivers (1.0.7174-2) unstable; urgency=low
+
+  * use -pkg2 (renamed to pkg0) for lib32 files in nvidia-glx-ia32 package
+    (closes: #257375)
+
+ -- Randall Donald <rdonald@debian.org>  Tue,  5 Apr 2005 15:10:03 -0700
+
+nvidia-graphics-drivers (1.0.7174-1) unstable; urgency=low
+
+  * New upstream.
+  * add nvidia-glx-ia32 package for amd64 (closes: #257375)
+
+ -- Randall Donald <rdonald@debian.org>  Fri,  1 Apr 2005 14:54:17 -0800
+
+nvidia-graphics-drivers (1.0.7167-1) unstable; urgency=low
+
+  * New upstream. (closes: #299073)
+  * Disable patching for new version.
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 11 Mar 2005 13:46:57 -0800
+
+nvidia-graphics-drivers (1.0.6629+1-2) unstable; urgency=high
+
+  * Add patches for new (> 2.6.10-rc3-bk13) kernels from
+    minion.de. Thanks to Drew Hess <dhess@bothan.net>
+    (closes: #280224, #281640, #287226)
+  * updated minion patches from 16 Feb 2005
+  * urgency high to get back in to sarge asap.
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 18 Feb 2005 15:31:00 -0800
+
+nvidia-graphics-drivers (1.0.6629+1-1) unstable; urgency=low
+
+  * change version to allow for new .orig
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 12 Nov 2004 11:06:00 -0800
+
+nvidia-graphics-drivers (1.0.6629-2) unstable; urgency=low
+
+  * Add amd64 support based on work from
+    Markus Benning <me@w3r3wolf.de> and
+    Harald Dunkel <harald.dunkel@t-online.de>
+    Thanks guys.
+
+ -- Randall Donald <rdonald@debian.org>  Tue,  9 Nov 2004 23:13:49 -0800
+
+nvidia-graphics-drivers (1.0.6629-1) unstable; urgency=low
+
+  * New upstream.
+  * Undo 2.6.9 patching.
+
+ -- Randall Donald <rdonald@debian.org>  Sat,  6 Nov 2004 23:21:06 -0800
+
+nvidia-graphics-drivers (1.0.6111-2) unstable; urgency=low
+
+  * Provide patches for kernels 2.6.9 and 2.6.10
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 25 Oct 2004 16:40:05 -0700
+
+nvidia-graphics-drivers (1.0.6111-1) unstable; urgency=low
+
+  * New upstream.
+  * add executable check for update-devfsd.
+
+ -- Randall Donald <rdonald@debian.org>  Thu,  5 Aug 2004 11:43:28 -0700
+
+nvidia-graphics-drivers (1.0.6106-4) unstable; urgency=low
+
+  * Use init script patch by Arthur de Jong <adejong@debian.org>
+    (closes: #243308, #261165)
+  * Add read-only check to init script. (closes: #262176)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 31 Jul 2004 14:40:59 -0700
+
+nvidia-graphics-drivers (1.0.6106-3) unstable; urgency=low
+
+  * Remove libglx.so.version symlink cleaning now that it is an actual file
+    again.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 30 Jun 2004 22:00:09 -0700
+
+nvidia-graphics-drivers (1.0.6106-2) unstable; urgency=low
+
+  * Remove package nvidia-settings so I can use the GPL source in a separate
+    source package in contrib.
+  * Fix nvidia-glx-dev depends on nvidia-glx version.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 30 Jun 2004 17:48:06 -0700
+
+nvidia-graphics-drivers (1.0.6106-1) unstable; urgency=low
+
+  * New upstream.
+    - fixed GL library symbols (closes: #242525)
+  * new nvidia-settings package.
+  * remolded TLS handling for new libnvidia-tls.so
+  * sysfs support now builtin, both dpatches disabled.
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 30 Jun 2004 11:35:08 -0700
+
+nvidia-graphics-drivers (1.0.5336-12) unstable; urgency=low
+
+  * Include newer sysfs patch by Martin Schlemmer <azarah@gentoo.org> which
+    should now create udev nodes.
+    (closes: #248451)
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 29 Jun 2004 23:46:22 -0700
+
+nvidia-graphics-drivers (1.0.5336-11) unstable; urgency=low
+
+  * Correct nvidia-glx.shlibs. (closes: #249194)
+  * New init script from Arthur de Jong <adejong@debian.org>.
+  (closes: #243308, #252569)
+
+ -- Randall Donald <rdonald@debian.org>  Tue,  8 Jun 2004 19:04:42 -0700
+
+nvidia-graphics-drivers (1.0.5336-10) unstable; urgency=low
+
+  * remove immediate exit in nvida-glx init.d so tls detection doesn't exit.
+    (closes: #247188)
+
+ -- Randall Donald <rdonald@debian.org>  Sat,  8 May 2004 13:44:21 -0700
+
+nvidia-graphics-drivers (1.0.5336-9) unstable; urgency=low
+
+  * use corrected 02_pcialias patch from Juergen Kreileder <jk@blackdown.de>
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 30 Apr 2004 19:38:57 -0700
+
+nvidia-graphics-drivers (1.0.5336-8) unstable; urgency=low
+
+  * Allow for presence of 01_sysfs fuzz in 02_pcialias. (closes: #246773)
+  * Document in n-k-s.README.Debian about IGNORE_PCI_CLASS_DISPLAY
+    (closes: #246775)
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 30 Apr 2004 18:52:47 -0700
+
+nvidia-graphics-drivers (1.0.5336-7) unstable; urgency=low
+
+  * also detect uppercase "GCC" in compiler detection. (closes: #243988)
+  * version dpatch at >= 2.0.0. (closes: #242465)
+  * patch for hotplugging. Thanks to Juergen Kreileder <jk@blackdown.de>
+    (closes: #239992)
+  * move libtool files to nvidia-glx-dev. (closes: #229110)
+  * apply patch from Joachim Breitner <nomeata@debian.org> for init script.
+  (closes: #243308)
+  * change shlibs to xlibmesa-gl | libgl1
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 17 Apr 2004 16:40:26 -0700
+
+nvidia-graphics-drivers (1.0.5336-6) unstable; urgency=low
+
+  * Introduce a boot init script for TLS detection. With this we can get rid
+    of the debconf prompting. (closes: #234612, #231397, #234323)
+  * Provide patch for sysfs. (closes: #236714, #234150)
+  * depend on dpatch for above patch.
+  * fix typo in clean target for SYSSRC. (closes: #237793)
+  * modify debian.binary/rules for patching and Makefile existance.
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 19 Mar 2004 14:39:56 -0800
+
+nvidia-graphics-drivers (1.0.5336-5) unstable; urgency=low
+
+  * add SYSRC to clean target. (closes: #232313)
+  * Make GL depends more X 4.3 friendly. (closes: #188189)
+  * pass KPKG_EXTRAV_ARG in for proper 2.6 EXTRAVERSIONing
+  * version kernel-package at >=8.082.
+  * add root_cmd. (closes: #162323)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 21 Feb 2004 15:04:42 -0800
+
+nvidia-graphics-drivers (1.0.5336-4) unstable; urgency=low
+
+  * Add glext.h to nvidia-glx-dev. (closes: #231169)
+  * Add Makefile to clean target in nvidia-kernel-source rules file.
+
+ -- Randall Donald <rdonald@debian.org>  Wed,  4 Feb 2004 16:03:42 -0800
+
+nvidia-graphics-drivers (1.0.5336-3) unstable; urgency=low
+
+  * Depend on libc6-dev for KBUILD building. (closes: #230307)
+
+ -- Randall Donald <rdonald@debian.org>  Sat, 31 Jan 2004 14:26:02 -0800
+
+nvidia-graphics-drivers (1.0.5336-2) unstable; urgency=low
+
+  * Bypass NVIDIA's select_makefile (closes: #230307)
+  * Remove patch from nvidia-kernel-source Depends and add sed.
+  * Remove dangling libglx.so.VERSION symlink.
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 30 Jan 2004 14:54:32 -0800
+
+nvidia-graphics-drivers (1.0.5336-1) unstable; urgency=low
+
+  * New upstream.
+  * generate nvidia-kernel changelog from nvidia-graphics-drivers at build.
+  * change nvidia-kernel-source arch to i386. (closes: #229060)
+  * remove 2.6 patch as it is now provided upstream.
+  * create a makefile selector and change the patchlevel detection to be based
+    on KERNEL_VERSION_CODE.
+  * switch back to Makefile.kbuild for 2.6.x.
+  * remove no longer needed apm patch. (closes: #228487)
+  * reflect 2.6 changes in nvidia-kernel-source.README.Debian.
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 27 Jan 2004 00:01:32 -0800
+
+nvidia-graphics-drivers (1.0.5328-4) unstable; urgency=low
+
+  * Provide fixed .la files. (closes: #228677)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 19 Jan 2004 23:05:20 -0800
+
+nvidia-graphics-drivers (1.0.5328-3) unstable; urgency=low
+
+  * Remove bad/broken LibGL.la files for now. (closes: #228499)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 19 Jan 2004 14:56:14 -0800
+
+nvidia-graphics-drivers (1.0.5328-2) unstable; urgency=low
+
+  * Fix typo in nvidia-glx.README.Debian
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 16 Jan 2004 23:53:35 -0800
+
+nvidia-graphics-drivers (1.0.5328-1) unstable; urgency=low
+
+  * New upstream. (closes #227066)
+  * Apply 2.6 patch in nvidia-kernel building with env override.
+    Manual patching no longer required!!! (closes: #193379)
+  * Change text of TLS question to a positive tone. (closes: #221963)
+  * Quote $(CC) for a multi word compiler e.g. distcc (closes: #222390)
+  * Change reportbug script to use (lspci --version) instead of which.
+  * Add tls/libGL.so to nvidia-glx (so one can switch with only one step)
+  * Make note about reconfiguring for TLS switching.
+  * fix gcc detection again for kernel compiler. (closes: #227412)
+  * fix typo in nvidia-kernel-source.README.Debian (closes: #226991)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 22 Dec 2003 01:21:58 -0800
+
+nvidia-graphics-drivers (1.0.4496-10) unstable; urgency=low
+
+  * TLS problems related to installation of TLS libs on 2.4 systems.
+    Solution: provide a debconf note and set a default based on runtime
+    detection of a TLS/2.6 system. Hopefully this will solve most of the
+    tls bugs.
+  * Add note about nvidia-kernel-source in nvidia-glx description.
+    (closes: #220038)
+
+ -- Randall Donald <rdonald@debian.org>  Wed, 19 Nov 2003 13:17:50 -0800
+
+nvidia-graphics-drivers (1.0.4496-9) unstable; urgency=low
+
+  * Change nvidia-kernel-source.README.Debian.in to reflect 2.6 makefile
+    change. (closes: #219003)
+  * Note the difference in KSRC for 2.6 headers (closes: #220452)
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 17 Nov 2003 20:47:20 -0800
+
+nvidia-graphics-drivers (1.0.4496-8) unstable; urgency=low
+
+  * Correctly install tls libglx.
+
+ -- Randall Donald <rdonald@debian.org>  Sat,  1 Nov 2003 12:46:04 -0800
+
+nvidia-graphics-drivers (1.0.4496-7) unstable; urgency=low
+
+  * add tls files. (closes: #218408, #218417, #218434, #218487)
+
+ -- Randall Donald <rdonald@debian.org>  Fri, 31 Oct 2003 21:01:18 -0800
+
+nvidia-graphics-drivers (1.0.4496-6) unstable; urgency=low
+
+  * use Makefile.nvidia instead of Makefile.kbuild so the 2.6 support
+    can use kernel-headers. Manual patching still required.
+    README.Debian changed to instruct this change.
+    (closes: #208535, #203369)
+  * remove wget build-dep from kernel module (closes: #212742)
+  * install kernel module to /lib/modules/KVERS/nvidia. (closes: #207290)
+  * re-fix GCC detection from compile.h (closes: #205871)
+
+ -- Randall Donald <rdonald@debian.org>  Mon,  6 Oct 2003 21:41:13 -0700
+
+nvidia-graphics-drivers (1.0.4496-5) unstable; urgency=low
+
+  * Add symlink instruction to nvidia-kernel-source.README.Debian
+  * Fix patchlevel version detection.
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 23 Sep 2003 01:21:29 -0700
+
+nvidia-graphics-drivers (1.0.4496-4) unstable; urgency=low
+
+  * Add Provides: nvidia-kernel-src to nvidia-kernel-source (closes: #211713)
+  * Upload new diversions and 2.6 support to unstable packages.
+  * change == to = in kernel rules file.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 22 Sep 2003 15:34:32 -0700
+
+nvidia-graphics-drivers (1.0.4496-3) experimental; urgency=low
+
+  * Fix nvidia-kernel-source.README.Debian about installing
+    nvidia-kernel-common first.
+  * Fix typo in nvidia-kernel-source.README.Debian regarding
+    modules/nvidia-kernel-1.0.4496 directory. (closes: #205684)
+  * Change diversions to stay within /usr/lib and /usr/X11R6/lib.
+    This allows for installs on systems of /usr split between several
+    partitions. (closes: #205955)
+  * Move nvidia-glx dependancy on nvidia-kernel-source to a recommends.
+  * Fix part of gcc 3.3.1 detection that I missed last time. (closes: #205871)
+  * Update nvidia-kernel-source.README.Debian to reflect 2.4.21-4-k7.
+  * Add preliminary 2.6 support. See README.Debian for details (closes: #203369, #193379)
+  * Include CONFIG_APM_MODULE patch file in nvidia-kernel-source.
+  * Upload to experimental due to diversion changes and preliminary 2.6
+    support
+  * Incorporate the NMU by martin f. krafft <madduck@debian.org>
+
+ -- Randall Donald <rdonald@debian.org>  Tue, 26 Aug 2003 14:42:57 -0700
+
+nvidia-graphics-drivers (1.0.4496-2.1) unstable; urgency=low
+
+  * debian.binary/rules used the -a flag to copy the control.template file
+    to debian-binary/control. If the former was a symlink, this would result
+    in the erasure of the template file as the destionation of the copy would
+    also be a symlink to the same file. Removed the -a, now it works just
+    fine.
+      Closes: Bug#206445, Bug#206449
+
+ -- martin f. krafft <madduck@debian.org>  Tue, 26 Aug 2003 08:50:46 +0200
+
+nvidia-graphics-drivers (1.0.4496-2) unstable; urgency=low
+
+  * Add email from NVIDIA to copyright file.
+
+ -- Randall Donald <rdonald@debian.org>  Thu, 31 Jul 2003 15:18:25 -0700
+
+nvidia-graphics-drivers (1.0.4496-1) unstable; urgency=low
+
+  * New upstream.
+  * include shlibs file.
+  * Re-split nvidia-glx-dev by request.
+
+ -- Randall Donald <rdonald@debian.org>  Mon, 28 Jul 2003 14:18:45 -0700
+
+nvidia-graphics-drivers (1.0.4363-1) unstable; urgency=low
+
+  * Put nvidia drivers into one source package
+  * Move from contrib to non-free
+  * Rename nvidia-kernel-src to nvidia-kernel-source
+  * Include driver files in nvidia-glx and nvidia-kernel-source instead of
+    downloading.
+  * Put nvidia-glx-dev files back into nvidia-glx.
+  * Separate out modules and devfs files into nvidia-kernel-common.
+  * Drop .deb in builder-specified location. Thanks David B Harris
+    <david@eelf.ddts.net> (closes: #192112)
+  * Lose the version number in modules directory. (closes: #199509)
+  * Use automation of versioning based on patches by Marcello Magallon
+    <mmagallo@debian.org>. Thanks. (closes: #192312, #192311)
+
+ -- Randall Donald <rdonald@debian.org>  Fri,  9 May 2003 14:51:15 -0700
+
diff -uNr kernel.org/debian/clean kernel/debian/clean
--- kernel.org/debian/clean	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/clean	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,7 @@
+# generated by debian/prep-modules
+debian/VERSION
+
+# left over after kbuild clean
+Module.symvers
+modules.order
+nv_compiler.h
diff -uNr kernel.org/debian/compat kernel/debian/compat
--- kernel.org/debian/compat	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/compat	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1 @@
+8
diff -uNr kernel.org/debian/control.template kernel/debian/control.template
--- kernel.org/debian/control.template	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/control.template	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,26 @@
+Source: nvidia-kernel
+Section: non-free/kernel
+Priority: optional
+Maintainer: Debian NVIDIA Maintainers <pkg-nvidia-devel@lists.alioth.debian.org>
+Uploaders: Russ Allbery <rra@debian.org>
+Build-Depends: debhelper (>= 8), quilt
+Standards-Version: 3.9.0
+Homepage: http://www.nvidia.com/
+
+Package: nvidia-kernel-#KVERS#
+Architecture: i386 amd64 armhf
+Provides: nvidia-kernel-340.96
+Depends:
+ nvidia-kernel-common (>= 20110213),
+ nvidia-alternative--kmod-alias,
+Recommends: linux-image-#KVERS#
+Built-Using: ${built:using:kernel}, ${built:using:nvidia}
+Description: NVIDIA binary kernel module for Linux #KVERS#
+ This package provides the non-free NVIDIA binary kernel module built for
+ the Debian Linux kernel package.  This kernel module is required by the
+ nvidia-glx X video driver, the non-free binary video driver for NVIDIA
+ graphics chipsets.  This is the main NVIDIA driver release, which
+ supports the latest chipsets; for older chipsets, see the NVIDIA legacy
+ packages.
+ .
+ This package is built for linux-image-#KVERS#.
diff -uNr kernel.org/debian/copyright kernel/debian/copyright
--- kernel.org/debian/copyright	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/copyright	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,240 @@
+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
+Upstream-Name: NVIDIA Linux Display Drivers
+Upstream-Contact: NVIDIA Corporation <linux-bugs@nvidia.com>
+Source:
+ ftp://download.nvidia.com/XFree86/Linux-x86/
+ ftp://download.nvidia.com/XFree86/Linux-x86_64/
+Disclaimer:
+ This package is not part of the GNU/Linux Debian distribution.  It is
+ provided in the non-free archive area as a convenience to Debian users.
+ The contents of this package cannot be distributed as part of the Debian
+ distribution because the NVIDIA Software License covering it is not a free
+ software license.  No modifications of the included binaries are
+ permitted, and the binaries are not distributed with source code.
+
+Files: *
+Copyright: 1993-2011 NVIDIA Corporation.  All rights reserved.
+License: NVIDIA-graphics-drivers
+
+Files: debian/*
+Copyright: 2001-2010 Randall Donald <rdonald@debian.org>
+           2009-2015 Andreas Beckmann <anbe@debian.org>
+           2010 Russ Allbery <rra@debian.org>
+           Based on packages by Christopher Cheney.
+License: GPL-2.0+
+
+Files: debian/detect/nvidia-detect.in
+Copyright: © 2008-2011 Filipus Klutiero <chealer@gmail.com>
+           © 2011-2013 Andreas Beckmann <anbe@debian.org>
+License: GPL-2.0+
+
+Files: debian/module/debian/patches/* debian/patches/*
+Copyright: no copyright notice, see License
+License: anbe-public-domain
+ The authors hereby relinquish any claim to any copyright that they may
+ have in this work, whether granted under contract or by operation of law
+ or international treaty, and hereby commit to the public, at large, that
+ they shall not, at any time in the future, seek to enforce any copyright
+ in this work against any person or entity, or prevent any person or
+ entity from copying, publishing, distributing or creating derivative
+ works of this work.
+
+License: GPL-2.0+
+ This package is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2 of the License, or
+ (at your option) any later version.
+ .
+ This package is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ .
+ You should have received a copy of the GNU General Public License
+ along with this program. If not, see <http://www.gnu.org/licenses/>
+ .
+ On Debian systems, the complete text of the GNU General Public
+ License version 2 can be found in "/usr/share/common-licenses/GPL-2".
+
+License: NVIDIA-graphics-drivers
+ License For Customer Use of NVIDIA Software
+ .
+ .
+ IMPORTANT NOTICE -- READ CAREFULLY: This License For Customer Use of
+ NVIDIA Software ("LICENSE") is the agreement which governs use of
+ the software of NVIDIA Corporation and its subsidiaries ("NVIDIA")
+ downloadable herefrom, including computer software and associated
+ printed materials ("SOFTWARE").  By downloading, installing, copying,
+ or otherwise using the SOFTWARE, you agree to be bound by the terms
+ of this LICENSE.  If you do not agree to the terms of this LICENSE,
+ do not download the SOFTWARE.
+ .
+ RECITALS
+ .
+ Use of NVIDIA's products requires three elements: the SOFTWARE, the
+ hardware on a graphics controller board, and a personal computer. The
+ SOFTWARE is protected by copyright laws and international copyright
+ treaties, as well as other intellectual property laws and treaties.
+ The SOFTWARE is not sold, and instead is only licensed for use,
+ strictly in accordance with this document.  The hardware is protected
+ by various patents, and is sold, but this agreement does not cover
+ that sale, since it may not necessarily be sold as a package with
+ the SOFTWARE.  This agreement sets forth the terms and conditions
+ of the SOFTWARE LICENSE only.
+ .
+ 1.  DEFINITIONS
+ .
+ 1.1  Customer.  Customer means the entity or individual that
+ downloads the SOFTWARE.
+ .
+ 2.  GRANT OF LICENSE
+ .
+ 2.1  Rights and Limitations of Grant.  NVIDIA hereby grants Customer
+ the following non-exclusive, non-transferable right to use the
+ SOFTWARE, with the following limitations:
+ .
+ 2.1.1  Rights.  Customer may install and use multiple copies of the
+ SOFTWARE on a shared computer or concurrently on different computers,
+ and make multiple back-up copies of the SOFTWARE, solely for Customer's
+ use within Customer's Enterprise. "Enterprise" shall mean individual use
+ by Customer or any legal entity (such as a corporation or university)
+ and the subsidiaries it owns by more than fifty percent (50%).
+ .
+ 2.1.2  Linux/FreeBSD Exception.  Notwithstanding the foregoing terms
+ of Section 2.1.1, SOFTWARE designed exclusively for use on the Linux or
+ FreeBSD operating systems, or other operating systems derived from the
+ source code to these operating systems, may be copied and redistributed,
+ provided that the binary files thereof are not modified in any way
+ (except for unzipping of compressed files).
+ .
+ 2.1.3  Limitations.
+ .
+ No Reverse Engineering.  Customer may not reverse engineer,
+ decompile, or disassemble the SOFTWARE, nor attempt in any other
+ manner to obtain the source code.
+ .
+ No Separation of Components.  The SOFTWARE is licensed as a
+ single product.  Its component parts may not be separated for use
+ on more than one computer, nor otherwise used separately from the
+ other parts.
+ .
+ No Rental.  Customer may not rent or lease the SOFTWARE to someone
+ else.
+ .
+ 3.  TERMINATION
+ .
+ This LICENSE will automatically terminate if Customer fails to
+ comply with any of the terms and conditions hereof.  In such event,
+ Customer must destroy all copies of the SOFTWARE and all of its
+ component parts.
+ .
+ Defensive Suspension.  If Customer commences or participates in any legal
+ proceeding against NVIDIA, then NVIDIA may, in its sole discretion,
+ suspend or terminate all license grants and any other rights provided
+ under this LICENSE during the pendency of such legal proceedings.
+ .
+ 4.  COPYRIGHT
+ .
+ All title and copyrights in and to the SOFTWARE (including but
+ not limited to all images, photographs, animations, video, audio,
+ music, text, and other information incorporated into the SOFTWARE),
+ the accompanying printed materials, and any copies of the SOFTWARE,
+ are owned by NVIDIA, or its suppliers.  The SOFTWARE is protected
+ by copyright laws and international treaty provisions.  Accordingly,
+ Customer is required to treat the SOFTWARE like any other copyrighted
+ material, except as otherwise allowed pursuant to this LICENSE
+ and that it may make one copy of the SOFTWARE solely for backup or
+ archive purposes.
+ .
+ 5.  APPLICABLE LAW
+ .
+ This agreement shall be deemed to have been made in, and shall be
+ construed pursuant to, the laws of the State of California.
+ .
+ 6.  DISCLAIMER OF WARRANTIES AND LIMITATION ON LIABILITY
+ .
+ 6.1  No Warranties.  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE
+ LAW, THE SOFTWARE IS PROVIDED "AS IS" AND NVIDIA AND ITS SUPPLIERS
+ DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT
+ NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ FOR A PARTICULAR PURPOSE.
+ .
+ 6.2  No Liability for Consequential Damages.  TO THE MAXIMUM
+ EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL NVIDIA OR
+ ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR
+ CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION,
+ DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS
+ OF BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS) ARISING OUT
+ OF THE USE OF OR INABILITY TO USE THE SOFTWARE, EVEN IF NVIDIA HAS
+ BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
+ .
+ 7.  MISCELLANEOUS
+ .
+ The United Nations Convention on Contracts for the International
+ Sale of Goods is specifically disclaimed.  If any provision of this
+ LICENSE is inconsistent with, or cannot be fully enforced under,
+ the law, such provision will be construed as limited to the extent
+ necessary to be consistent with and fully enforceable under the law.
+ This agreement is the final, complete and exclusive agreement between
+ the parties relating to the subject matter hereof, and supersedes
+ all prior or contemporaneous understandings and agreements relating
+ to such subject matter, whether oral or written.  Customer agrees
+ that it will not ship, transfer or export the SOFTWARE into any
+ country, or use the SOFTWARE in any manner, prohibited by the
+ United States Bureau of Export Administration or any export laws,
+ restrictions or regulations.  This LICENSE may only be modified in
+ writing signed by an authorized officer of NVIDIA.
+Comment:
+ First a note from the README file
+ .
+ Q: Why does NVIDIA not provide rpms anymore?
+ .
+ A: Not every Linux distribution uses rpm, and NVIDIA wanted a single
+    solution that would work across all Linux distributions.  As indicated
+    in the NVIDIA Software License, Linux distributions are welcome to
+    repackage and redistribute the NVIDIA Linux driver in whatever package
+    format they wish.
+ .
+ Furthermore, an email from NVIDIA:
+ .
+ Greetings, Randall!  Comments below:
+ .
+ On 30 Jul 2003, Randall Donald wrote:
+ .
+ > To whom it may concern,
+ >
+ > My name is Randall Donald and I am the maintainer for the Debian
+ > downloader packages nvidia-glx-src and nvidia-kernel-src.
+ > As stated in your license and the README file
+ > ( "As indicated in the NVIDIA Software License, Linux distributions
+ >   are welcome to repackage and redistribute the NVIDIA Linux driver in
+ >   whatever package format they wish." )
+ > I wish to include packages containing the Linux driver files in the
+ > Debian archive.  I'd like to know if it is legally permitted to
+ > distribute binary kernel modules compiled from the NVIDIA kernel module
+ > source and Debian kernel headers.
+ .
+ This is fine; thanks for asking.
+ .
+ > I am also wondering if the "No Separation of Components" clause
+ > ( No Separation of Components.  The SOFTWARE is licensed as a
+ >   single product.  Its component parts may not be separated for use
+ >   on more than one computer, nor otherwise used separately from the
+ >   other parts.)
+ > applies to splitting the glx driver and kernel module source into
+ > multiple binary packages.
+ .
+ This is also fine.  I believe this section of the license was
+ intended to prevent users from doing things like using our Windows
+ control panel with a competitor's display driver (that's not actually
+ possible, but you get the idea...).  In the case of separating the
+ driver into a glx package and a kernel package (like we used to
+ do ourselves), this is simply a packaging issue; of course users
+ will use the packages together when they install.
+ .
+ Please feel free to redistribute the NVIDIA graphics driver.
+ .
+ Thank you for doing this for the NVIDIA+Debian community!
+ .
+ - Andy
+
diff -uNr kernel.org/debian/genchanges kernel/debian/genchanges
--- kernel.org/debian/genchanges	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/genchanges	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,21 @@
+#!/bin/sh
+#
+# Generate a changes file for a *.deb package generated via the make-kpkg
+# utility.  debsign is not called automatically since that would require a
+# dependency on devscripts and since the build is often not done by the same
+# user as would do the package signing.
+#
+# KPKG_DEST_DIR, KSRC, KVERS, KMAINT, and KEMAIL are expected to be passed
+# through the environment.
+
+set -e
+
+PREFIX=`grep Package: debian/control.template | cut -d' ' -f 2 | cut -d\# -f 1`
+VERSION="${KVERS}${INT_SUBARCH}"
+MODVERS=`cat debian/VERSION | sed s/:/\+/`
+ARCH=`dpkg --print-architecture`
+
+chfile="${KPKG_DEST_DIR}/${PREFIX}${VERSION}_${MODVERS}_${ARCH}.changes"
+
+dpkg-genchanges -b ${KMAINT:+-m"$KMAINT <$KEMAIL>"} -u"$KPKG_DEST_DIR" \
+    -cdebian/control > "$chfile"
diff -uNr kernel.org/debian/install.template kernel/debian/install.template
--- kernel.org/debian/install.template	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/install.template	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,2 @@
+nvidia.ko lib/modules/#KVERS#/nvidia/
+uvm/nvidia-uvm.ko lib/modules/#KVERS#/nvidia/
diff -uNr kernel.org/debian/kernel-version kernel/debian/kernel-version
--- kernel.org/debian/kernel-version	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/kernel-version	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,38 @@
+#!/usr/bin/perl
+#
+# Extract the kernel version from the kernel version header file.  Takes the
+# kernel source path as its only argument.  If the version header couldn't be
+# found, print nothing and exit quietly.
+
+my $ksrc = shift;
+unless ($ksrc && (-f "$ksrc/include/linux/version.h" || -f "$ksrc/include/generated/uapi/linux/version.h")) {
+    exit 0;
+}
+my $found = 0;
+my $line;
+if (open (VERSION, "$ksrc/include/linux/version.h")) {
+    if ($line = <VERSION>) {
+        if ($line =~ /"(.+)"/) {
+            print "$1\n";
+            $found = 1;
+        }
+    }
+}
+exit 0 if $found;
+if (open (VERSION, "$ksrc/include/generated/utsrelease.h")) {
+    if ($line = <VERSION>) {
+        if ($line =~ /UTS_RELEASE *"(.+)"/) {
+            print "$1\n";
+            $found = 1;
+        }
+    }
+}
+exit 0 if $found;
+# kernel.release is no longer useful since 3.1.0
+unless (open (VERSION, "$ksrc/include/config/kernel.release")) {
+    exit 0;
+}
+if ($line = <VERSION>) {
+    print "$line";
+}
+exit 0;
diff -uNr kernel.org/debian/lintian-overrides kernel/debian/lintian-overrides
--- kernel.org/debian/lintian-overrides	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/lintian-overrides	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,3 @@
+# This is the upstream binary module, which we're not allowed (by the
+# NVIDIA license) to change in any way.
+spelling-error-in-binary
diff -uNr kernel.org/debian/patches/avoid-ld.gold.patch kernel/debian/patches/avoid-ld.gold.patch
--- kernel.org/debian/patches/avoid-ld.gold.patch	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/avoid-ld.gold.patch	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,20 @@
+Author: Andreas Beckmann <debian@abeckmann.de>
+Description: avoid linking the kernel module with ld.gold
+ ld.gold does e.g. eliminate duplicate strings and this seems to cause
+ problems with the nvidia kernel module.  Therefore explicitly link with
+ ld.bfd.  This patch is not compatible with lenny which does neither have
+ ld.bfd nor ld.gold, but we are not supporting lenny backports anyway.
+Bug-Debian: http://bugs.debian.org/626279
+
+--- a/nvidia-modules-common.mk
++++ b/nvidia-modules-common.mk
+@@ -20,6 +20,9 @@
+ module module-sign module-install package-install clean print-module-filename \
+ conftest-compile-test
+ 
++# avoid ld.gold, see #626279
++LD=ld.bfd
++
+ all: install
+ install: package-install
+ 
diff -uNr kernel.org/debian/patches/conditionally-include-linux_version.h.patch kernel/debian/patches/conditionally-include-linux_version.h.patch
--- kernel.org/debian/patches/conditionally-include-linux_version.h.patch	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/conditionally-include-linux_version.h.patch	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,19 @@
+Author: Andreas Beckmann <debian@abeckmann.de>
+Description: Conditionally include linux/version.h
+ Starting with 195.xx the include order in nv-linux.h was changed and
+ therefore our conftest.h needs to include linux/version.h itself.
+ Since linux/version.h does not contain include guards, add a check to
+ nv-linux.h to not include linux/version.h multiple times.
+
+--- a/nv-linux.h
++++ b/nv-linux.h
+@@ -40,7 +40,9 @@
+   #include <generated/compile.h>
+ #endif
+ 
++#ifndef LINUX_VERSION_CODE
+ #include <linux/version.h>
++#endif
+ #include <linux/utsname.h>
+ 
+ #if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 9)
diff -uNr kernel.org/debian/patches/ignore_xen_on_arm.patch kernel/debian/patches/ignore_xen_on_arm.patch
--- kernel.org/debian/patches/ignore_xen_on_arm.patch	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/ignore_xen_on_arm.patch	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,37 @@
+Author: Luca Boccassi <luca.boccassi@gmail.com>
+Description: Undef CONFIG_XEN and CONFIG_XEN_DOM0 if building on ARM
+ Currently armmp kernel headers (3.16, 4.0, 4.1) have CONFIG_XEN enabled and
+ CONFIG_PARAVIRT disabled. This causes a build failure of the armhf dkms modules
+ in all current versions of the Nvidia driver.
+ Since running this driver on Xen is currently not supported anyway on Debian,
+ this patch undefines CONFIG_XEN and CONFIG_XEN_DOM0 if building on ARM, and
+ avoid including asm/maddr.h and xen/interface/memory.h.
+ Note that this has been tested only on qemu.
+ It is recommended to build an armmp kernel with CONFIG_XEN disabled (or with
+ CONFIG_XEN_PARAVIRT enabled) to use the Nvidia drivers.
+
+--- a/nv-linux.h
++++ b/nv-linux.h
+@@ -27,7 +27,12 @@
+ #include <linux/autoconf.h>
+ #endif
+ #endif
++
++#if defined(NVCPU_ARM) && LINUX_VERSION_CODE < KERNEL_VERSION(3,17,0)
++#undef CONFIG_XEN
++#undef CONFIG_XEN_DOM0
++#endif
+ 
+ #if defined(NV_GENERATED_UTSRELEASE_H_PRESENT)
+   #include <generated/utsrelease.h>
+ #endif
+@@ -258,7 +258,7 @@
+  * NVIDIA graphics driver has no way of knowing and is unlikely
+  * to work correctly.
+  */
+-#if defined(CONFIG_XEN) && !defined(CONFIG_PARAVIRT)
++#if defined(CONFIG_XEN) && !defined(CONFIG_PARAVIRT) && !defined(NVCPU_ARM)
+ #include <asm/maddr.h>
+ #include <xen/interface/memory.h>
+ #define NV_XEN_SUPPORT_FULLY_VIRTUALIZED_KERNEL
+ #endif
diff -uNr kernel.org/debian/patches/not-silent.patch kernel/debian/patches/not-silent.patch
--- kernel.org/debian/patches/not-silent.patch	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/not-silent.patch	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,124 @@
+Author: Andreas Beckmann <anbe@debian.org>
+Description: make silent commands in NVIDIA's Makefile.kbuild verbose
+
+--- a/nvidia-modules-common.mk
++++ b/nvidia-modules-common.mk
+@@ -137,10 +137,10 @@
+ #
+ 
+ $(obj)/$(CORE_OBJS):
+-	@cp $(src)/$(CORE_OBJS) $(obj)/$(CORE_OBJS)
++	$(NVQ)cp $(src)/$(CORE_OBJS) $(obj)/$(CORE_OBJS)
+ 
+ $(obj)/$(VERSION_HEADER):
+-	@echo \#define NV_COMPILER \"`$(CC) -v 2>&1 | tail -n 1`\" > $@
++	$(NVQ)echo \#define NV_COMPILER \"`$(CC) -v 2>&1 | tail -n 1`\" > $@
+ 
+ CONFTEST_COMPILE_TEST_HEADERS := $(obj)/conftest/macros.h \
+ $(obj)/conftest/functions.h $(obj)/conftest/symbols.h $(obj)/conftest/types.h \
+@@ -152,10 +152,10 @@
+ $(obj)/conftest.h $(CONFTEST_COMPILE_TEST_HEADERS): conftest-compile-test
+ 
+ conftest-compile-test: $(src)/conftest.sh
+-	@if ! $(CONFTEST) compile_tests $(COMPILE_TESTS); then exit 1; fi
++	$(NVQ)$(CONFTEST) compile_tests $(COMPILE_TESTS)
+ 
+ $(obj)/conftest/patches.h:
+-	@if ! $(CONFTEST) patch_check; then exit 1; fi
++	$(NVQ)$(CONFTEST) patch_check
+ 
+ MODULE_GLUE_TARGETS = $(addprefix $(obj)/,$(MODULE_GLUE_OBJS))
+ 
+@@ -184,10 +184,10 @@
+ #
+ 
+ suser-sanity-check:
+-	@if ! $(CONFTEST) suser_sanity_check; then exit 1; fi
++	$(NVQ)$(CONFTEST) suser_sanity_check
+ 
+ rmmod-sanity-check:
+-	@if ! $(CONFTEST) rmmod_sanity_check; then exit 1; fi
++	$(NVQ)$(CONFTEST) rmmod_sanity_check
+ 
+ BUILD_SANITY_CHECKS = \
+ 	cc_version_check \
+@@ -198,7 +198,7 @@
+ 	preempt_rt_sanity_check
+ 
+ build-sanity-checks:
+-	@for SANITY_CHECK in $(BUILD_SANITY_CHECKS); do \
++	$(NVQ)for SANITY_CHECK in $(BUILD_SANITY_CHECKS); do \
+ 	 if ! $(CONFTEST) $$SANITY_CHECK full_output; then \
+ 	 exit 1; \
+ 	 fi; \
+@@ -221,10 +221,10 @@
+ 
+ define BUILD_MODULE_RULE
+  $(1): build-sanity-checks $(3)
+-	@echo "NVIDIA: calling KBUILD..."; \
+-	$$(MAKE) "CC=$$(CC)" NV_MODULE_SUFFIX=$$(strip $(2)) $$(KBUILD_PARAMS) modules; \
+-	echo "NVIDIA: left KBUILD."; \
+-	if ! [ -f $(1) ]; then \
++	@echo "NVIDIA: calling KBUILD..."
++	$$(NVQ)$$(MAKE) "CC=$$(CC)" NV_MODULE_SUFFIX=$$(strip $(2)) $$(KBUILD_PARAMS) modules
++	@echo "NVIDIA: left KBUILD."
++	$$(NVQ)if ! [ -f $(1) ]; then \
+ 	 echo "$(1) failed to build!"; \
+ 	 exit 1; \
+ 	elif [ -f split-object-file.sh ]; then \
+@@ -239,7 +239,7 @@
+ #
+ 
+ module-sign: $(MODULE_OBJECT)
+-	@if [ -z "$(MODSECKEY)" ] || [ -z "$(MODPUBKEY)" ]; then \
++	$(NVQ)if [ -z "$(MODSECKEY)" ] || [ -z "$(MODPUBKEY)" ]; then \
+ 	 echo "ERROR: MODSECKEY and MODPUBKEY must be set to sign modules!"; \
+ 	 exit 1; \
+ 	elif ! [ -f "$(MODSECKEY)" ]; then \
+@@ -271,7 +271,7 @@
+ #
+ 
+ module-install: suser-sanity-check module
+-	@mkdir -p $(MODULE_ROOT)/video; \
++	$(NVQ)mkdir -p $(MODULE_ROOT)/video; \
+ 	install -m 0664 -o root -g root $(MODULE_OBJECT) $(MODULE_ROOT)/video; \
+ 	PATH="$(PATH):/bin:/sbin" depmod -a
+ 
+@@ -281,7 +281,7 @@
+ #
+ 
+ package-install: module-install rmmod-sanity-check
+-	@PATH="$(PATH):/bin:/sbin" modprobe $(MODULE_NAME) && \
++	$(NVQ)PATH="$(PATH):/bin:/sbin" modprobe $(MODULE_NAME) && \
+ 	echo "$(MODULE_OBJECT) installed successfully.";
+ 
+ #
+@@ -306,20 +306,20 @@
+ #
+ 
+ $(KERNEL_GLUE_NAME): $(MODULE_OBJECT)
+-	@$(LD) $(EXTRA_LDFLAGS) $(MODULE_COMMON_SCRIPT) -r -o $(KERNEL_GLUE_NAME) $(KERNEL_GLUE_OBJS)
++	$(NVQ)$(LD) $(EXTRA_LDFLAGS) $(MODULE_COMMON_SCRIPT) -r -o $(KERNEL_GLUE_NAME) $(KERNEL_GLUE_OBJS)
+ 
+ #
+ # Support hack, KBUILD isn't prepared to clean up after external modules.
+ #
+ 
+ clean:
+-	@$(RM) -f $(MODULE_GLUE_OBJS) $(KERNEL_GLUE_OBJS)
+-	@$(RM) -f build-in.o nv-linux*.o *.d .*.cmd .*.flags
+-	@$(RM) -f $(MODULE_NAME)*.o $(MODULE_NAME)*.ko*
+-	@$(RM) -f $(MODULE_NAME)*.mod* $(VERSION_HEADER) *~
+-	@$(RM) -f conftest*.c conftest.h
+-	@$(RM) -rf conftest
+-	@$(RM) -rf Module*.symvers .tmp_versions modules.order
++	$(NVQ)$(RM) -f $(MODULE_GLUE_OBJS) $(KERNEL_GLUE_OBJS)
++	$(NVQ)$(RM) -f build-in.o nv-linux*.o *.d .*.cmd .*.flags
++	$(NVQ)$(RM) -f $(MODULE_NAME)*.o $(MODULE_NAME)*.ko*
++	$(NVQ)$(RM) -f $(MODULE_NAME)*.mod* $(VERSION_HEADER) *~
++	$(NVQ)$(RM) -f conftest*.c conftest.h
++	$(NVQ)$(RM) -rf conftest
++	$(NVQ)$(RM) -rf Module*.symvers .tmp_versions modules.order
+ 
+ #
+ # This target just prints the kernel module filename (for use by the
diff -uNr kernel.org/debian/patches/series kernel/debian/patches/series
--- kernel.org/debian/patches/series	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/series	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,6 @@
+not-silent.patch
+avoid-ld.gold.patch
+use-nv-kernel-ARCH.o_shipped.patch
+conditionally-include-linux_version.h.patch
+uvm-symvers.patch
+ignore_xen_on_arm.patch
diff -uNr kernel.org/debian/patches/use-nv-kernel-ARCH.o_shipped.patch kernel/debian/patches/use-nv-kernel-ARCH.o_shipped.patch
--- kernel.org/debian/patches/use-nv-kernel-ARCH.o_shipped.patch	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/use-nv-kernel-ARCH.o_shipped.patch	2016-07-31 10:25:50.000000000 +0800
@@ -0,0 +1,24 @@
+Author: Andreas Beckmann <anbe@debian.org>
+Description: Select the correct nv-kernel.o blob for the target architecture
+ The Debian nvidia-kernel-source package supports building for both i386 and
+ amd64 kernels (on i386) from one source by including both binary objects.
+ This patch makes the build system select the correct one depending on the
+ kernel architecture the module is built for.
+
+--- a/Kbuild
++++ b/Kbuild
+@@ -78,6 +78,14 @@
+  $(MODULE_NAME)-objs := $(CORE_OBJS) $(MODULE_GLUE_OBJS)
+ endif
+ 
++$(MODULE_NAME)-objs :=
++$(MODULE_NAME)-y		 = $(MODULE_GLUE_OBJS)
++ifneq ($(NV_MODULE_SUFFIX),frontend)
++$(MODULE_NAME)-$(CONFIG_X86_32)	+= nv-kernel.o
++$(MODULE_NAME)-$(CONFIG_X86_64)	+= nv-kernel.o
++$(MODULE_NAME)-$(CONFIG_ARM)	+= nv-kernel-armhf.o_shipped
++endif
++
+ #
+ # List of targets to build in case of multiple NVIDIA kernel module builds. 
+ # The actual target is constructed by prefixing nvidia/nvidia- to every
diff -uNr kernel.org/debian/patches/uvm-symvers.patch kernel/debian/patches/uvm-symvers.patch
--- kernel.org/debian/patches/uvm-symvers.patch	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/patches/uvm-symvers.patch	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,17 @@
+Author: Andreas Beckmann <debian@abeckmann.de>
+Description: fix up the ../Module.symvers dependency for our uvm build
+
+--- a/uvm/Kbuild
++++ b/uvm/Kbuild
+@@ -214,8 +214,11 @@
+ 
+ $(eval $(call BUILD_MODULE_RULE, $(MODULE_OBJECT),"uvm",))
+ module: $(MODULE_OBJECT)
++$(MODULE_GLUE_TARGETS): $(UVM_MODULE_SYMVERS)
+ 
+ $(RM_MODULE_SYMVERS):
++	@echo "*** Please build the nvidia.ko module first ***"
++	exit 1
+ 	cd $(RM_OUT_DIR); make module SYSSRC=$(KERNEL_SOURCES) SYSOUT=$(KERNEL_OUTPUT) KBUILD_EXTMOD=$(RM_OUT_DIR)
+ 
+ $(UVM_MODULE_SYMVERS): $(RM_MODULE_SYMVERS)
diff -uNr kernel.org/debian/prep-modules kernel/debian/prep-modules
--- kernel.org/debian/prep-modules	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/prep-modules	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,97 @@
+#! /bin/sh
+#
+# Prepares to build kernel modules.  This script figures out and munges
+# version strings.  The goal is:
+#
+#  * Set the package name to nvidia-kernel-$(KVERS) where $(KVERS) is the
+#    major kernel revision plus the debian subrevision and whatever
+#    architecture string is appropriate if building against the stock Debian
+#    kernels.  $(KVERS) should be identical to the version component contained
+#    in the Debian kernel package names (in other words, the ABI version, not
+#    the package version).
+#
+#  * Make the package recommend linux-image-$(KVERS) as appropriate for the
+#    kernel version that we're building against.  Use recommend rather than
+#    depends since the user may have built their own kernel outside of the
+#    Debian package infrastructure.
+#
+#  * Save the version number of the binary package in debian/VERSION for later
+#    use by dh_gencontrol.  This will be the version number of the source
+#    package followed by a + and the version number of the kernel package that
+#    we're building against.  If the kernel package version contains an epoch,
+#    try to hack our way into doing the right thing by using that epoch number
+#    as our own.  This isn't quite the right thing, but seems reasonably good.
+#
+# This script generates debian/control from debian/control.template using sed.
+# Unfortunately, substvars cannot be used since the name of the package is
+# modified and substvars happens too late.  It also outputs debian/VERSION,
+# containing the version of the binary package.
+
+set -e
+
+if [ "$#" -ne 1 ]; then
+    echo "Usage: $0 <kernel-source-location>"
+    exit 1
+fi
+
+# We can get the kernel version from one of three places.  If KVERS and KDREV
+# are both already set in the environment (which will be the case when invoked
+# by make-kpkg or module-assistant), use them.  Otherwise, if we have a kernel
+# source directory that contains debian/changelog (generated by make-kpkg),
+# parse that file to find the version information.  Finally, if neither works,
+# extract the kernel version from the kernel headers, append INT_SUBARCH to
+# that version if it's available, and assume a kernel package revision of -0
+# if none is provided.
+#
+# Set the variables $nvidia_kvers, which will hold the revision of the kernel,
+# and $nvidia_kdrev, which will hold the version of the kernel package that
+# we're building against.
+
+changelog="$1/debian/changelog"
+if [ -n "$KVERS" ] && [ -n "$KDREV" ]; then
+    nvidia_kvers="${KVERS}${INT_SUBARCH}"
+    nvidia_kdrev="${KDREV}"
+elif [ ! -f "$changelog" ] ; then
+    if [ -n "$KVERS" ] ; then
+        nvidia_kvers="$KVERS"
+    else
+        nvidia_kvers=`perl debian/kernel-version "$1"`
+    fi
+    if [ -z "$KDREV" ] ; then
+        nvidia_kdrev="${nvidia_kvers}-0"
+    else
+        nvidia_kvers="${nvidia_kvers}${INT_SUBARCH}"
+        nvidia_kdrev="${KDREV}"
+    fi
+else
+    if [ -n "$KVERS" ] ; then
+        nvidia_kvers="$KVERS"
+    else
+        nvidia_kvers=`head -1 "$changelog" \
+            | sed -e 's/.*source-\([^ ]*\) (\([^)]*\)).*/\1/'`
+    fi
+    nvidia_kdrev=`head -1 "$changelog" \
+        | sed -e 's/.*source-\([^ ]*\) (\([^)]*\)).*/\2/'`
+fi
+
+# Sanitize.
+nvidia_kvers="$(echo "$nvidia_kvers" | tr _ -)"
+nvidia_kdrev="$(echo "$nvidia_kdrev" | tr _ -)"
+
+# Generate the control file from the template.
+
+sed "s/#KVERS#/${nvidia_kvers}/g" debian/control.template > debian/control
+
+# Now, calcuate the binary package version.  Extract the epoch from the kernel
+# package revision and add it to the beginning of the binary package version
+# if present.  Then, concatenate the source version, '+', and the kernel
+# package revision without the epoch.
+
+nvidia_version=`head -1 debian/changelog | sed -e 's/.*(\([^)]*\)).*/\1/'`
+nvidia_epoch=`echo ${nvidia_kdrev} | sed -n -e 's/^\([0-9]*\):.*/\1/p'`
+nvidia_version="${nvidia_version}+`echo ${nvidia_kdrev} | sed 's/^[0-9]*://'`"
+if [ -n "$nvidia_epoch" ] ; then
+    nvidia_version="${nvidia_epoch}:${nvidia_version}"
+fi
+
+echo "$nvidia_version" > debian/VERSION
diff -uNr kernel.org/debian/README.Debian kernel/debian/README.Debian
--- kernel.org/debian/README.Debian	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/README.Debian	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,12 @@
+nvidia-kernel for Debian
+------------------------
+
+Please report any actual driver related bugs (not packaging related) to
+NVIDIA directly.
+
+Please check http://www.nvidia.com/object/linux.html
+and
+http://www.nvnews.net/vbulletin/forumdisplay.php?s=&forumid=14
+for known bugs.
+
+ -- Randall Donald <rdonald@debian.org>, Tue,  12 Jul 2005 23:30:00 -0700
diff -uNr kernel.org/debian/rules kernel/debian/rules
--- kernel.org/debian/rules	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/rules	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,122 @@
+#!/usr/bin/make -f
+
+# Disable ccache, which causes strange build failures with the module.
+# See Bug#582748.
+export CCACHE_DISABLE := 1
+
+CFLAGS = -Wall -g
+ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
+    CFLAGS += -O0
+else
+    CFLAGS += -O2
+endif
+ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
+    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
+    MAKEFLAGS += -j$(NUMJOBS)
+endif
+
+# Find kernel build information.
+ifndef KSRC
+    KSRC := /lib/modules/$(shell uname -r)/build
+endif
+ifndef KPKG_DEST_DIR
+    KPKG_DEST_DIR = ..
+endif
+KVERS := $(shell perl debian/kernel-version $(KSRC))
+export KSRC
+export KVERS
+export KPKG_DEST_DIR
+
+ifneq (,$(wildcard uvm))
+    WITH_UVM	 = 1
+endif
+
+configure: configure-stamp
+configure-stamp:
+	@if [ x"$(KVERS)" = x ] ; then \
+	    echo 'No version in $(KSRC)/include/linux/version.h' >&2; \
+	    exit 1; \
+	fi
+	sh debian/prep-modules $(KSRC)
+	sed 's/#KVERS#/$(KVERS)/g' debian/install.template > debian/install
+	touch $@
+
+build: build-arch build-indep
+build-arch: build-stamp
+build-indep:
+build-stamp: configure-stamp
+	dh_prep
+	dh_quilt_patch
+	$(MAKE) SYSSRC=$(KSRC)
+ifeq (1,$(WITH_UVM))
+	$(MAKE) -C uvm SYSSRC=$(KSRC)
+endif
+	touch $@
+
+get_built_using	?= $(filter-out (=),$(shell dpkg-query -f='$${source:Package} (=$${source:Version})' -W $1))
+
+binary: binary-arch binary-indep
+binary-indep:
+binary-arch: build-stamp
+	dh_testdir
+	dh_testroot
+	dh_installdirs
+	dh_install
+	dh_installdocs $(wildcard debian/changelog.nvidia*-kernel*-source*)
+	dh_installchangelogs NVIDIA_Changelog
+	dh_installmodules
+	dh_bugfiles
+	dh_lintian
+	dh_strip
+	dh_compress
+	dh_fixperms
+	dh_installdeb
+	dh_gencontrol -- -v`cat debian/VERSION` \
+		-V'built:using:kernel=$(call get_built_using,linux-headers-$(KVERS))' \
+		-V'built:using:nvidia=$(call get_built_using,nvidia-kernel-source)'
+	dh_md5sums
+	dh_builddeb --destdir=$(KPKG_DEST_DIR)
+
+clean:
+	test -f debian/control || cp debian/control.template debian/control
+	dh_testdir
+	dh_testroot
+	$(MAKE) SYSSRC=$(KSRC) $(KPKG_EXTRAV_ARG) clean
+ifeq (1,$(WITH_UVM))
+	$(MAKE) -C uvm SYSSRC=$(KSRC) $(KPKG_EXTRAV_ARG) clean
+endif
+	dh_quilt_unpatch || quilt --quiltrc /dev/null pop -af
+	dh_clean debian/control debian/install
+
+# The kdist_configure target is called by make-kpkg modules_config. It
+# should configure the module so it is ready for compilation (mostly useful
+# for calling configure).
+kdist_configure: configure-stamp
+
+# The kdist_image target is called by make-kpkg modules_image.  It is
+# responsible for building the module, but doesn't generate a *.changes
+# file.
+kdist_image: build-stamp
+	$(ROOT_CMD) $(MAKE) $(MFLAGS) -f debian/rules binary-arch
+	$(ROOT_CMD) $(MAKE) $(MFLAGS) -f debian/rules clean
+
+# The kdist target is called by make-kpkg modules.  It is responsible for
+# building the module and a *.changes file.  Normally it should also sign
+# the *.changes file, but we don't do that to avoid a dependency on
+# devscripts.
+kdist: build-stamp
+	$(ROOT_CMD) $(MAKE) $(MFLAGS) -f debian/rules binary-arch
+	KMAINT="$(KMAINT)" KEMAIL="$(KEMAIL)" sh -v debian/genchanges
+	$(ROOT_CMD) $(MAKE) $(MFLAGS) -f debian/rules clean
+
+# The kdist_clean target is called by make-kpkg modules_clean.  It is
+# responsible for cleaning up any changes that have been made by the other
+# kdist_commands (except for the .deb files created).
+kdist_clean:
+	$(ROOT_CMD) $(MAKE) $(MFLAGS) -f debian/rules clean
+
+# Legacy targets supported for backward compatibility.
+binary-modules binary_modules: binary-arch
+
+.PHONY: binary binary-arch binary-indep build build-arch build-indep clean
+.PHONY: configure kdist kdist_clean kdist_configure kdist_image
diff -uNr kernel.org/debian/source/format kernel/debian/source/format
--- kernel.org/debian/source/format	1970-01-01 08:00:00.000000000 +0800
+++ kernel/debian/source/format	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1 @@
+1.0
diff -uNr kernel.org/Kbuild kernel/Kbuild
--- kernel.org/Kbuild	1970-01-01 08:00:00.000000000 +0800
+++ kernel/Kbuild	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,198 @@
+#
+# This Makefile was automatically generated; do not edit.
+# Generated on 'swio-display-x86-rhel47-05' on Sun Nov 8 21:44:53 PST 2015.
+#
+
+#
+# KBUILD Makefile for the NVIDIA Linux kernel module.
+#
+# The motivation for replacing the original Makefile is the hope that this
+# version will simplify the build and installation process. In the past,
+# many architectural and cosmetic changes to the Linux kernel have made it
+# difficult to maintain compatibility or required duplication of logic.
+#
+# Linux 2.6 introduces numerous such changes, many of which impact modules.
+# Relying on KBUILD, some aspects of the build system otherwise difficult
+# to support (for example, module versioning) are abstracted away and dealt
+# with elsewhere, making life significantly easier here.
+#
+# The new approach currently has its own share of problems, some of which
+# are architectural difficulties with KBUILD, others minor annoyances. For
+# this reason, an improved version of the NVIDIA Makefile is available to
+# those experiencing difficulties.
+#
+# kbuild Makefile originally developed by:
+#
+# Alistair J Strachan (alistair@devzero.co.uk) (first pass, enhancements)
+# Christian Zander (zander@mail.minion.de) (enhancements)
+#
+
+#
+# The NVIDIA kernel module base name.
+#
+
+MODULE_BASENAME := nvidia
+
+# 
+# This suffix is used to construct the name of the NVIDIA kernel module
+# in case of multiple kernel module builds. This suffix can either take the 
+# numeric value 0-7 or the string "frontend". For normal NVIDIA kernel module 
+# builds, this variable is empty and hence the module name is identical to 
+# the base names.
+#
+
+NV_MODULE_SUFFIX ?=
+
+#
+# The NVIDIA kernel module name and static file names. In case of multiple 
+# NVIDIA kernel module builds, $(NV_MODULE_SUFFIX) is appended to the 
+# module basename to construct the module name of the concerned module. 
+# KBUILD will go ahead and append ".o" or ".ko" to form the module file name. 
+#
+
+ifeq ($(NV_MODULE_SUFFIX),frontend)
+ MODULE_NAME := $(MODULE_BASENAME)-$(NV_MODULE_SUFFIX)
+else
+ MODULE_NAME := $(MODULE_BASENAME)$(NV_MODULE_SUFFIX)
+endif
+VERSION_HEADER := nv_compiler.h
+
+#
+# List of object files to link into NVIDIA kernel module; this list
+# is assigned depending on the value of $(NV_MODULE_SUFFIX) being passed.
+# Make sure KBUILD understands that we want a module.
+#
+
+CORE_OBJS := nv-kernel.o
+
+ifdef NV_BUILD_MODULE_INSTANCES
+ ifeq ($(NV_MODULE_SUFFIX),frontend)
+ MODULE_GLUE_OBJS := $(patsubst %.c,%.o,nv-frontend.c)
+ $(MODULE_NAME)-objs := $(MODULE_GLUE_OBJS)
+ else
+ MODULE_GLUE_OBJS := $(patsubst %.c,%.o, nv.c nv-acpi.c nv-chrdev.c nv-cray.c nv-dma.c nv-drm.c nv-gvi.c nv-i2c.c nv-mempool.c nv-mmap.c nv-p2p.c nv-pat.c nv-procfs.c nv-usermap.c nv-vm.c nv-vtophys.c os-interface.c os-mlock.c os-pci.c os-registry.c os-smp.c os-usermap.c nv_uvm_interface.c)
+ $(MODULE_NAME)-objs := $(CORE_OBJS) $(MODULE_GLUE_OBJS)
+ endif
+else
+ MODULE_GLUE_OBJS := $(patsubst %.c,%.o, nv.c nv-acpi.c nv-chrdev.c nv-cray.c nv-dma.c nv-drm.c nv-gvi.c nv-i2c.c nv-mempool.c nv-mmap.c nv-p2p.c nv-pat.c nv-procfs.c nv-usermap.c nv-vm.c nv-vtophys.c os-interface.c os-mlock.c os-pci.c os-registry.c os-smp.c os-usermap.c nv_uvm_interface.c) $(patsubst %.c,%.o,nv-frontend.c)
+ $(MODULE_NAME)-objs := $(CORE_OBJS) $(MODULE_GLUE_OBJS)
+endif
+
+#
+# List of targets to build in case of multiple NVIDIA kernel module builds. 
+# The actual target is constructed by prefixing nvidia/nvidia- to every
+# item in the list $(BUILD_MODULES_LIST)/$(BUILD_MODULE_FRONTEND).
+#
+
+ifdef NV_BUILD_MODULE_INSTANCES
+ BUILD_MODULES_LIST := $(shell seq 0 `expr $(NV_BUILD_MODULE_INSTANCES) - 1`)
+ BUILD_MODULE_FRONTEND := frontend
+endif
+
+COMPILE_TESTS = \
+	remap_pfn_range \
+	vmap \
+	set_pages_uc \
+	set_memory_uc \
+	set_memory_array_uc \
+	change_page_attr \
+	i2c_adapter \
+	pci_get_class \
+	pm_message_t \
+	irq_handler_t \
+	pci_choose_state \
+	vm_insert_page \
+	acpi_device_ops \
+	acpi_op_remove \
+	acpi_device_id \
+	acquire_console_sem \
+	console_lock \
+	kmem_cache_create \
+	outer_flush_all \
+	on_each_cpu \
+	smp_call_function \
+	nvmap_support \
+	acpi_evaluate_integer \
+	ioremap_cache \
+	ioremap_wc \
+	proc_dir_entry \
+	INIT_WORK \
+	acpi_walk_namespace \
+	scatterlist \
+	pci_domain_nr \
+	pci_dma_mapping_error \
+	file_operations \
+	sg_alloc_table \
+	sg_init_table \
+	pci_get_domain_bus_and_slot \
+	get_num_physpages \
+	efi_enabled \
+	dom0_kernel_present \
+	drm_available \
+	proc_create_data \
+	pde_data \
+	proc_remove \
+	sg_table \
+	pm_vt_switch_required \
+	pci_save_state \
+	file_inode \
+	drm_pci_set_busid \
+	write_cr4 \
+	for_each_online_node \
+	node_end_pfn \
+	get_user_pages_remote
+
+#
+# CFLAGS dependent on the type of builds (e.g. single/muliple module, debug)
+#
+
+ifdef NV_BUILD_MODULE_INSTANCES
+ EXTRA_CFLAGS += -DNV_BUILD_MODULE_INSTANCES=1
+ ifneq ($(NV_MODULE_SUFFIX),frontend)
+ EXTRA_CFLAGS += -DNV_MODULE_INSTANCE=$(NV_MODULE_SUFFIX)
+ endif
+else
+ EXTRA_CFLAGS += -DNV_MODULE_INSTANCE=0
+ EXTRA_CFLAGS += -DNV_BUILD_MODULE_INSTANCES=0
+endif
+
+EXTRA_CFLAGS += -UDEBUG -U_DEBUG -DNDEBUG
+
+#
+# Include common definitions; we rely on the definition of the source path to
+# find the file; set to a reasonable default if unset (e.g. for top-level
+# passes). The source path is also used in the common file.
+#
+
+src ?= .
+include $(src)/nvidia-modules-common.mk
+
+#
+# Generate multiple targets at runtime depending on the items present in
+# the lists $(BUILD_MODULES_LIST) and $(BUILD_MODULE_FRONTEND) for multiple
+# NVIDIA kernel module builds.
+#
+# For normal builds, generate the target $(MODULE_BASENAME).ko.
+#
+# Multiple-RM builds require GNU Make v3.81 or later, due to a bug in earlier
+# versions of GNU Make that prevents the use of $(eval) within a $(foreach):
+#
+# http://savannah.gnu.org/bugs/?func=detailitem&item_id=1517
+#
+
+$(foreach obj_file, $(BUILD_MODULES_LIST), $(eval $(call BUILD_MODULE_RULE,$(MODULE_BASENAME)$(obj_file).ko,$(obj_file),$(MODULE_BASENAME)-$(BUILD_MODULE_FRONTEND).ko)))
+$(eval $(call BUILD_MODULE_RULE,$(MODULE_BASENAME)-$(BUILD_MODULE_FRONTEND).ko,$(BUILD_MODULE_FRONTEND),))
+$(eval $(call BUILD_MODULE_RULE,$(MODULE_BASENAME).ko,,))
+
+#
+# Add dependencies for the generated targets, depending on whether we are
+# building multiple RM instances or a single RM.
+#
+
+ifdef NV_BUILD_MODULE_INSTANCES
+ NV_MODULE_TARGET_DEPS := $(addsuffix .ko,$(addprefix $(MODULE_BASENAME),$(BUILD_MODULES_LIST) -$(BUILD_MODULE_FRONTEND)))
+else
+ NV_MODULE_TARGET_DEPS := $(MODULE_OBJECT)
+endif
+
+module: $(NV_MODULE_TARGET_DEPS)
diff -uNr kernel.org/Makefile kernel/Makefile
--- kernel.org/Makefile	2015-11-09 13:44:53.000000000 +0800
+++ kernel/Makefile	2016-07-31 10:11:11.000000000 +0800
@@ -1,197 +1,35 @@
 #
-# This Makefile was automatically generated; do not edit.
-# Generated on 'swio-display-x86-rhel47-05' on Sun Nov 8 21:44:53 PST 2015.
+# By default, the build is done against the running linux kernel source.
+# To build against a different kernel source tree, set SYSSRC:
 #
+#    make SYSSRC=/path/to/kernel/source
 
-#
-# KBUILD Makefile for the NVIDIA Linux kernel module.
-#
-# The motivation for replacing the original Makefile is the hope that this
-# version will simplify the build and installation process. In the past,
-# many architectural and cosmetic changes to the Linux kernel have made it
-# difficult to maintain compatibility or required duplication of logic.
-#
-# Linux 2.6 introduces numerous such changes, many of which impact modules.
-# Relying on KBUILD, some aspects of the build system otherwise difficult
-# to support (for example, module versioning) are abstracted away and dealt
-# with elsewhere, making life significantly easier here.
-#
-# The new approach currently has its own share of problems, some of which
-# are architectural difficulties with KBUILD, others minor annoyances. For
-# this reason, an improved version of the NVIDIA Makefile is available to
-# those experiencing difficulties.
-#
-# kbuild Makefile originally developed by:
-#
-# Alistair J Strachan (alistair@devzero.co.uk) (first pass, enhancements)
-# Christian Zander (zander@mail.minion.de) (enhancements)
-#
-
-#
-# The NVIDIA kernel module base name.
-#
-
-MODULE_BASENAME := nvidia
-
-# 
-# This suffix is used to construct the name of the NVIDIA kernel module
-# in case of multiple kernel module builds. This suffix can either take the 
-# numeric value 0-7 or the string "frontend". For normal NVIDIA kernel module 
-# builds, this variable is empty and hence the module name is identical to 
-# the base names.
-#
-
-NV_MODULE_SUFFIX ?=
-
-#
-# The NVIDIA kernel module name and static file names. In case of multiple 
-# NVIDIA kernel module builds, $(NV_MODULE_SUFFIX) is appended to the 
-# module basename to construct the module name of the concerned module. 
-# KBUILD will go ahead and append ".o" or ".ko" to form the module file name. 
-#
-
-ifeq ($(NV_MODULE_SUFFIX),frontend)
- MODULE_NAME := $(MODULE_BASENAME)-$(NV_MODULE_SUFFIX)
-else
- MODULE_NAME := $(MODULE_BASENAME)$(NV_MODULE_SUFFIX)
+ifneq ($(KERNELRELEASE),)
+$(error Running inside Kbuild should not use the Makefile)
 endif
-VERSION_HEADER := nv_compiler.h
 
-#
-# List of object files to link into NVIDIA kernel module; this list
-# is assigned depending on the value of $(NV_MODULE_SUFFIX) being passed.
-# Make sure KBUILD understands that we want a module.
-#
-
-CORE_OBJS := nv-kernel.o
-
-ifdef NV_BUILD_MODULE_INSTANCES
- ifeq ($(NV_MODULE_SUFFIX),frontend)
- MODULE_GLUE_OBJS := $(patsubst %.c,%.o,nv-frontend.c)
- $(MODULE_NAME)-objs := $(MODULE_GLUE_OBJS)
- else
- MODULE_GLUE_OBJS := $(patsubst %.c,%.o, nv.c nv-acpi.c nv-chrdev.c nv-cray.c nv-dma.c nv-drm.c nv-gvi.c nv-i2c.c nv-mempool.c nv-mmap.c nv-p2p.c nv-pat.c nv-procfs.c nv-usermap.c nv-vm.c nv-vtophys.c os-interface.c os-mlock.c os-pci.c os-registry.c os-smp.c os-usermap.c nv_uvm_interface.c)
- $(MODULE_NAME)-objs := $(CORE_OBJS) $(MODULE_GLUE_OBJS)
- endif
+ifdef SYSSRC
+ KERNEL_SOURCES	 = $(SYSSRC)
 else
- MODULE_GLUE_OBJS := $(patsubst %.c,%.o, nv.c nv-acpi.c nv-chrdev.c nv-cray.c nv-dma.c nv-drm.c nv-gvi.c nv-i2c.c nv-mempool.c nv-mmap.c nv-p2p.c nv-pat.c nv-procfs.c nv-usermap.c nv-vm.c nv-vtophys.c os-interface.c os-mlock.c os-pci.c os-registry.c os-smp.c os-usermap.c nv_uvm_interface.c) $(patsubst %.c,%.o,nv-frontend.c)
- $(MODULE_NAME)-objs := $(CORE_OBJS) $(MODULE_GLUE_OBJS)
+ KERNEL_UNAME	:= $(shell uname -r)
+ KERNEL_SOURCES	 = /lib/modules/$(KERNEL_UNAME)/build
 endif
 
-#
-# List of targets to build in case of multiple NVIDIA kernel module builds. 
-# The actual target is constructed by prefixing nvidia/nvidia- to every
-# item in the list $(BUILD_MODULES_LIST)/$(BUILD_MODULE_FRONTEND).
-#
-
-ifdef NV_BUILD_MODULE_INSTANCES
- BUILD_MODULES_LIST := $(shell seq 0 `expr $(NV_BUILD_MODULE_INSTANCES) - 1`)
- BUILD_MODULE_FRONTEND := frontend
-endif
-
-COMPILE_TESTS = \
-	remap_pfn_range \
-	vmap \
-	set_pages_uc \
-	set_memory_uc \
-	set_memory_array_uc \
-	change_page_attr \
-	i2c_adapter \
-	pci_get_class \
-	pm_message_t \
-	irq_handler_t \
-	pci_choose_state \
-	vm_insert_page \
-	acpi_device_ops \
-	acpi_op_remove \
-	acpi_device_id \
-	acquire_console_sem \
-	console_lock \
-	kmem_cache_create \
-	outer_flush_all \
-	on_each_cpu \
-	smp_call_function \
-	nvmap_support \
-	acpi_evaluate_integer \
-	ioremap_cache \
-	ioremap_wc \
-	proc_dir_entry \
-	INIT_WORK \
-	acpi_walk_namespace \
-	scatterlist \
-	pci_domain_nr \
-	pci_dma_mapping_error \
-	file_operations \
-	sg_alloc_table \
-	sg_init_table \
-	pci_get_domain_bus_and_slot \
-	get_num_physpages \
-	efi_enabled \
-	dom0_kernel_present \
-	drm_available \
-	proc_create_data \
-	pde_data \
-	proc_remove \
-	sg_table \
-	pm_vt_switch_required \
-	pci_save_state \
-	file_inode \
-	drm_pci_set_busid \
-	write_cr4 \
-	for_each_online_node \
-	node_end_pfn
-
-#
-# CFLAGS dependent on the type of builds (e.g. single/muliple module, debug)
-#
-
-ifdef NV_BUILD_MODULE_INSTANCES
- EXTRA_CFLAGS += -DNV_BUILD_MODULE_INSTANCES=1
- ifneq ($(NV_MODULE_SUFFIX),frontend)
- EXTRA_CFLAGS += -DNV_MODULE_INSTANCE=$(NV_MODULE_SUFFIX)
+ifndef NV_VERBOSE
+ ifneq ($(strip $(QUIET)),1)
+ NV_VERBOSE=1
+ else
+ NV_VERBOSE=0
  endif
-else
- EXTRA_CFLAGS += -DNV_MODULE_INSTANCE=0
- EXTRA_CFLAGS += -DNV_BUILD_MODULE_INSTANCES=0
 endif
 
-EXTRA_CFLAGS += -UDEBUG -U_DEBUG -DNDEBUG
-
-#
-# Include common definitions; we rely on the definition of the source path to
-# find the file; set to a reasonable default if unset (e.g. for top-level
-# passes). The source path is also used in the common file.
-#
+KBUILD_PARAMS += KBUILD_VERBOSE=$(NV_VERBOSE)
+KBUILD_PARAMS += -C $(KERNEL_SOURCES) M=$(CURDIR)
 
-src ?= .
-include $(src)/nvidia-modules-common.mk
 
-#
-# Generate multiple targets at runtime depending on the items present in
-# the lists $(BUILD_MODULES_LIST) and $(BUILD_MODULE_FRONTEND) for multiple
-# NVIDIA kernel module builds.
-#
-# For normal builds, generate the target $(MODULE_BASENAME).ko.
-#
-# Multiple-RM builds require GNU Make v3.81 or later, due to a bug in earlier
-# versions of GNU Make that prevents the use of $(eval) within a $(foreach):
-#
-# http://savannah.gnu.org/bugs/?func=detailitem&item_id=1517
-#
-
-$(foreach obj_file, $(BUILD_MODULES_LIST), $(eval $(call BUILD_MODULE_RULE,$(MODULE_BASENAME)$(obj_file).ko,$(obj_file),$(MODULE_BASENAME)-$(BUILD_MODULE_FRONTEND).ko)))
-$(eval $(call BUILD_MODULE_RULE,$(MODULE_BASENAME)-$(BUILD_MODULE_FRONTEND).ko,$(BUILD_MODULE_FRONTEND),))
-$(eval $(call BUILD_MODULE_RULE,$(MODULE_BASENAME).ko,,))
-
-#
-# Add dependencies for the generated targets, depending on whether we are
-# building multiple RM instances or a single RM.
-#
-
-ifdef NV_BUILD_MODULE_INSTANCES
- NV_MODULE_TARGET_DEPS := $(addsuffix .ko,$(addprefix $(MODULE_BASENAME),$(BUILD_MODULES_LIST) -$(BUILD_MODULE_FRONTEND)))
-else
- NV_MODULE_TARGET_DEPS := $(MODULE_OBJECT)
-endif
+default: modules
+.PHONY: default
 
-module: $(NV_MODULE_TARGET_DEPS)
+# hand over to kbuild
+%::
+	$(MAKE) $(KBUILD_PARAMS) $@
diff -uNr kernel.org/NVIDIA_Changelog kernel/NVIDIA_Changelog
--- kernel.org/NVIDIA_Changelog	1970-01-01 08:00:00.000000000 +0800
+++ kernel/NVIDIA_Changelog	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,5399 @@
+
+======== Release 340 Entries ========
+
+2015-09-02 version 340.93
+
+    * Fixed a bug that caused the X server to crash if an OpenGL application
+      tried to allocate a drawable when GPU-accessible memory is exhausted.
+
+    * Fixed a bug that could cause an Xid error when terminating a video
+      playback application using the overlay presentation queue in VDPAU.
+
+    * Updated nvidia-installer to avoid recursing too deeply into kernel source
+      trees under /usr/lib/modules, mirroring an existing restriction on recursion
+      under /lib/modules.
+
+    * Fixed a rare deadlock condition when running applications that use
+      OpenGL in multiple threads on a Quadro GPU.
+
+    * Fixed a bug which caused truncation of the EGLAttribEXT value returned
+      by eglQueryDeviceAttribEXT() on 64-bit systems.
+
+    * Fixed a kernel memory leak that occurred when looping hardware-
+      accelerated video decoding with VDPAU on Maxwell-based GPUs.
+
+    * Fixed a bug that caused the X server to crash if a RandR 1.4 output
+      provided by a Sink Output provider was selected as the primary output on
+      X.Org xserver 1.17 and higher.
+
+    * Fixed a bug that caused waiting on X Sync Fence objects in OpenGL to
+      hang indefinitely in some cases.
+
+    * Fixed a bug that prevented OpenGL from properly recovering from
+      hardware errors or sync object waits that had timed out.
+
+2015-01-27 version 340.76
+
+    * Fixed a bug that caused frequent AMD-Vi page faults on systems with
+      some AMD 8xx/9xx-series chipsets when used with some NVIDIA GPUs.
+
+    * Fixed a regression that could cause system crashes when terminating the
+      X server on systems with an NVIDIA Quadro SDI Capture card installed.
+
+    * Fixed a bug that caused audio over HDMI to not work on some GPUs while
+      using a display that supports HDMI 3D.
+
+2014-12-08 version 340.65
+
+    * Fixed a bug that prevented internal 4K panels on some laptops from being
+      driven at a sufficient bandwidth to support their native resolutions.
+
+    * Fixed a regression that prevented the NVIDIA kernel module from loading
+      in some virtualized environments such as Amazon Web Services.
+
+    * Fixed a regression that caused displays to be detected incorrectly on
+      some notebook systems.
+
+    * Fixed a bug that could cause X to freeze when using Base Mosaic.
+
+    * Fixed a regression that prevented the NVIDIA X driver from recognizing
+      Base Mosaic layouts generated by the nvidia-settings control panel.
+
+2014-11-05 version 340.58
+
+    * Added support for the following GPUs:
+        * GeForce GT820M
+        * GeForce GTX 760A
+        * GeForce GTX 850A
+        * GeForce 810A
+        * GeForce 820A
+        * GeForce 840A
+        * Tesla K8
+
+    * Fixed a bug that could cause VT-switching to fail following a
+      suspend, resume, and driver reload sequence.
+
+    * Fixed a bug that caused incorrect colors to be displayed on X screens
+      running at depth 8 on some GPUs.
+
+    * Fixed a bug that prevented GPUs from being correctly recognized in
+      MetaMode strings when identified by UUID.
+
+    * Implemented support for disabling indirect GLX context creation using
+      the -iglx option available on X.Org server release 1.16 and newer.  Note
+      that future X.Org server releases may make the -iglx option the default.
+      To re-enable support for indirect GLX on such servers, use the +iglx
+      option.
+
+    * Added the "AllowIndirectGLXProtocol" X config option.  This option can
+      be used to disallow use of GLX protocol.  See "Appendix B. X Config
+      Options" in the README for more details.
+
+2014-09-30 version 340.46
+
+    * Fixed a crash with UnrealEngine 4 when the application was started
+      with the -opengl4 commandline switch.
+
+    * Fixed an OpenGL issue that could cause glReadPixels() operations to
+      be improperly clipped when resizing composited application windows,
+      potentially leading to momentary X freezes.
+
+    * Fixed a bug that could prevent the GLSL compiler from correctly
+      evaluating some expressions when compiling shaders.
+
+    * Fixed a bug that could cause nvidia-installer to crash while attempting
+      to run nvidia-xconfig on systems where that utility is missing.
+
+    * Added option UseSysmemPixmapAccel to control the use of GPU acceleration
+      for X drawing operations on pixmaps allocated in system memory.
+
+2014-08-12 version 340.32
+
+    * Added support for the following GPUs:
+        * Quadro K420
+        * Quadro K620
+        * Quadro K2200
+        * Quadro K4200
+        * Quadro K5200
+        * GeForce 830A
+
+    * Fixed a regression that prevented the internal stereo infrared emitter
+      built into some 3D Vision monitors from working.
+
+    * Fixed a bug that could cause some Java-based OpenGL applications using
+      JOGL to crash on startup on systems with Xinerama enabled.
+
+    * Fixed a bug that could prevent OpenGL Framebuffer Objects (FBOs)
+      from being properly redrawn after a modeswitch.
+
+    * Fixed a memory leak that occurred when starting OpenGL applications.
+
+    * Fixed a bug that prevented the EDID-Like Data (ELD) of audio-capable
+      displays from being updated when hotplugged/unplugged.
+
+    * Fixed a bug that caused Xid errors when using stereo mode 12 (HDMI 3D)
+      on Quadro boards without an onboard stereo DIN connector.
+
+    * Fixed a video corruption issue for VDPAU decoding of VC-1 and WMV
+      video streams utilizing range remapping on Maxwell GPUs.
+
+    * Fixed a "black window" bug in Ubuntu 14.04 when using the Xinerama
+      and Composite extensions.
+
+    * Fixed a bug that caused the screen's contents to be shifted downward when
+      a G-SYNC monitor is unplugged and replaced by a non-G-SYNC monitor.
+
+    * Fixed a bug that prevented G-SYNC from working when a G-SYNC monitor
+      was unplugged and plugged back in without a modeset.
+
+2014-07-08 version 340.24
+
+    * Fixed a regression, introduced in the 340.17 public beta release,
+      that caused the NVIDIA X driver to access freed memory when exiting
+      a GLX application that used either of the GLX_NV_video_out or
+      GLX_NV_present_video extensions.
+
+    * Fixed a bug that prevented 3D Vision stereo and ultra low motion blur
+      modes from working on G-SYNC capable monitors in some cases.
+
+    * Fixed a bug that caused the "Allow G-SYNC" checkbox to be displayed in
+      nvidia-settings even if the GPUs in the system are not capable of G-SYNC.
+
+    * Fixed a kernel crash when running some applications with IOMMU
+      functionality enabled.
+
+    * Fixed a floating point exception in the OpenGL driver when running
+      "Risk of Rain" under Wine.
+
+2014-06-09 version 340.17
+
+    * Made various improvements and corrections to the information reported
+      to GL applications via the KHR_debug and ARB_debug_output extensions.
+
+    * Fixed a bug that caused GLX applications which simultaneously create
+      drawables on multiple X servers to crash when swapping buffers.
+
+    * Updated nvidia-settings to report all valid names for each target
+      when querying target types, e.g. `nvidia-settings -q gpus`.
+
+    * Added support for controlling the availability of Fast Approximate
+      Antialiasing (FXAA) on a per-application basis via the new
+      __GL_ALLOW_FXAA_USAGE environment variable and the corresponding
+      GLAllowFXAAUsage application profile key. See the README for details.
+
+    * Fixed a bug where indirect rendering could become corrupted on
+      system configurations that disallow writing to executable memory.
+
+    * Updated the nvidia-settings Makefiles to allow nvidia-settings
+      to be dynamically linked against the host system's libjansson.
+      This option can be enabled by setting the NV_USE_BUNDLED_LIBJANSSON
+      Makefile variable to 0.  Please note that nvidia-settings requires
+      libjansson version 2.2 or later.
+
+    * Removed the runlevel check from nvidia-installer: the installation
+      problems formerly associated with runlevel 1 no longer apply.
+
+    * Added initial support for G-SYNC monitors.  Additional details and system
+      requirements can be found at:
+
+        http://www.geforce.com/hardware/technology/g-sync
+
+    * Improved support for running the NVIDIA driver in configurations where
+      writing to executable memory is disallowed.  Driver optimizations that
+      require writing to executable memory can be forcefully disabled using the
+      new __GL_WRITE_TEXT_SECTION environment variable.  See the README for more
+      details.
+
+    * Fixed an X driver bug that caused gamma ramp updates of the green
+      channel at depth 15, on some recent GPUs, to be ignored.
+
+======== Release 337 Entries ========
+
+2014-05-30 version 337.25
+
+    * Fixed a bug that caused X to crash when querying clock offsets for
+      non-existent performance levels.
+
+    * Added support for the following GPUs:
+        * GeForce GTX TITAN Z
+        * GeForce GT 740
+
+    * Fixed a performance regression when running KDE with desktop effects
+      using the OpenGL compositing backend.
+
+    * Fixed a bug that caused duplicate entries to appear in some dropdown
+      menus in the "Application Profiles" page of nvidia-settings.
+
+    * Fixed a regression that could cause OpenGL rendering corruption on X
+      screens with 30 bit per pixel color.
+
+2014-05-05 version 337.19
+
+    * Fixed a bug causing mode validation to fail for 4K resolutions over HDMI
+      in certain situations.
+
+    * Added nvidia-settings command line controls for over- and under-clocking
+      attributes.  Please see the nvidia-settings(1) manual page for
+      more details.
+
+    * Fixed several cosmetic issues in the clock control user interface
+      of nvidia-settings.
+
+    * Added support for the GLX_EXT_stereo_tree extension.  For more
+      details, see the extension specification:
+
+        http://www.opengl.org/registry/specs/EXT/glx_stereo_tree.txt
+
+    * Enabled support for using Unified Back Buffer (UBB) and 3D Stereo with
+      the composite extension on Quadro cards.  Using stereo with a composite
+      manager requires a stereo-aware composite manager.  Otherwise, only the
+      left eye of stereo applications will be displayed.  See the
+      GLX_EXT_stereo_tree extension specification for more details.
+
+2014-04-08 version 337.12
+
+    * Fixed a bug that could cause OpenGL programs to freeze under some
+      low memory conditions.
+
+    * Updated the display configuration page in nvidia-settings to uniquely
+      identify DisplayPort 1.2 monitors by displaying the monitor GUIDs.
+
+    * Fixed a bug that could cause ECC settings to be displayed incorrectly
+      in nvidia-settings when changing ECC settings on a multi-GPU system.
+
+    * Removed the "OnDemandVBlankInterrupts" X configuration option: this
+      option has been enabled by default since version 177.68 of the
+      NVIDIA Unix driver, and the documentation had not been updated to
+      reflect the new default value.
+
+    * Fixed a bug that caused GPU errors when hotplugging daisy-chained
+      DisplayPort 1.2 displays.
+
+    * Updated the color correction settings page in the nvidia-settings
+      control panel to reflect gamma changes made by other RandR clients
+      while the control panel was already running.
+
+    * Fixed a bug that prevented the use of multiple simultaneous X servers
+      on UEFI systems.
+
+    * Updated the nvidia-settings source package to build libXNVCtrl when
+      building nvidia-settings, instead of relying on a pre-built library.
+    * Added the ability to over- and under-clock certain GeForce
+       GPUs in the GeForce GTX 400 series and later.  For GPUs that allow it,
+       an offset can be applied to clock values in some clock domains of
+       some performance levels.  This clock manipulation is done at the
+       user's own risk.  See the README documentation of the "CoolBits"
+       X configuration option for more details.
+
+    * Added support for the following GPUs:
+        * GeForce 830M
+        * GeForce 840M
+        * GeForce 845M
+        * GeForce GTX 850M
+
+    * Updated the minimum required version of GTK+ from 2.2 to 2.4 for
+      nvidia-settings.
+
+    * Renamed the RandR output property _GUID to GUID now that it is an official
+      property documented in randrproto.txt:
+
+        http://cgit.freedesktop.org/xorg/proto/randrproto/commit/?id=19fc4c5a72eb9919d720ad66734029d9f8e313b1
+
+    * Reduced CPU utilization and GPU memory utilization of the NVIDIA
+      EGL driver.
+
+    * Added support for the following EGL extensions:
+      - EGL_EXT_buffer_age;
+      - EGL_EXT_client_extensions;
+      - EGL_EXT_platform_base;
+      - EGL_EXT_platform_x11.
+
+    * Renamed the "Clone" setting of the "MetaModeOrientation" X configuration
+      option to "SamePositionAs", to make clear that this setting applies to
+      the position only, and not to the resolution of modes in the MetaMode.
+
+    * Added NV-CONTROL attribute NV_CTRL_VIDEO_ENCODER_UTILIZATION to query
+      utilization percentage of the video encoder engine.
+
+    * Added support for the GLX_NV_delay_before_swap extension.  For more
+      details, see the extension specification:
+
+        http://www.opengl.org/registry/specs/NV/glx_delay_before_swap.txt
+
+    * Report correct buffer sizes for RGB GLX visuals, GLXFBConfigs, and
+      EGLConfigs.  Previously, RGB10 and RGB8 formats were reported as having 32
+      bits, and RGB5 formats were reported as having 16 bits.  Now they are
+      correctly reported as 30, 24, and 15 bit formats respectively as
+      required by the GLX and EGL specifications.
+
+======== Release 334 Entries ========
+
+    * Fixed a regression in the NVIDIA kernel module which caused it to
+      improperly dereference a userspace pointer. This potential security
+      issue was initially reported to the public at:
+
+        http://forums.grsecurity.net/viewtopic.php?f=3&t=3922
+
+      The regression did not affect NVIDIA GPU drivers before release 334.
+
+    * Fixed a bug that could cause OpenGL programs to hang after calling
+      fork(2).
+
+    * Fixed a bug that could cause a multi-threaded OpenGL application
+      to crash when one of its threads exits after the application has
+      unloaded libGL.
+
+    * Added support for the following GPUs:
+        * GeForce GTX 750 Ti
+        * GeForce GTX 750
+        * GeForce GTX 745
+        * GeForce GTX TITAN Black
+
+    * Added support for GPUs with VDPAU Feature Set E. See the README
+      for details.
+
+    * On GPUs with VDPAU Feature Set E, VDPAU now supports more robust
+      decode error handling at the cost of a minor performance impact.
+      This can be disabled by setting the
+      VDPAU_NVIDIA_DISABLE_ERROR_CONCEALMENT environment variable to 1.
+
+    * Added support for application profile rule patterns which are logical
+      operations of subpatterns. See the README for details.
+
+    * Added support for a "findfile" application profile feature which
+      allows the driver to apply profiles based on matching files in the
+      same directory as the process executable. See the README for details.
+
+    * Fixed a bug that caused nvidia-installer to log the automatically
+      selected answers to some user prompts without logging the prompt
+      text itself, when running in silent mode.
+
+    * Improved performance of OpenGL applications when used in conjunction
+      with the X driver's composition pipeline.  The composition pipeline may
+      be explicitly enabled by using the ForceCompositionPipeline or
+      ForceFullCompositionPipeline MetaMode options, or implicitly enabled
+      when certain features such as some XRandR transformations, rotation,
+      Warp & Blend, PRIME, and NvFBC are used.
+
+2014-02-08 version 334.16
+
+    * Fixed a bug that could cause nvidia-settings to compute incorrect
+      gamma ramps when adjusting the color correction sliders.
+
+    * Updated the nvidia-settings control panel to allow the selection
+      of display devices using RandR and target ID names when making
+      queries targeted towards specific display devices.
+
+    * Fixed a bug that prevented some dropdown menus in the
+      nvidia-settings control panel from working correctly on older
+      versions of GTK+ (e.g. 2.10.x).
+
+    * Updated the nvidia-settings control panel to provide help text
+      for application profile keys and suggestions for valid key names
+      when configuring application profiles.
+
+    * Updated the nvidia-settings control panel to populate the dropdown
+      menu of stereo modes with only those modes which are available.
+
+    * Fixed a bug that could cause applications using the OpenGL
+      extension ARB_query_buffer_object to crash under Xinerama.
+
+    * Fixed a bug that caused high pixelclock HDMI modes (e.g. as used
+      with 4K resolutions) to be erroneously reported as dual-link in
+      the nvidia-settings control panel.
+
+    * Fixed a bug that could cause poor stereo synchronization in large
+      multi-monitor setups using 3D Vision, due to failed hardware
+      handshaking on some of the monitors.
+
+    * Fixed a bug that prevented some DisplayPort 1.2 displays from being
+      properly restored after a VT switch.
+
+    * Renamed per GPU proc directories in /proc/driver/nvidia/gpus/ with GPU's
+      bus location represented in "domain:bus:device.function" format.
+
+    * Added 64-bit EGL and OpenGL ES libraries to 64-bit driver packages.
+
+    * Changed format of "Bus Location" field reported in the
+      /proc/driver/nvidia/gpus/0..N/information files from
+      "domain:bus.device.function" to "domain:bus:device.function" to match
+      the lspci format.
+
+    * Fixed a bug in the GLX_EXT_buffer_age extension where incorrect
+      ages would be returned unless triple buffering was enabled.
+
+    * Updated the NVIDIA X driver to load the NVIDIA kernel module using
+      `nvidia-modprobe`, rather than the XFree86 DDX helper function
+      xf86LoadKernelModule().
+
+    * Changed the driver's default behavior to stop deleting RandR 1.2 outputs
+      corresponding to unused DisplayPort 1.2 devices.  Deleting these outputs
+      can confuse some applications.  Added a new option,
+      DeleteUnusedDP12Displays, which can be used to turn this behavior back on.
+
+      This option can be enabled by running
+
+        sudo nvidia-xconfig --delete-unused-dp12-displays
+
+    * Improved support for the __GL_SYNC_DISPLAY_DEVICE and
+      VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE environment variables in certain
+      configurations.  Both environment variables will now recognize all
+      supported display device names.  See "Appendix C. Display Device Names"
+      and "Appendix G. VDPAU Support" in the README for more details.
+
+    * Improved performance of the X driver when handling large numbers of
+      surface allocations.
+
+======== Release 331 Entries ========
+
+2014-12-05 version 331.113
+
+2014-10-08 version 331.104
+
+    * Fixed a bug that could cause the CUDA debugger to fail after
+      exiting X on systems with persistence mode enabled.
+
+    * Fixed a bug that could cause silent and intermittent failures when
+      a CUDA application writes to a peer device's memory with GPUDirect.
+
+    * Fixed a bug that could prevent 32-bit GPU-based applications from
+      running correctly on 64-bit systems when using GPUs with very
+      large memory-mapped I/O regions.
+
+    * Fixed a bug that could cause poor system performance and hangs when
+      running large compute workloads on IOMMU-enabled systems.
+
+    * Fixed a bug that could cause a system crash when two or more
+      processes try to load the nvidia-uvm driver.
+
+    * Added support for the following GPU:
+        * GeForce 810M
+
+    * Fixed a bug that could cause framelock status to be incorrectly
+      reported in the nvidia-settings control panel on some multi-GPU
+      framelock configurations.
+
+    * Improved the performance of OpenGL applications that request a large
+      number of GPU mappings via the GL_NV_shader_buffer_load extension.
+
+    * Fixed a bug that could cause a system crash when killing applications
+      that use NVIDIA GPUs on multiple-GPU systems with IOMMU functionality
+      enabled.
+
+    * Fixed a bug that caused the NVIDIA kernel module to leak memory for
+      DMA mappings on some configurations.
+
+2014-07-04 version 331.89
+
+    * Fixed a race condition in the NVIDIA kernel module that caused some
+      GPUs to sporadically become unresponsive.
+
+    * Updated the error reporting in the NVIDIA kernel module to include the
+      GPU serial number, when available, in error messages written to the
+      system log.
+
+    * Added support for the following GPU:
+        * GeForce GT 730
+
+    * Fixed a bug that caused blank screens when transforming or rotating displays
+      in an SLI Mosaic layout.
+
+    * Fixed a bug that corrupted certain software rendering on 32-bit systems.
+
+2014-05-20 version 331.79
+
+    * Fixed a bug that caused nvidia-installer to crash in environments
+      where /proc is not mounted.
+
+    * Fixed a bug that prevented module signing from working correctly
+      for the NVIDIA Unified Memory kernel module when using module
+      signing keys generated by nvidia-installer.
+
+    * Fixed a bug that caused blank screens and flickering when rotating
+      displays in a Base Mosaic layout.
+
+    * Fixed a bug that caused BadRRCrtc or BadRROutput errors for big-endian
+      X11 clients making certain XRandR requests.
+
+    * Fixed a bug that corrupted certain software rendering, notably the
+      stippled text used to represent disabled entries in xterm's pop-up menus.
+
+2014-04-09 version 331.67
+
+    * Fixed a bug that could lead to crashes when running Left 4 Dead 2
+      with threaded optimizations enabled.
+
+    * Added support for the following GPUs:
+        * GeForce GT 705
+        * GeForce GT 720
+        * GeForce GTX 860M
+        * GeForce GTX 870M
+        * GeForce GTX 880M
+
+    * Updated the makefile for the NVIDIA kernel module to work around a
+      bug in older versions of GNU Make that prevented the NVIDIA kernel
+      module from building correctly. This bug was fixed in version 3.81
+      of GNU Make.
+
+    * Fixed a bug that causes some X clients to be disconnected from the X
+      server when the screen is resized while RandR 1.4 display offloading is in
+      use.
+
+    * Fixed a bug that could cause display corruption when resuming from
+      suspend on systems using RandR 1.4 display offloading with recent
+      Linux kernels.
+
+    * Added support for Tridelity SL stereo mode.
+
+    * Fixed a bug that could cause nvidia-settings to crash or display
+      incorrect information after switching virtual terminals while a
+      color correction confirmation countdown was active.
+
+    * Added a missing 32-bit compatibility library for
+      libnvidia-fbc.so to the x86_64 Linux installer package.
+
+2014-02-18 version 331.49
+
+    * Added support for the following GPUs:
+        * GeForce GT 710
+        * GeForce 825M
+
+    * Fixed a regression that prevented nvidia-installer from cleaning up
+      directories created as part of the driver installation.
+
+    * Added a new X configuration option "InbandStereoSignaling" to
+      enable/disable DisplayPort in-band stereo signaling. See
+      "Appendix B. X Config Options" in the README for more information.
+
+    * Fixed a bug that caused PBO downloads of cube map faces to
+      retrieve incorrect data.
+
+    * Fixed a bug in nvidia-installer that resulted in spurious error
+      messages when opting out of installing the NVIDIA kernel module
+      or source files for the kernel module.
+
+    * Added experimental support for ARGB GLX visuals when Xinerama and
+      Composite are enabled at the same time on X.Org xserver 1.15.
+
+2014-01-13 version 331.38
+
+    * Fixed a bug that caused the X server to crash if video memory is
+      exhausted and the GPU does not support rendering to system memory.
+
+    * Updated nvidia-installer to make the --multiple-kernel-modules
+      option imply the --no-unified-memory option: Unified memory is
+      incompatible with multiple kernel modules.
+
+    * Updated the behavior of the nvidia-settings PowerMizer Preferred
+      Mode drop-down menu, to make the setting apply consistently
+      across all GPUs in an SLI group.
+
+    * Improved the robustness of the NVIDIA X driver in scenarios where
+      GPU-accessible memory for allocating pixmaps was exhausted.
+
+    * Added NV-CONTROL attributes to control the brightness of the illuminated
+      logos on certain graphics boards.  For example, to turn off the
+      illumination of the "GEFORCE GTX" lettering on the GeForce GTX 780, use
+
+        nvidia-settings --assign GPULogoBrightness=0
+
+    * Fixed a bug that prevented screen transformations from being
+      applied properly when starting X.
+
+    * GLX protocol for the following OpenGL extensions from
+      OpenGL 2.1 and OpenGL 3.0 have been promoted from
+      unofficial to ARB approved official status:
+
+      GL_ARB_pixel_buffer_object
+      GL_NV_conditional_render
+      GL_ARB_map_buffer_range
+      GL_EXT_texture_integer
+      GL_ARB_vertex_array_object
+
+      GL_ARB_pixel_buffer_object was the last piece of protocol
+      needed to have official support for indirect rendering with
+      all OpenGL 2.1 commands.
+
+    * GLX Protocol for the miscellaneous OpenGL 3.0 commands not
+      associated with specific extensions has also been promoted from
+      unofficial to ARB approved status.
+
+    * Deprecated display mask related configuration of display devices via
+      NV-CONTROL and nvidia-settings.  Display target specifications should
+      be used instead - A display target is one of the display's valid names,
+      with an optional GPU or X screen qualifier.
+
+    * Deprecated the following NV-CONTROL attributes:
+
+      NV_CTRL_CONNECTED_DISPLAYS
+      NV_CTRL_ENABLED_DISPLAYS
+      NV_CTRL_ASSOCIATED_DISPLAYS
+      NV_CTRL_NOTEBOOK_INTERNAL_LCD
+      NV_CTRL_FRAMELOCK_MASTER
+      NV_CTRL_FRAMELOCK_SLAVES
+      NV_CTRL_FRAMELOCK_MASTERABLE
+      NV_CTRL_FRAMELOCK_SLAVEABLE
+
+      Also, although NV_CTRL_PROBE_DISPLAYS is still operational, the return
+      value has been deprecated and should not be used.
+
+    * Added deprecation warning messages in nvidia-settings when deprecated
+      attributes are used.  This also includes display mask usage.
+
+2013-11-06 version 331.20
+
+2013-10-22 version 331.17
+
+    * Added support for NVIDIA OpenGL-based Framebuffer Capture (NvFBCOpenGL).
+      This library provides a high performance, low latency interface to
+      capture and optionally encode the composited framebuffer of an X screen.
+      NvFBC and NvIFR are private APIs that are only available to approved
+      partners for use in remote graphics scenarios.  Please contact NVIDIA
+      at GRIDteam@nvidia.com for more information.
+
+    * Fixed a bug that prevented configuration files containing application
+      profiles from being loaded when directories were present in the
+      application profile configuration search path.
+
+    * Deferred initialization of libselinux in the NVIDIA OpenGL driver, in
+      order to avoid a problem where libselinux might not be ready when the
+      NVIDIA libGL shared library is first loaded.
+
+    * Added nvidia-uvm.ko, the NVIDIA Unified Memory kernel module, to the
+      NVIDIA Linux driver package. This kernel module provides support for
+      the new Unified Memory feature in an upcoming CUDA release.
+
+2013-10-04 version 331.13
+
+    * Fixed a bug that caused the X server to fail to initialize when
+      DisplayPort 1.2 monitors were assigned to separate X screens on the same
+      GPU.
+
+    * Fixed a bug that could cause a deadlock when forking from OpenGL
+      programs which use some malloc implementations, such as TCMalloc.
+
+    * Fixed a bug that prevented Warp & Blend settings from being
+      retained across display configuration changes.
+
+    * Fixed a bug that prevented some settings changes made via the
+      nvidia-settings command line interface from being reflected in
+      the nvidia-settings graphical user interface.
+
+    * Changed the clipping behavior of the NVIDIA X driver on Trapezoids
+      and Triangles for some RENDER operations to match the behavior in
+      newer versions of Pixman:
+
+      http://lists.freedesktop.org/archives/pixman/2013-April/002755.html
+
+    * Fixed a bug in MetaMode tracking that could cause spurious error
+      messages to be printed when attempting to add or delete Metamodes
+      via NV-CONTROL.
+
+    * Fixed a bug that caused the NVIDIA X driver to attempt to load the
+      X11 "shadow" module unconditionally, even in situations where the
+      driver had no need to use the module. This could result in the
+      printing of spurious error messages, on X servers where the module
+      was not present.
+
+    * Fixed a bug that prevented display configuration changes made
+      with xvidtune(1) from working correctly.
+
+    * Fixed a bug that occasionally caused display corruption in GLX
+      applications while changing the display configuration.
+
+    * Fixed a bug that prevented glReadPixels from working correctly when
+      reading from Pixel Buffer Objects over indirect rendering, when the
+      image width is not a multiple of 4.
+
+    * Added a new NV-CONTROL attribute, NV_CTRL_BACKLIGHT_BRIGHTNESS,
+      for controlling backlight brightness.
+
+    * Fixed a bug that prevented nvidia-settings from creating display
+      device configuration pages for newly connected DisplayPort 1.2
+      Multi Stream Transport downstream devices.
+
+    * Added GPU utilization reporting to the nvidia-settings control panel.
+
+    * Fixed a bug in the nvidia-settings control panel that prevented users
+      from configuring stereo, when stereo was not already configured.
+
+    * Added support for reporting the tachometer-measured fan speed on
+      capable graphics boards via nvidia-settings and the NV-CONTROL API.
+      The preexisting mechanism for reporting fan speed reports the speed
+      of the fan as programmed by the driver.
+      For example, `nvidia-settings --query=[fan:0]/GPUCurrentFanSpeedRPM`.
+
+    * Fixed a regression that caused GPUs that do not support graphics to not
+      appear in nvidia-settings.
+
+    * Fixed a bug that caused DisplayPort 1.2 multi-stream devices to stop
+      working if they were unplugged and plugged back in while they were active
+      in the current MetaMode.
+
+    * Added support for multiple NVIDIA kernel modules. This feature allows
+      users to assign different GPUs in the system to different NVIDIA kernel 
+      modules, potentially reducing the software overhead of coordinating 
+      access to multiple GPUs.
+
+    * Added support for the EGL API on 32-bit platforms.  Currently, the
+      supported client APIs are OpenGL ES 1.1, 2.0 and 3.0, and the only
+      supported window system backend is X11.
+
+    * Add a new option, AllowEmptyInitialConfiguration, which allows the X
+      server to start even if no connected display devices are detected at
+      startup.  This option can be enabled by running "sudo nvidia-xconfig
+      --allow-empty-initial-configuration"
+
+      This option is useful in RandR 1.4 display offload configurations where no
+      display devices are connected to the NVIDIA GPU when the X server is
+      started, but might be connected later.
+
+    * Updated nvidia-installer to provide a scrollable text area for
+      displaying messages from the /usr/lib/nvidia/alternate-install-present
+      and /usr/lib/nvidia/alternate-install-available distro hook files.
+      This allows for longer messages to be provided in these files.
+
+    * Updated nvidia-installer to avoid recursing into the per-kernel "build"
+      and "source" directories when searching for conflicting kernel modules
+      in /lib/modules.
+
+    * Added a system memory cache to improve the performance of certain X
+      rendering operations that use software rendering fallbacks.  The X
+      configuration option "SoftwareRenderCacheSize" may be used to configure
+      the size of the cache.
+
+    * Removed the "DynamicTwinView" X configuration option: dynamic
+      reconfiguration of displays is always possible, and can no longer be
+      disabled.
+
+    * Fixed a bug that caused nvidia-settings to display incorrect information
+      in its display configuration page when all displays on an X screen were
+      turned off.
+
+    * Updated nvidia-installer to only install the libraries libvdpau and
+      libvdpau_trace if an existing installation of libvdpau is not detected
+      on the system. This behavior can be overridden with the
+      --install-vdpau-wrapper and --no-install-vdpau-wrapper options.
+
+      Future NVIDIA Linux installer packages will no longer include copies
+      of libvdpau or libvdpau_trace: VDPAU users are recommended to install
+      these libraries via other means, e.g. from packages provided by their
+      distributors, or by building them from the sources available at:
+
+      http://people.freedesktop.org/~aplattner/vdpau/
+
+======== Release 325 Entries ========
+
+2013-08-05 version 325.15
+
+    * Fixed a bug in the nvidia-settings control panel that could cause
+      spurious messages about layout inconsistencies to be printed when
+      changing the display layout while SLI is enabled.
+
+2013-07-01 version 325.08
+
+    * Fixed a bug that could cause display flickering after setting some
+      scaling configurations.
+
+    * Fixed a bug that prevented the status bar on the "PowerMizer" and
+      "X Server XVideo Settings" pages in the nvidia-settings control
+      panel from being updated when settings were changed by another
+      NV-CONTROL client.
+
+    * Fixed a bug that could cause some UI elements to be duplicated in the
+      nvidia-settings control panel following a VT switch on X server
+      configurations with multiple NVIDIA X screens.
+
+    * Changed the default PCIe interrupt delivery method from virtual-wire
+      to MSI. Note that if the NVIDIA Linux driver fails to initialize
+      with an error indicating that it is not receiving interrupts,  MSI 
+      can be disabled by setting the module parameter "NVreg_EnableMSI=0"
+      when loading the NVIDIA kernel module.
+
+    * Removed support for Linux 2.4 kernels. The NVIDIA Linux driver now
+      requires Linux 2.6.9 or later.
+
+    * Fixed a bug that prevented the creation of a mode via RandR with the
+      same name as a previously created mode, even after the previous mode
+      had been deleted.
+
+    * Fixed a bug in nvidia-settings that caused GTK+ theme colors to be
+      ignored for some UI elements.
+
+    * Fixed a bug that caused nvidia-settings to write hostname-based color
+      correction settings to the .nvidia-settings-rc configuration file, even
+      when the "Include X Display Names in the Config File" option was unset.
+      This could lead to a long delay when starting nvidia-settings, if a
+      hostname saved to the configuration file failed to resolve.
+
+    * Fixed a bug that exposed edge overlap controls on the SLI Mosaic
+      page of nvidia-settings on edges where overlap was impossible.
+
+    * Fixed a bug that caused some settings in the nvidia-settings control
+      panel to be reset when reprobing displays.
+
+    * Fixed a bug that could cause OpenGL applications that use Frame Buffer
+      Objects (FBOs) to crash following a mode switch (e.g. changing the
+      resolution of a display or transforming it).
+
+    * Fixed a memory leak that could be triggered by unloading libGL before
+      destroying all GLX contexts.
+
+    * Fixed a bug that could cause color correction settings to be applied to
+      the wrong display when multiple displays are unplugged and then plugged
+      back in again.
+
+    * Fixed a bug that could cause a spurious error message about a missing
+      NV-GLX extension when performing indirect rendering from a GLX client
+      with the NVIDIA client-side OpenGL libraries to a non-NVIDIA GLX server.
+
+    * Fixed an OpenGL bug that prevented conditional rendering from the
+      NV_conditional_render extension from correctly affecting CopyPixels.
+
+    * Improved the rendering performance of complex gradients.
+
+    * Added support for configuring SLI Mosaic and Base Mosaic in the "X Server
+      Display Configuration" page of nvidia-settings.
+
+    * Updated nvidia-installer to look for the following files:
+
+          /usr/lib/nvidia/alternate-install-available
+          /usr/lib/nvidia/alternate-install-present
+
+      These files may be provided by NVIDIA driver installers other than the
+      official .run package maintained by NVIDIA, to alert nvidia-installer
+      to the presence or availability of an alternative installation method.
+      See the nvidia-installer(1) manual page for more information.
+
+    * Fixed an X driver bug where the RandR CRTC panning area and tracking
+      area were not getting clamped to the current X screen size when
+      the RandR CRTC transitioned from disabled to enabled.
+
+    * Fixed an X driver bug where successful RandR X_RRSetScreenConfig
+      requests would update the server's RandR 'lastSetTime' too far,
+      potentially causing subsequent RandR requests to be unnecessarily
+      rejected.
+
+    * Fixed an X driver bug that caused GPUs to become inaccessible via
+      the NV-CONTROL X extension when no corresponding X screens could be
+      initialized.
+
+    * Generate a BadMatch error when applications attempt to create GLX
+      pixmaps using glXCreatePixmap() or glXCreateGLXPixmapWithConfigSGIX()
+      and the pixmap's depth doesn't match that of the specified GLXFBConfig.
+
+    * Updated nvidia-settings to explicitly specify the direction of rotation
+      for configuring per-display rotation configuration.
+
+    * Honor a GPU UUID as the GPU qualifier for X configuration options that
+      allow GPU qualifiers (e.g. "MetaModes").
+
+    * Report GPU UUIDs in the X log when verbose logging is enabled in the
+      X server.
+
+    * Enabled conformant glBlitFrameBuffer() scissor test behavior by
+      default. A driver-provided application profile enables the previous
+      non-conformant behavior for applications that load libcogl, to work
+      around a bug in older versions of libcogl.
+
+      Application profiles can be added to enable the non-conformant behavior
+      for other applications that depend upon it. See the "Known Issues"
+      section of the README for more details.
+
+======== Release 319 Entries ========
+
+    * Updated nvidia-settings to use libjansson commit
+      88aa6a9e30e7465196a737bd0f82eb17f393a120 from the repository at:
+
+        git://github.com/akheron/jansson.git
+
+      This commit contains the relevant fixes for CVE-2013-6401.
+
+2014-01-13 version 319.82
+
+    * Fixed a bug which could sometimes corrupt a newly-created
+      thread's signal mask in multi-threaded applications that load
+      libGL.
+
+    * Added support for the following GPUs:
+        * GeForce GTX 780 Ti
+        * GeForce GTX 760 (192-bit)
+        * GeForce 820M
+        * Tesla K40m
+        * Tesla K40c
+        * Tesla K40st
+        * Tesla K40s
+
+2013-11-06 version 319.72
+
+    * Added support for the following GPUs:
+        * Quadro K510M
+        * Quadro K610M
+        * Quadro K1100M
+        * Quadro K2100M
+        * Quadro K3100M
+        * Quadro K4100M
+        * Quadro K5100M
+        * GeForce 705A
+        * GeForce GT 730A
+
+    * Fixed a bug that prevented SDI output from working when two or more
+      non-SDI displays were being driven by the same GPU.
+
+2013-10-01 version 319.60
+
+    * Fixed a bug that could cause OpenGL applications to crash during the
+      initialization of new threads.
+
+    * Fixed a bug that caused the GPU and Memory clock frequencies for some
+      PowerMizer performance levels on Kepler boards to be reported incorrectly
+      in the nvidia-settings control panel.
+
+    * Fixed a bug that caused the X server to fail to start on certain laptops
+      when the boot display was on an external DisplayPort monitor, for example
+      if the laptop was booted while the lid was closed.
+
+    * Fixed a bug in nvidia-installer that caused the 32-bit libGL.la
+      libtool library file to be installed to the wrong location.
+
+    * Added support for the following GPU:
+        * GeForce GTX 760 Ti OEM
+
+2013-08-20 version 319.49
+
+    * Fixed a bug that caused DisplayPort monitors connected to Quadro FX 3800,
+      4800, or 5800 to remain off after DPMS.
+
+    * Added the NVIDIA OpenGL-based Inband Frame Readback (NvIFROpenGL) library
+      to the Linux driver package. This library provides a high performance,
+      low latency interface to capture and optionally encode an individual
+      OpenGL framebuffer. NvIFROpenGL captures pixels rendered by OpenGL only
+      and is ideally suited to application capture and remoting.
+
+    * Fixed a bug that caused applications using CUDA-GL interop to crash
+      when run on X servers with Xinerama enabled.
+
+    * Fixed a bug that could prevent some double-bit ECC errors from being
+      properly reported.
+
+    * Fixed a bug which could cause a blank screen when changing house sync
+      settings on Quadro Kepler GPUs with Quadro Sync boards.
+
+    * Fixed a bug that prevented nested loops with identical loop conditions
+      in GLSL shaders from terminating correctly. This could cause hangs in
+      applications such as Exa PowerVIZ.
+
+    * Added support for the following GPUs:
+        * GeForce GT 740A
+        * GeForce GT 745A
+        * GeForce GT 755M
+        * GeForce GT 625
+        * GeForce GTX 645
+        * GRID K340
+        * GRID K350
+        * NVS 315
+        * Quadro K500M
+        * Quadro K6000
+
+    * Fixed a bug that resulted in corrupt texels when a previously empty
+      texture image was specified with glXBindTexImageEXT. In GNOME 3, this
+      caused gnome-screenshot to produce garbled window screenshots.
+
+    * Fixed a bug that caused the X server to crash when querying the current
+      mode of disabled displays.
+
+2013-06-25 version 319.32
+
+    * Updated the nvidia-settings control panel to report more detailed
+      clocking information.
+
+    * Fixed a bug that could cause the X server to crash after power-cycling
+      displays connected behind a DisplayPort 1.2 Multi-Stream Transport hub.
+
+    * Fixed a bug that could cause nvidia-settings to crash when switching
+      VTs after changing some settings.
+
+    * Updated the application profile syntax to allow for multiple patterns
+      within a single rule. See the README for details.
+
+    * Fixed a bug that caused OpenGL programs to crash when the __GL_DOOM3
+      environment variable was set.
+
+    * Updated the NVIDIA driver to avoid calling fork(2) to execute the
+      nvidia-modprobe utility when not needed.
+
+    * Improved the error reporting of the nvidia-persistenced utility.
+
+    * Fixed a bug that could cause Altair HyperView to hang when rendering
+      animations with tensors.
+
+    * Fixed a performance regression in MEDINA 8.2.
+
+    * Fixed a bug that caused the OpenGL driver to hang sometimes when running
+      the SpeedTree Modeler application.
+
+    * Fixed a bug that could cause an OpenGL application to crash if it creates
+      and destroys multiple threads.
+
+    * Fixed a bug in nvidia-installer that could cause installation
+      problems when the value of the CC environment variable contained
+      spaces, e.g. CC="distcc gcc"
+
+    * Fixed a bug that caused corrupted window content in some cases when
+      moving GLX windows with antialiasing enabled.
+
+    * Fixed a bug that caused DisplayPort devices that failed link training to
+      be reported as connected rather than disconnected.
+
+    * Fixed a regression that could cause a DisplayPort device that was
+      connected to one connector to turn off when a DisplayPort device on a
+      different connector was connected or disconnected.
+
+    * Added support for the following GPUs:
+        * GeForce 710A
+        * GeForce 720M
+
+    * On Kepler-based GPUs, improved the appearance of the tearing that occurs
+      when using RandR 1.4's Source Output capability.  While tearing is still
+      expected, the tears should now appear as horizontal lines rather than more
+      noticeable checkerboard or triangular shapes.
+
+    * Added a "Prefer Consistent Performance" PowerMizer Mode to the
+      nvidia-settings control panel, available on Quadro boards that
+      support this feature.
+
+2013-05-23 version 319.23
+
+    * Fixed a regression that could cause X to crash when querying GPU
+      information through NV-CONTROL on multi-GPU systems where some
+      GPUs failed to be initialized for X.
+
+    * Fixed a bug that could cause X to crash when using Vertex
+      Buffer Objects (VBOs) with indirect rendering.
+
+    * Fixed a bug that prevented some drop-down menus in nvidia-settings
+      from working correctly when using older versions of GTK+.
+
+    * Fixed RandR panning reporting when the current MetaMode is smaller
+      than the X screen.
+
+    * Fixed a regression that caused nvidia-installer to attempt
+      post-processing of non-installed files.
+
+    * Added support for the following GPUs:
+        * GeForce GTX 760
+        * GeForce GTX 770
+        * GeForce GTX 780
+
+    * Added the "ForceCompositionPipeline" and "ForceFullCompositionPipeline"
+      MetaMode options.  See the README for details.
+
+    * Added support for HDMI 4K resolutions. Using a 4K resolution with an
+      HDMI display requires a Kepler or later GPU.
+
+    * Added support in VDPAU for 4k resolution MPEG-1/2 and H.264 video
+      decoding, up to 4032x4048 for MPEG-1/2 and 4032x4080 for H.264,
+      and up to 65536 macroblocks for both.
+
+2013-05-02 version 319.17
+
+    * Fixed a regression that caused multiple BUG messages to be printed in
+      the kernel log on SMP systems.
+
+    * Fixed a bug that could cause the X server to crash when repeatedly
+      enabling and disabling displays.
+
+    * Updated nvidia-settings to preserve the relative positioning of displays
+      when changing from a layout where multiple displays are on the same X
+      screen to one where the same displays span multiple X screens.
+
+    * Fixed nvidia-settings to dlopen(3) "libvdpau.so.1", rather than
+      "libvdpau.so".
+
+    * Added support for the following GPUs:
+        * GeForce GT 720M
+        * GeForce GT 735M
+        * GeForce GT 740M
+        * GeForce GT 745M
+        * GeForce GT 750M
+        * GeForce GTX 760M
+        * GeForce GTX 765M
+        * GeForce GTX 770M
+        * GeForce GTX 775M
+        * GeForce GTX 780M
+
+    * Added nvidia-persistenced, a daemon utility, to the driver package.
+      nvidia-persistenced can be installed to run on system startup or
+      manually run to allow the NVIDIA kernel module to keep persistent driver
+      state allocated when no other user-space NVIDIA driver components are
+      running.  This can improve startup time for other user-space NVIDIA
+      driver components.
+
+2013-04-09 version 319.12
+
+    * Added initial support for restoration of efifb consoles on UEFI
+      systems where the primary display is driven over VGA or TMDS (e.g.
+      DVI, HDMI, or LVDS).
+
+    * Added support for the xorg.conf Monitor section options "Ignore",
+      "Enable", "Primary", and "Rotate".  For example, to rotate a monitor
+      identified by a specific EDID hash, one could add the following to
+      /etc/X11/xorg.conf or a file in /etc/X11/xorg.conf.d:
+
+        Section "Monitor"
+          Identifier "DPY-EDID-ee6cecc0-fa46-0c33-94e0-274313f9e7eb"
+          Option "Rotate" "left"
+        EndSection
+
+      See the README and the xorg.conf(5) man page for more information.
+
+    * Added an Underscan feature in the nvidia-settings X Server
+      Display Configuration page which allows the configuration of an
+      underscan border around the ViewPortOut.  This feature was
+      formerly known as Overscan Compensation.
+
+    * Added support for the following GPU:
+        * GeForce GTX 650 Ti BOOST
+
+    * Added support for application profiles to the NVIDIA client-side GLX
+      implementation. See the "Application Profiles" chapter of the README for
+      more information.
+
+    * Added support to nvidia-installer for crytographically signing the NVIDIA
+      kernel module. See the "Installing the NVIDIA Driver" chapter of the
+      README for more information.
+
+    * Added the "PanningTrackingArea" and "PanningBorder" MetaMode attributes.
+
+    * Added support for RandR 1.3 panning.
+
+    * Improved performance when the Accel option is disabled.
+
+    * Added initial support for RandR 1.4 Provider objects with the Source
+      Output capability, which can be used to render the desktop on an NVIDIA
+      GPU and display it on an output connected to a provider with the Sink
+      Output capability, such as an Intel integrated graphics device or a
+      DisplayLink USB-to-VGA adapter.  See the README for details.
+
+    * Added nvidia-modprobe, a setuid root utility, to the driver package.
+      nvidia-modprobe can be used by user-space NVIDIA driver components
+      to make sure the NVIDIA kernel module is loaded and that the
+      NVIDIA character device files are present.  When possible,
+      it is recommended to use Linux distribution native mechanisms
+      for managing kernel module loading and device file creation.
+      This utility is provided as a fallback to work out-of-the-box in
+      a distribution-independent way.
+
+    * Updated the nvidia-settings command line interface to accept display
+      device names, as well as optional target qualifiers, e.g.
+
+	     nvidia-settings -q [DVI-I-0]/RefreshRate
+	     nvidia-settings -q [GPU-1.DVI_I-1]/RefreshRate
+
+    * Updated the nvidia-settings command line interface to no longer assume
+      the "X screen 0" target, when no target is specified in query and assign
+      operations.  Instead, all valid targets of the attribute are processed.
+
+    * Fixed a memory leak that occurred when destroying a GLX window
+      but not its associated X window.
+
+    * Fixed a bug that could cause nvidia-installer to fail to delete
+      directories created as part of a previous installation.
+
+    * Updated nvidia-installer to report failures to remove installed
+      files or restore backed up files with a single warning message,
+      instead of a separate message for each individual failure.
+
+    * Improved the performance of modesets in cases where the mode
+      timings remained the same, but other parameters of the mode
+      configuration, such as the ViewPort or panning domain, changed.
+
+    * Fixed an issue with RENDER convolution filters.  The driver will
+      no longer normalize filter kernels before accelerating them.
+
+    * Improved debuggability of the NVIDIA OpenGL libraries by
+      including proper stack unwinding information on all supported
+      architectures.
+
+    * Updated the dkms.conf file and the makefile for the NVIDIA Linux
+      kernel module to allow DKMS installations on systems with separate
+      source and output directories.
+
+    * Fixed a bug that caused RENDER Pictures to be sampled
+      incorrectly when using nearest filtering in some cases.
+
+    * Added support for the RandR "Border" and "BorderDimensions" Output
+      properties, which can be used to configure the ViewPortOut of an
+      RandR output.  This is functionally equivalent to the "ViewPortOut"
+      MetaMode token.
+
+    * Fixed a bug where RRGetCrtcInfo could report incorrect size
+      information when an RandR output has a custom ViewPortIn.
+
+    * Further improve performance of some versions of HyperMesh with
+      Quadro GPUs.
+
+    * Added a VDPAU page to the nvidia-settings control panel, to display
+      information about the decoding capabilities of VDPAU-capable GPUs.
+
+    * Added support for dynamic mode management through RandR, e.g. via
+      the --newmode, --rmmode, and --delmode options in xrandr(1).
+
+    * Increased the number of pages that are shareable across multiple
+      processes in the x86 build of libnvidia-glcore.so, by reducing its
+      R_386_PC32 relocation count.
+
+    * Fixed a bug that caused XVideo applications to receive BadAlloc errors
+      after VT switches and mode switches that occurred while a composite
+      manager was running.
+
+    * Removed the X driver's support for "CursorShadow".
+
+    * Updated nvidia-installer to attempt unprelinking files whose checksums
+      do not match the checksums recorded at installation time.
+
+    * Switched .run package compression from gzip to xz.  This provides a
+      higher level of compression.
+
+======== Release 313 Entries ========
+
+2013-03-05 version 313.26
+
+    * Added support for the following GPU:
+        * GeForce GTX TITAN
+
+2013-01-15 version 313.18
+
+    * Added support in NV-CONTROL and in nvidia-settings for changing the
+      Double Precision performance boost mode on supported GPUs.
+
+    * Fixed a bug in nvidia-settings that allowed unavailable features to
+      be selected in some drop-down menus.
+
+    * Fixed several OpenGL driver bugs related to stencil-only framebuffer
+      objects.
+
+2012-12-11 version 313.09
+
+    * Updated the NVIDIA X driver to reprobe displays when VT-switching to
+      X, to allow reporting of hotplug events when displays are connected
+      or disconnected while VT-switched away from X.
+
+    * Added unofficial GLX protocol support (i.e for GLX indirect rendering)
+      for the following extension and core commands.
+
+      GL_ARB_vertex_array_object
+      OpenGL 3.0 commands ClearBufferfi, ClearBufferfv, ClearBufferiv,
+      ClearBufferuiv and GetStringi.
+
+    * Fixed a bug that caused the cursor shadow to be clipped to 32x32
+      pixels, even on Kepler GPUs that support a 256x256 cursor image.
+
+    * Fixed a bug that prevented some cursor image updates from taking
+      effect on displays with rotation or other transformations applied.
+
+    * Fixed cursor alpha blending artifacts on displays with rotation
+      or other transformations applied.
+
+    * Added support for the GLX_EXT_buffer_age extension.
+
+    * Improved the performance of glDrawPixels() by up to 450% when the pixel
+      data is of type GL_BYTE.
+
+======== Release 310 Entries ========
+
+2013-05-08 version 310.51
+
+    * Fixed a bug where RRGetCrtcInfo could report incorrect size
+      information when an RandR output has a custom ViewPortIn.
+
+    * Fixed a regression that could cause an X server crash when performing
+      a modeset (e.g. changing resolutions, transformation settings, or
+      display layout) when some connected display devices are disabled.
+
+    * Augmented the resolution drop-down in the display configuration
+      page of nvidia-settings with "implicit resolutions": for common
+      resolutions, if a mode with that resolution is not available for
+      a display device, that resolution will be simulated through
+      MetaMode ViewPort scaling.
+
+2013-03-08 version 310.40
+
+    * Reduced the amount of time needed to establish framelock in some
+      stereo configurations with many monitors.
+
+    * Added support for the following GPUs:
+        * GeForce G205M
+        * GeForce GT 240M LE
+        * GeForce 405M
+        * GeForce 610
+        * GeForce 615
+        * GeForce 620M
+        * GeForce GT 625M
+        * GeForce GT 625 (OEM)
+        * GeForce GT 635
+        * GeForce 705M
+        * GeForce 710M
+        * GeForce GT 710M
+        * GeForce GT 720A
+        * GeForce GT 730M
+        * Tesla X2070
+        * Tesla S2050
+        * Tesla K20s
+
+    * Fixed a bug where glXSwapIntervalEXT failed to set a swap interval
+      value of zero in certain situations.
+
+2013-01-21 version 310.32
+
+    * Fixed a bug when enabling framelock between displays connected to
+      the same GPU as other displays with different refresh rates, which
+      caused the latter to be incorrectly assigned to the framelock group.
+
+    * Updated the reporting of HDMI 3D framerates and pixel clocks to be
+      more consistent with how they are reported by HDMI 3D displays.
+
+    * Fixed a bug that sometimes prevented rotation controls in the nvidia-
+      settings control panel from working after changing resolutions.
+
+    * Fixed a bug that could cause applications using GL_NV_vdpau_interop
+      to crash during modeswitches.
+
+    * Fixed a regression that could cause OpenGL applications to crash
+      while compiling shaders.
+
+    * Added a kernel module parameter, "NVreg_EnablePCIeGen3", which can be
+      used to enable PCIe gen 3 when possible. Note that on many systems
+      where the NVIDIA driver does not allow PCIe gen 3 by default,
+      stability problems can be expected when this option is enabled: users
+      should do so at their own risk.
+
+    * Fixed a VDPAU bug that could cause the X server to hang when decoding
+      some corrupted video streams.
+
+    * Added support for the following GPUs:
+        * Quadro K600
+        * Quadro K2000
+        * Quadro K2000D
+        * Quadro K4000
+        * GeForce GTX 680MX
+        * Tesla K20Xm
+
+    * Renamed VGX products to GRID products in the "Supported NVIDIA GPU
+      Products" list.
+
+    * Added support for X.org xserver ABI 14 (xorg-server 1.14).
+
+    * Fixed a bug in nvidia-settings that could cause the wrong
+      resolution to be set in basic mode for setups based on one
+      display per X screen.
+
+    * Fixed libnvidia-encode.so library dependency by linking it with
+      libnvcuvid.so.1 instead of libnvcuvid.so while creating it.
+
+    * Improved performance of OpenGL framebuffer object binds with Xinerama
+      enabled by 2000-3000% when the application's windows do not span screen
+      boundaries.
+
+    * Fix performance issues when using some versions of HyperMesh with Quadro
+      GPUs.
+
+2012-11-13 version 310.19
+
+    * Added support for configuring stereo in nvidia-settings when stereo is
+      enabled in the X configuration file.
+
+    * Added support for configuring the ViewPortIn and ViewPortOut for display
+      devices in nvidia-settings.
+
+    * Fixed metamode bookkeeping when modifying the display configuration in
+      the "X Server Display Configuration" page of nvidia-settings.
+
+    * Added support for configuring rotation and reflection per display device 
+      in nvidia-settings.
+
+2012-10-15 version 310.14
+
+    * Implemented workarounds for two Adobe Flash bugs by applying libvdpau
+      commit ca9e637c61e80145f0625a590c91429db67d0a40 to the version of libvdpau
+      shipped with the NVIDIA driver.
+
+    * Fixed an issue which affected the performance of moving windows of VDPAU
+      applications when run in some composite managers.
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect rendering)
+      for the GL_ARB_pixel_buffer_object OpenGL extension.
+
+    * Added support for HDMI 3D Stereo with Quadro Kepler and later GPUs. See
+      the documentation for the "Stereo" X configuration option in the README
+      for details.
+
+    * Added experimental support for OpenGL threaded optimizations, available
+      through the __GL_THREADED_OPTIMIZATIONS environment variable. For more
+      information, please refer to the "Threaded Optimizations" section in
+      chapter "Specifying OpenGL Environment Variable Settings" of the README.
+
+    * Improved performance and responsiveness of windowed OpenGL applications
+      running inside a Unity session.
+
+======== Release 304.15.00 Entries ========
+
+2012-08-06 version 304.15.00.02
+
+    * Added support for OpenGL 4.3.
+
+======== Release 304 Entries ========
+
+    * Fixed a bug that could cause texture corruption in some OpenGL
+      applications when video memory is exhausted by a combination of
+      simultaneously running graphical and compute workloads.
+
+    * Added support for X.Org xserver ABI 20 (xorg-server 1.18).
+
+2015-08-31 version 304.128
+
+    * Removed libvdpau and libvdpau_trace from the NVIDIA driver package.
+      VDPAU is not supported on the legacy hardware supported on the
+      release 304 legacy driver branch. The libvdpau_nvidia vendor library
+      is still included, so users who wish to use VDPAU with newer hardware
+      that still works with release 304 drivers may install libvdpau from
+      packages provided by the OS vendor where available, or from the source
+      code available at:
+
+      http://people.freedesktop.org/~aplattner/vdpau/
+
+    * Updated nvidia-installer to use modprobe(8) when leaving the NVIDIA
+      kernel module loaded after installation, instead of insmod(8) or
+      libkmod. This allows the kernel module to honor any configuration
+      directives that apply to it in /etc/modprobe.d when it is loaded.
+
+    * Fixed a bug that allowed console messages from the Linux kernel to be
+      drawn over the user interface of nvidia-installer.
+
+2014-12-05 version 304.125
+
+    * Added support for X.Org xserver ABI 19 (xorg-server 1.17).
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Updated nvidia-installer to avoid writing to non-zero offsets of
+      sysctl files in /proc/sys/kernel.
+
+2014-07-10 version 304.123
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Fixed a bug that could result in system instability while restoring
+      the VGA console.
+
+    * Fixed an interaction problem with xserver 1.15 that occasionally caused
+      OpenGL applications to continue rendering when they are minimized or
+      unmapped.
+
+    * Updated nvidia-bug-report.sh to search the systemd journal for X
+      server logs and messages from the NVIDIA kernel module.
+
+    * Added support for X.org xserver ABI 18 (xorg-server 1.16).
+
+    * Fixed a bug that caused corruption or blank screens on monitors that use
+      EDID version 1.3 or older when they are connected via DisplayPort on
+      graphics boards that use external DisplayPort encoders, such as the Quadro
+      FX 4800.
+
+2014-03-11 version 304.121
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Fixed a bug that prevented the NVIDIA implementation of the Xinerama
+      extension protocol requests from being used when RandR was enabled.
+
+    * Updated nvidia-installer to add '/usr/lib/i386-linux/gnu' to the
+      search path for installing 32-bit compatibility libraries on
+      Debian GNU/Linux systems.
+
+2014-01-23 version 304.119
+
+    * Fixed a crash when using WebGL in Firefox with a Geforce 6 GPU.
+
+2013-12-11 version 304.117
+
+    * Added support for X.org xserver ABI 15 (xorg-server 1.15).
+
+2013-11-06 version 304.116
+
+    * Updated nvidia-installer to consider the "libglamoregl.so" X loadable
+      extension module to be in conflict with the NVIDIA OpenGL driver. This
+      module can cause the NVIDIA libGL to be loaded into the same process
+      (the X server) as the NVIDIA libglx.so extension module, which is not
+      a supported use case.
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Updated the NVIDIA OpenGL driver to write temporary files to $TMPDIR
+      if it is set, instead of unconditionally writing to /tmp.
+
+    * Updated a fallback of writing temporary files to $HOME/.nvidia to
+      use $HOME/.nv instead, as the latter path is already used for other
+      NVIDIA driver related files.
+
+2013-08-08 version 304.108
+
+    * Added /usr/lib/modprobe.d to the list of directories where
+      nvidia-installer may optionally install a generated modprobe
+      configuration file to attempt to disable Nouveau.
+
+2013-04-02 version 304.88
+
+    * Fixed CVE-2013-0131: NVIDIA UNIX GPU Driver ARGB Cursor Buffer
+      Overflow in "NoScanout" Mode.  This buffer overflow, which occurred
+      when an X client installed a large ARGB cursor on an X server
+      running in NoScanout mode, could cause a denial of service (e.g.,
+      an X server segmentation fault), or could be exploited to achieve
+      arbitrary code execution.
+
+      For more details, see:
+      http://nvidia.custhelp.com/app/answers/detail/a_id/3290
+
+2013-03-04 version 304.84
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Fixed a bug that could lead to rendering corruption after an X
+      server generation (i.e., leaving an X server running after all
+      of its clients have exited).
+
+    * Removed a spurious dependency on libpangox from the nvidia-settings
+      binary shipped as part of the driver package.
+
+    * Fixed a bug that could cause the X server to crash when performing
+      an RandR 1.0 rotation (e.g., `xrandr --orientation left`) after
+      unplugging the last connected monitor.
+
+    * Fixed font rendering performance and corruption problems on X servers with
+      backported support for the new glyph cache functionality added to Pixman
+      0.27.
+
+    * Fixed a potential X server crash during initialization, when a 
+      graphics card with a TV connector has no TV connected.
+
+    * Added a new X configuration option, "UseHotplugEvents", to allow the
+      suppression of RandR events when adding or removing non-DisplayPort
+      displays. See the "X Config Options" appendix of the README for details.
+
+2012-11-06 version 304.64
+
+    * Added a missing 32-bit compatibility library for libnvidia-opencl.so to
+      the 64-bit Linux installer package.
+
+    * Fixed a regression in backlight control functionality on some
+      notebook configurations.
+
+    * Fixed a performance issue with recent Linux kernels when allocating
+      and freeing system memory.
+
+    * Fixed a bug that sometimes prevented the display device / X screen
+      selection menu from being displayed in nvidia-settings.
+
+    * Fixed a bug that prevented X driver gamma manipulation from working
+      after a VT-switch on some configurations.
+
+    * Added the option "--output-file" to nvidia-bug-report.sh to allow
+      specifying a custom filename for the log file.
+
+    * Fixed a hang when using OpenGL programs with some SLI Mosaic
+      configurations on pre-Fermi GPUs.
+
+    * Added sections to the "Supported NVIDIA GPU Products" list for NVS,
+      Tesla, and VGX products.
+
+    * Added support for the following GPUs:
+        * VGX K1
+        * VGX K2
+        * Tesla K20c
+        * Tesla K20m
+
+2012-10-18 version 304.60
+
+    * Fixed a bug that caused the EIZO FlexScan SX2762W monitor to remain blank
+      when connected via DisplayPort.
+
+    * Updated nvidia-settings to save and restore per-monitor color correction
+      settings when RandR 1.2 or later is available.
+
+    * Fixed a bug that caused too many display devices to appear in the X Screen
+      page of nvidia-settings when SLI is enabled.
+
+    * Fixed a bug that caused applications to stop rendering or the X server to
+      hang in Xinerama configurations when windows were moved, resized, mapped,
+      or unmapped.
+
+    * Fixed a bug that caused poor OpenGL performance on GeForce 6 and 7 PCI
+      cards.
+
+    * Fixed a bug in nvidia-settings that made it report the status of ECC
+      configuration incorrectly.
+
+    * Fixed a bug that caused the X server to crash if a display was put into
+      DPMS off mode and subsequently reenabled while screen transformations are
+      in use.
+
+    * Fixed a bug that caused the X Resize and Rotate extension to be enabled
+      when Xinerama is enabled.  These two X extensions are incompatible and
+      having them both enabled can confuse window managers such as KDE's kwin.
+      RandR is now correctly disabled when Xinerama is enabled.
+
+    * Fixed a bug causing OpenGL stereo applications to not work properly
+      when using passive stereo modes 5 through 9 on Quadro Fermi and newer
+      GPUs.
+
+    * Updated nvidia-settings to report Dedicated GPU Memory (i.e., the
+      memory dedicated exclusively to the GPU) and Total GPU Memory (i.e.,
+      Dedicated GPU Memory plus any TurboCache(TM)-accessible system memory)
+      separately on the GPU information page.
+
+    * Added reporting of the current utilization of Dedicated GPU Memory to
+      the GPU information page of nvidia-settings.
+
+    * Added support for the "Backlight" RandR output property for
+      configuring the brightness of some notebook internal panels.
+
+    * Fixed a bug that prevented the Ubuntu Unity launcher panel from
+      unhiding: https://bugs.launchpad.net/unity/+bug/1057000
+
+    * Fixed a bug that caused nvidia-installer to sometimes attempt
+      to write a log file in a nonexistent directory.
+
+    * Fixed a bug that caused incorrect input transformation after resizing
+      an NVIDIA X screen with xserver ABI 12 (xorg-server 1.12) or newer.
+
+    * Fixed a bug that caused GLX to leak memory when Xinerama is
+      enabled.
+
+2012-09-24 version 304.51
+
+    * Added support for the following GPUs:
+        * GeForce GT 645M
+        * GeForce GTX 670MX
+        * GeForce GTX 675MX
+        * GeForce GTX 650 Ti
+
+    * Added support for the new Quadro Sync board for Quadro Kepler GPUs.
+      See the "Configuring Frame Lock and Genlock" chapter in the README
+      for details.
+
+    * Fixed an X server crash on X.Org xserver 1.13 when it is compiled
+      without support for DRI2.
+
+    * Fixed a regression that broke color controls on older X servers.
+
+    * Fixed a bug that sometimes caused the display layout area of the
+      nvidia-settings control panel to be laid out incorrectly.
+
+    * Fixed a bug that prevented panning from working correctly after a
+      modeswitch on some X servers with support for cursor constraining.
+
+    * Gamma ramp and colormap adjustments now apply correctly when screen
+      transformations such as rotation and keystone correction are in use.
+
+2012-09-11 version 304.48
+
+    * Fixed RandR per-CRTC gamma persistence across modeswitches and
+      VT-switches.
+
+    * Fixed a bug that caused the X server to sometimes hang in response to
+      input events.
+
+    * Fixed a reduction in rendering performance for core X11 rendering on
+      certain GPUs that occurred in the 290.* series of releases.
+
+    * Fixed a bug that prevented PowerMizer from working correctly on
+      some boards with GDDR5 memory, such as some GeForce GT 240 SKUs.
+
+    * Added support for the following GPUs:
+        * GeForce GTX 660
+        * GeForce GTX 650
+
+    * Fixed a bug that caused OpenGL applications to not animate properly
+      when a rotation or a transformation was applied on some older X
+      server versions.
+
+    * Enabled FXAA with Unified Back Buffers.
+
+    * Fixed a bug that prevented the "Reset Hardware Defaults" button in
+      the Display Settings page of nvidia-settings from being activated.
+
+2012-08-27 version 304.43
+
+    * Fixed a bug that caused pre-release versions of X.Org xserver 1.13 to
+      crash when certain GLX operations were performed, such as when starting
+      Firefox.
+
+    * Fixed a bug that caused VDPAU to hang when expanding the YouTube
+      Flash Player.
+
+    * Fixed a bug that caused gnome-settings-daemon to revert display
+      configuration changes made by nvidia-settings.
+
+    * Updated nvidia-settings to use RandR per-CRTC gamma control, when
+      available.  When controlling an X server with support for RandR 1.2,
+      nvidia-settings will display the color correction widget as a tab
+      within each display device page, instead of a per-X screen color
+      correction page.
+
+    * Fixed a bug that prevented the display palette from being updated
+      immediately after an application called XStoreColors.
+
+    * Added support for the following GPUs:
+        * GeForce GTX 660 Ti
+        * Quadro K5000
+        * Quadro K5000M
+        * Quadro K4000M
+        * Quadro K3000M
+        * NVS 510
+
+    * Added the ability to select and move X screens in the "X Server Display
+      Configuration" page of nvidia-settings via Ctrl-(Left)Click + Drag
+
+2012-08-13 version 304.37
+
+    * Removed the ability to enable SLI on GPUs with ECC enabled.
+
+    * Fixed several bugs that prevented some RandR transform geometries from
+      being applied.
+
+    * Fixed a bug that caused frequent hangs or crashes on some systems.
+
+    * Fixed a bug that would cause corruption and performance issues in certain
+      OpenGL applications such as Amnesia: The Dark Descent on GeForce 6 and 7
+      GPUs.
+
+2012-08-03 version 304.32
+
+    * Fixed a bug that caused applications that use DirectColor visuals, such as
+      Enemy Territory: Quake Wars and Braid, to appear in shades of blue instead
+      of the correct colors.
+
+    * Modified handling of RRSetScreenSize requests to ignore requests that
+      do not actually resize the screen.  This reduces screen flicker in certain
+      cases when using GNOME.
+
+    * Added a new option, "--disable-nouveau" to nvidia-installer. This
+      option changes the action that is chosen by default when Nouveau
+      is detected by nvidia-installer. If the "--disable-nouveau" option
+      is set, then the default will be to attempt to disable Nouveau when
+      it is detected; otherwise, no attempt will be made unless requested.
+
+2012-07-30 version 304.30
+
+    * Added support for xserver ABI 13 (xorg-server 1.13).
+
+    * Added support for RandR per-CRTC gamma manipulation through the
+      RandR 1.2 RRGetCrtcGammaSize, RRGetCrtcGamma, and RRSetCrtcGamma
+      requests.
+
+    * Fixed a bug that caused RRSetOutputPrimary requests to incorrectly
+      generate BadValue errors when setting the primary output to None.  This
+      caused gnome-settings-daemon to crash after changing the screen
+      configuration in response to a display hotplug or the display change
+      hot-key being pressed.
+
+    * Fixed a problem where RENDER Glyphs operations would exhibit severe
+      performance issues in certain cases, such as when used with gradients
+      by Cairo and Chromium.
+
+    * Fixed a bug that caused X to hang when resuming certain DisplayPort
+      display devices (such as Apple brand mini-DisplayPort to dual-link DVI
+      adapters) from power-saving mode.
+
+    * Added support for the following GPU:
+        * Tesla K10
+
+    * Fixed a bug that caused an X screen to be extended to Quadro SDI Output
+      devices by default.  An X screen will still use an SDI Output device if
+      it is the only display device available.  To use a SDI Output device on
+      an X screen with other display devices available, include the SDI Output
+      device with either the "UseDisplayDevice" or "MetaMode" X configuration
+      options.
+
+    * Updated X11 modeline validation such that modes not defined in a
+      display device's EDID are discarded if the EDID 1.3 "GTF Supported"
+      flag is unset or if the EDID 1.4 "Continuous Frequency" flag is
+      unset.  The new "AllowNonEdidModes" token for the ModeValidation
+      X configuration option can be used to disable this new check.
+
+    * Fixed a bug, introduced in the 295.xx release series, with EDID
+      detection on some laptop internal panels.  This bug caused the
+      laptop internal panel to show six small copies of the desktop.
+
+    * Added support for FXAA, Fast Approximate Anti-Aliasing. Using regular
+      anti-aliasing modes or Unified Back Buffers with FXAA is not currently
+      supported.
+
+2012-07-13 version 304.22
+
+    * Added support for the following GPUs:
+        * GeForce GTX 680M
+        * Quadro K1000M
+        * Quadro K2000M
+
+    * Enhanced the functionality of the IncludeImplicitMetaModes X
+      configuration option:
+
+      * Implicit MetaModes will be added for the primary display device,
+        even if multiple display devices are in use when X is initialized.
+
+      * Implicit MetaModes will be added for common resolutions, even
+        if there isn't a mode with that resolution in the mode pool of
+        the display device.
+
+      * Extended the syntax of the IncludeImplicitMetaModes X
+        configuration option, e.g., to control which display device is
+        used for creation of implicit MetaModes.
+
+      See the description of the IncludeImplicitMetaModes X configuration
+      option in the README for details.
+
+    * Modified the handling of the RandR 1.0/1.1 requests RRGetScreenInfo
+      and RRSetScreenConfig (e.g., `xrandr -q --q1` and `xrandr --size ...`
+      and `xrandr --orientation ...`) such that they operate on MetaModes.
+      This was the behavior in NVIDIA X driver versions 295.xx and
+      earlier, but 302.xx releases altered the handling of these RandR
+      1.0/1.1 requests to operate on a single RandR output's modes.
+
+    * With the above changes to IncludeImplicitMetaModes and RandR 1.0/1.1
+      handling, fullscreen applications (e.g., SDL-based applications,
+      Wine), should have more resolutions available to them, and should
+      interact better with multiple monitor configurations.
+
+    * Fixed a bug that could cause G8x, G9x, and GT2xx GPUs to display a black
+      screen or corruption after waking up from suspend.
+
+    * Fixed several bugs that could cause some OpenGL programs to hang
+      when calling fork(3).
+
+    * Fixed an nvidia-settings bug that caused the results of ProbeDisplays
+      queries made with the --display-device-string option to be formatted
+      incorrectly.
+
+    * Improved the responsiveness of updates to the nvidia-settings
+      control panel when displays are hotplugged.
+
+    * Fixed a bug that caused display corruption when setting some
+      transforms, especially when panning a transformed display.
+
+    * Fixed a bug that caused extra RandR events to be generated the first
+      time a display is hotplugged.
+
+    * Fixed a bug that caused X11 modelines with '@' in their names to
+      be rejected.
+
+    * Added support for DisplayPort 1.2 branch devices, which allow multiple
+      displays to be connected to a single DisplayPort connector on a graphics
+      board.
+
+    * Fixed a bug that caused most OpenGL texture uploads to be slow when
+      the context was bound rendering to an RGB overlay drawable.
+
+    * Fixed a bug that caused audio over HDMI to not work after restarting
+      the X server on some MCP7x (IGP) GPUs.
+
+    * Updated the X configuration option "UseDisplayDevice" to honor the
+      value "none" on any GPU.
+
+    * Added support for DKMS in nvidia-installer. Installing the kernel
+      module through DKMS allows the module to be rebuilt automatically
+      when changing to a different Linux kernel. See the README and the
+      nvidia-installer help text for the "--dkms" option.
+
+    * Added RandR output properties _ConnectorLocation, ConnectorNumber,
+      ConnectorType, EDID, _GUID, and SignalFormat.  See the README for details
+      on these properties.
+
+    * Extended support for Base Mosaic to all G80+ SLI configurations with up
+      to three displays.
+
+    * Fixed a bug that caused some monitors to fail to wake from DPMS suspend
+      mode when multiple DisplayPort monitors were attached to one GPU.
+
+    * Removed controls for XVideo attributes from the "X Server XVideo
+      Settings" page of the nvidia-settings control panel. XVideo attributes
+      can be configured in XVideo player applications, or through utilities
+      such as xvattr.
+
+    * Fixed a bug that caused all ports on an XVideo adaptor to share
+      color correction settings.
+
+    * Removed support for the following X configuration options:
+
+         SecondMonitorHorizSync
+         SecondMonitorVertRefresh
+ 
+       Similar control is available through the NVIDIA HorizSync and
+       VertRefresh X configuration options.  Please see the NVIDIA driver
+       README for details.
+
+    * Fixed a bug that prevented NVIDIA 3D Vision Pro from working
+      properly when switching between X servers on different VTs.
+
+======== Release 302 Entries ========
+
+    * Added support for desktop panning when rotation, reflection,
+      or transformation is applied to a display device (either through
+      RandR or through the MetaMode syntax); panning would previously be
+      ignored in that case.
+
+2012-06-15 version 302.17
+
+    * Made nvidiaXineramaInfoOrder consistent with the RRSetOutputPrimary
+      and RRGetOutputPrimary RandR requests: changes to either
+      nvidiaXineramaInfoOrder or RandR OutputPrimary will be reflected in
+      the other.
+
+    * Fixed an interaction problem between RandR 1.2, ConstrainCursor,
+      and panning that prevented panning from working properly.
+
+    * Fixed a bug that caused RandR RRNotify_CrtcChange events to not
+      be generated when switching between MetaModes with the same total
+      size but different layout of display devices.  This bug caused
+      some window managers to not update their layouts in response to
+      switching same-sized MetaModes.
+
+    * Added an "EDID" property to RandR 1.2 outputs.  This property contains the
+      binary contents of the connected monitor's extended display identification
+      data, which allows applications such as the GNOME display properties
+      dialog to query information about it.
+
+    * Fixed a bug that caused audio over HDMI to not work on some GPUs
+      after querying the RandR configuration (e.g., `xrandr -q`).
+
+    * Added the "nvidiaXineramaInfo" X configuration option to report
+      the layout of multiple display devices within an X screen.  This is
+      enabled by default.  When disabled on X servers with RandR 1.2
+      support, the NVIDIA X driver will report one screen-sized region.
+      When disabled on X servers without RandR 1.2 support, no Xinerama
+      information will be reported.  For backwards compatibility, the
+      "NoTwinViewXineramaInfo" option disables nvidiaXineramaInfo.
+
+    * Added the "nvidiaXineramaInfoOrder" X configuration option as
+      a replacement for "TwinViewXineramaInfoOrder".  For backwards
+      compatibility, "TwinViewXineramaInfoOrder" is kept as a synonym for
+      "nvidiaXineramaInfoOrder".
+
+    * Added the "nvidiaXineramaInfoOverride" X configuration option as
+      a replacement for "TwinViewXineramaInfoOverride".  For backwards
+      compatibility, "TwinViewXineramaInfoOverride" is kept as a synonym
+      for "nvidiaXineramaInfoOverride".
+
+    * Fixed a bug that prevented the use of some SLI Mosaic topologies.
+
+    * Added the "MetaModeOrientation" X configuration option as a
+      replacement for "TwinViewOrientation".  "TwinViewOrientation"
+      is kept as a synonym for "MetaModeOrientation", for backwards
+      compatibility.
+
+2012-05-19 version 302.11
+
+    * Added support for calculating the physical size and DPI of each
+      RandR 1.2 Output using the EDID Detailed Timing Description.
+
+    * Fixed a bug that prevented a workaround for the invalid EDID in certain
+      AUO laptop flat panels from being applied, leading to an 800x600 desktop
+      repeated several times across the screen.
+
+    * Fixed a bug that caused the link configuration of DisplayPort devices to
+      be reported incorrectly in nvidia-settings.
+
+2012-05-02 version 302.07
+
+    * Fixed a bug that caused OpenGL programs to leak file descriptors
+      when calling exec() on themselves.
+
+    * Fixed rendering corruption at the start of new X server generation.
+
+    * Added X driver support for RandR 1.2 and RandR 1.3.  See "Support
+      for the X Resize and Rotate Extension" in the README for details.
+
+    * Extended the MetaMode X configuration option syntax with the
+      following new attributes:
+
+        "Rotation"    : specifies the display device's rotation
+        "Reflection"  : specifies the display device's reflection
+        "Transform"   : specifies a 3x3 transformation matrix to be
+                        applied to the display device
+        "ViewPortOut" : specifies the region of the mode in which to
+                        display pixels
+        "ViewPortIn"  : specifies the size of the region in the X screen
+                        to display in the ViewPortOut
+
+      For example, "DFP-0: nvidia-auto-select { Rotation=left }".
+      See "Configuring Multiple Display Devices on One X Screen" in the
+      README for details.
+
+    * Removed the "TwinView" X configuration option; the functionality
+      it provided is now enabled by default.
+
+      Previously, the NVIDIA X driver only enabled one display device
+      for an X screen unless "TwinView" was enabled.  Now, the NVIDIA
+      X driver enables, by default, as many display devices as the
+      GPU supports driving simultaneously.  To limit how many display
+      devices are driven by an X screen, use the "UseDisplayDevice"
+      X configuration option.
+
+    * Added a "CurrentMetaMode" attribute to the nvidia-settings command
+      line, to query and set the current MetaMode.
+
+      As an example, these two commands are equivalent:
+
+        xrandr --output DVI-I-2 --mode 1280x1024 --pos 0x0             --output DVI-I-3 --mode 1920x1200 --pos 1280x0
+
+        nvidia-settings --assign CurrentMetaMode=            "DVI-I-2: 1280x1024 +0+0, DVI-I-3: 1920x1200 +1280+0"
+
+    * Removed overscan compensation configurability from NV-CONTROL and
+      nvidia-settings. This can be configured, with finer granularity,
+      through the ViewPortIn and ViewPortOut MetaMode attributes.
+      See "Configuring Multiple Display Devices on One X Screen" in the
+      README for details.
+
+    * Altered mode validation such that for digital display devices
+      the X driver only allows, by default, modes which are reported in
+      the EDID.  Previously, the NVIDIA X driver allowed other modes,
+      but implicitly scaled those other modes to one of the EDID modes.
+
+      Now, only the modes in the EDID are validated and the X driver
+      does not do any implicit scaling.  Any desired scaling can be
+      configured explicitly through the new "ViewPortIn" and "ViewPortOut"
+      MetaMode attributes.  See "Configuring Multiple Display Devices
+      on One X Screen" in the README for details.
+
+    * Removed Flat Panel Scaling configurability in nvidia-settings.
+      Any desired scaling can be configured through the new "ViewPortIn"
+      and "ViewPortOut" MetaMode attributes.
+
+    * Hotplug events (specifically, the RRNotify_OutputChange RandR
+      event) are now generated when display devices are connected and
+      disconnected from the GPU.  Many desktop environments automatically
+      resize the X desktop in response to these events.
+
+    * Added display device name aliases, such that X configuration options
+      that use display device names can refer to a display device by one of
+      several names, including the RandR Output name for the display
+      device.  The X log reports the list of aliases for each display device.
+
+    * Updated EDID parsing to include more complete support for EDID 1.4
+      and more recent versions of CEA-861.
+
+    * Removed the "Rotate" X configuration option.  This was used to
+      statically rotate the X screen.  Its functionality is replaced by
+      the "Rotation" MetaMode attribute and RandR 1.2 rotation support.
+      See the README for details.
+
+    * Removed the "RandRRotation" X configuration option.  This enabled
+      configurability of X screen rotation via RandR 1.1.  Its functionality
+      is replaced by the "Rotation" MetaMode attribute and RandR 1.2
+      rotation support.  See the README for details.
+
+    * Removed support for the following NV-CONTROL attributes:
+        NV_CTRL_GPU_SCALING
+        NV_CTRL_GPU_SCALING_DEFAULT_TARGET
+        NV_CTRL_GPU_SCALING_DEFAULT_METHOD
+        NV_CTRL_DFP_SCALING_ACTIVE
+        NV_CTRL_GPU_SCALING_ACTIVE
+        NV_CTRL_FRONTEND_RESOLUTION
+        NV_CTRL_BACKEND_RESOLUTION
+        NV_CTRL_OVERSCAN_COMPENSATION
+        NV_CTRL_FLATPANEL_BEST_FIT_RESOLUTION
+
+    * Improved rendering performance for RENDER bitmap text.
+
+    * Enabled the OpenGL "Sync to VBlank" option by default.
+
+    * Added a new option, --restore-original-backup, to nvidia-xconfig.
+      nvidia-xconfig creates a backup of the original X configuration
+      file when modifying an X configuration file that does not appear
+      to have been previously modified by nvidia-xconfig. This option
+      restores a backup of the original X configuration file, if such
+      a backup is found.
+
+    * Expose the following additional FSAA modes via NV-CONTROL,
+      nvidia-settings, and through X visuals and GLXFBConfigs:
+
+        16X multisample FSAA on all GeForce GPUs
+
+        Coverage sample FSAA on G80 and above GeForce GPUs
+
+        32X multisample FSAA on G80 and above Quadro GPUs
+
+        64X multisample FSAA on Fermi and above Quadro GPUs
+
+    * Enabled conformant texture clamping by default in OpenGL.
+
+    * Removed support for the GVO Clone mode NV-CONTROL attributes:
+
+        NV_CTRL_GVO_DISPLAY_X_SCREEN
+        NV_CTRL_GVO_X_SCREEN_PAN_X
+        NV_CTRL_GVO_X_SCREEN_PAN_Y
+
+    * Added a new, higher resolution icon for nvidia-settings.
+
+    * Updated the NVIDIA X driver's handling of X configuration options
+      that affect an entire GPU, not just a particular X screen running
+      on a GPU (e.g., "NoPowerConnectorCheck"): for such X configuration
+      options, the X driver will now honor the option on any of the X
+      screens configured on the GPU.  Prior to this change, the NVIDIA
+      X driver only honored such options on the first X screen configured
+      on a GPU.
+
+    * Added a checkbox to nvidia-settings to control the texture clamping
+      attribute.  When the box is checked, OpenGL textures are clamped
+      according to the OpenGL specification.  When it is unchecked, GL_CLAMP
+      is remapped to GL_CLAMP_TO_EDGE for borderless 2D textures.
+
+    * Removed the "Display" and "X Screen" tabs from the "X Server Display
+      Configuration Page" of nvidia-settings, and added a new "Selection"
+      dropdown menu for selecting X screens or display devices.  This
+      makes it easier to select X screens/Displays that are hidden.
+
+======== Release 295 Entries ========
+
+    * Fixed a bug that caused frequent hangs or crashes on some systems.
+
+2012-08-07 version 295.71
+
+    * Implemented hotfix for a privilege escalation vulnerability reported on
+      August 1, 2012.  For more details, see:
+      http://nvidia.custhelp.com/app/answers/detail/a_id/3140
+
+2012-06-11 version 295.59
+
+    * Disabled the use of certain OpenGL optimizations with Autodesk Maya
+      and Mudbox, due to conflicts between these applications and the
+      optimizations. Some performance loss in Autodesk Maya and Mudbox is
+      possible, as a result.
+
+    * Added support for the following GPUs:
+        * GeForce GT 620M
+        * GeForce GT 640M
+        * GeForce GT 640M LE
+        * GeForce GT 650M
+        * GeForce GTX 660M
+        * GeForce GTX 670M
+        * GeForce GTX 675M
+        * GeForce GTX 555
+        * GeForce GTX 560 SE
+        * GeForce GT 415
+        * GeForce GTX 460 v2
+        * NVS 5400M
+        * NVS 310
+        * Quadro 410
+
+    * Fixed a behavior issue where redundant DPMS state transitions were
+      leading to unexpected screen blanking on DisplayPort displays.
+
+2012-05-16 version 295.53
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 670
+        * GeForce 605
+        * GeForce GT 610
+        * GeForce GT 630
+        * GeForce GT 640
+        * GeForce GT 645
+
+    * Fixed a bug affecting some G-Sync configurations which could cause
+      active stereo content to be inverted on some display devices.
+
+2012-05-03 version 295.49
+
+    * Added support for the following GPU:
+
+        * GeForce GTX 690
+
+    * Fixed a problem where starting, stopping, and moving OpenGL application
+      windows was very slow on Quadro FX 4600, Quadro FX 5600, GeForce 8800
+      GTX, GeForce 8800 GTS, and GeForce 8800 Ultra.
+
+    * Fixed an OpenGL performance regression which affected Geforce 6 and
+      Geforce 7 series integrated GPUs.
+
+2012-04-11 version 295.40
+
+    * Closed a security vulnerability which made it possible for attackers to
+      reconfigure GPUs to gain access to arbitrary system memory. For further
+      details, see: http://nvidia.custhelp.com/app/answers/detail/a_id/3109
+
+    * Fixed a bug that caused DisplayPort devices to occasionally fail to turn
+      back on after the system is resumed from suspend.
+
+    * Added a ModeValidation X configuration option token,
+      "AllowNon3DVisionModes", to allow modes that are not optimized for
+      NVIDIA 3D Vision to be validated on 3D Vision monitors.
+
+    * Added support for the following GPUs:
+
+        * GeForce GT 635M
+        * GeForce 610M
+
+2012-03-22 version 295.33
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 680
+        * GeForce GT 630M
+        * GeForce GT 620
+
+    * Fixed a VDPAU bug where decoding some H.264 streams would cause hardware
+      errors on lower-end products, resulting in corruption and poor
+      performance.
+
+    * Fixed a bug that caused DisplayPort audio to stop working after monitors
+      are hotplugged on GeForce GT 520.
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Fixed a behavior change that prevented ConnectedMonitor from being usable
+      with DisplayPort connectors.
+
+    * Marked the GVO Clone mode NV-CONTROL attributes:
+
+        NV_CTRL_GVO_DISPLAY_X_SCREEN
+        NV_CTRL_GVO_X_SCREEN_PAN_X
+        NV_CTRL_GVO_X_SCREEN_PAN_Y
+
+      as deprecated.  They will be removed in a future release.  To display
+      an X screen over GVO, it is recommended to use GVO with MetaModes,
+      instead.
+
+    * Fixed a bug that caused DisplayPort devices to not be listed in
+      Xorg.*.log.  For example, if only DisplayPort devices are attached, the
+      log file would contain
+
+        (--) NVIDIA(0): Connected display device(s) on NVIDIA GPU at PCI:2:0:0
+        (--) NVIDIA(0):     none
+
+    * Added support for 3D Vision ready displays that have a NVIDIA 3D Vision
+      infrared emitter built inside the panel itself.
+
+    * Fixed a bug that caused OpenGL applications to crash with some libc
+      versions, such as eglibc 2.15.
+
+    * Fixed a bug that caused HDMI audio to stop working on AppleTV devices when
+      an X server was started.
+
+2012-02-13 version 295.20
+
+    * Fixed a bug that caused black areas to appear on the back faces of
+      some models in Maya.
+
+    * Fixed a bug that resulted in the printing of spurious loader error
+      messages.
+
+    * Fixed a bug that could cause X to crash after hotplugging displays.
+
+    * Fixed a bug which caused face selections to be misrendered in
+      Maya when using the paint selection tool.
+
+    * Improved performance for interactive tools in Mudbox.
+
+    * Added a "--no-opengl-files" option to nvidia-installer to allow
+      installation of the driver without OpenGL files that might conflict
+      with already installed OpenGL implementations.
+
+    * Split the DFP configuration page in nvidia-settings into multiple
+      tabs, allowing the controls to be displayed on smaller screens.
+
+2012-01-31 version 295.17
+
+    * Fixed a bug that could cause some OpenGL applications (including
+      desktop environments like KDE and GNOME Shell) to hang.
+
+    * Fixed a bug that prevented the internal panel from working on some
+      laptops with GeForce 7 series GPUs.
+
+2011-12-27 version 295.09
+
+    * Fixed an OpenGL bug where using display lists on Fermi-based GPUs
+      could result in missing rendering in some cases.
+
+    * Fixed an OpenGL bug that caused incorrect rendering when using
+      framebuffer objects to render to 16-bit color textures with
+      alpha.
+
+    * Added support for the following GPU:
+
+        * Tesla X2090
+
+    * Fixed two bugs that caused sporadic application crashes in some multi-
+      threaded OpenGL applications.
+
+    * Fixed a bug that caused creating OpenGL 4.2 contexts
+      with glXCreateContextAttribsARB to fail.
+
+    * Fixed a bug that caused OpenGL to print
+
+        Xlib:  extension "NV-GLX" missing on display ":0".
+
+      when used with a non-NVIDIA implementation of the GLX X extension.
+
+    * Implemented color depth 30 (10 bits per component) support for GeForce 8
+      series and higher GPUs.
+
+    * Implemented support for constraining cursors to the visible regions of
+      connected displays; see the "ConstrainCursor" X Option in the README for
+      details.
+
+======== Release 290 Entries ========
+
+2011-11-21 version 290.10
+
+    * Fixed a bug that would cause OpenGL applications to crash when run
+      with recent releases of glibc such as glibc 2.14.90.
+
+    * Improved the performance of FBO bind operations when using Xinerama by
+      ~30% in some cases.
+
+    * Fixed a bug that could cause stereo corruption when driving a stereo
+      display and a non-stereo display from the same GPU.
+
+    * Fixed a bug that could cause display devices on a secondary GPU to get
+      swapped between X screens when restarting the X server.
+
+    * Fixed a bug that could result in line flickering in full-scene anti-
+      aliasing contexts.
+
+    * Fixed a bug that caused the physical dimensions of rotated monitors to be
+      reported incorrectly.
+
+    * Add support for the pre-VBO DrawArrays command in the server-side GLX
+      driver module.  The NVIDIA client-side GLX implementation never sends
+      this command, but the server needs to support it for compatibility with
+      other GLX client implementations.
+
+    * Fixed a regression that caused blank/white windows when exhausting video
+      memory on GeForce 6 and 7 series GPUs while using composited
+      desktops.
+
+2011-11-04 version 290.06
+
+    * Added support for the following GPU:
+
+        * GeForce GTX 460 SE v2
+
+    * Fixed a bug that would cause applications which export custom allocation
+      functions to our driver (such as Adobe Flash in Firefox or Chrome) to crash.
+
+2011-10-21 version 290.03
+
+    * Fixed a bug that prevented the driver from loading on some systems with
+      integrated graphics.
+
+    * Fixed issues in VDPAU that prevented allocating and displaying extremely
+      large VdpOutputSurfaces.
+
+    * Added support for limiting heap allocations in the OpenGL driver through
+      the use of the __GL_HEAP_ALLOC_LIMIT environment variable.  See the README
+      for further details.
+
+    * Added an "Accel" option to the X driver to allow disabling its use of the
+      graphics processing hardware.  This is useful when other components, such
+      as CUDA, require exclusive use of the GPU's processing cores.
+
+    * Modified how the OpenGL driver allocates executable memory so it may
+      continue to function properly if /tmp is mounted noexec. As some fallback
+      allocation methods may be prohibited under SELinux policy, the driver now
+      supports detection of this policy as well as manual override of this
+      detection via the __GL_SELINUX_BOOLEANS environment variable.
+
+    * Fixed a bug that caused various GLSL built-in uniforms to not
+      be updated properly when calling glPopAttrib.
+
+    * Improved performance by caching compiled OpenGL shaders to disk. Added a
+      "GLShaderDiskCache" option to the X driver to enable/disable this
+      feature. Added the __GL_SHADER_DISK_CACHE and __GL_SHADER_DISK_CACHE_PATH
+      environment variables for further configuration. See the README for
+      further details.
+
+    * Added GLX protocol support (i.e., for GLX
+      indirect rendering) for the following OpenGL extension:
+
+      GL_NV_copy_image
+
+======== Release 285 Entries ========
+
+    * Fixed a bug causing a Linux kernel BUG when retrieving CPU information on
+      some systems.
+
+    * Fixed a bug causing some applications to hang on exit.
+
+    * Fixed a bug causing flickering in some GPU/display combinations.
+
+    * Fixed a bug that could result in poor OpenGL performance after hotplugging
+      a monitor.
+
+    * Added support for the following GPU:
+
+        * GeForce GT 520MX
+
+    * Fixed a bug causing possible text corruption when recovering from GPU
+      errors.
+
+2011-08-17 version 285.03
+
+    * Fixed a bug causing corruption of images which are 2047 pixels wide.
+
+    * Improved performance of the RENDER extension on Fermi-based GPUs.
+
+    * Fixed a bug causing the X server to crash after a VT-switch while running
+      an OpenGL stereo application which is a member of a swap group.
+
+======== Release 280 Entries ========
+
+2011-08-01 version 280.13
+
+    * Fixed a GLX bug that could cause the X server to crash when
+      rendering a display list using GLX indirect rendering.
+
+    * Fixed a GLX bug that could cause a hang in applications that
+      use X server grabs.
+
+    * Fixed an X driver bug that caused 16x8 stipple patterns to
+      be rendered incorrectly.
+
+2011-07-26 version 280.11
+
+    * Fixed a GLX_EXT_texture_from_pixmap bug that caused corruption
+      when texturing from sufficiently small pixmaps and, in particular,
+      corruption in the GNOME Shell Message Tray.
+
+2011-06-29 version 280.04
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 570M
+        * GeForce GTX 580M
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extension:
+
+      GL_EXT_vertex_attrib_64bit 
+
+    * Added GLX protocol support (i.e., for GLX
+      indirect rendering) for the following OpenGL extensions:
+
+      GL_ARB_half_float_pixel
+      GL_EXT_packed_depth_stencil
+
+======== Release 275 Entries ========
+
+    * Added support for the following GPU:
+
+        * NVS 5200M
+
+    * Added support for deleting SDI audio ancillary data packets when a video
+      frame is dropped on a Quadro SDI Output device.  See the
+      NV_CTRL_GVO_AUDIO_BLANKING attribute in NVCtrl.h for details.  This option
+      can be set via the "GvoAudioBlanking" attribute in nvidia-settings.
+
+    * Added support for xserver 1.11.99.901 (also known as 1.12 RC1).
+
+2011-12-14 version 275.43
+
+    * Fixed a bug that would cause Firefox to abort on pages with Flash when
+      layers acceleration was force-enabled on Linux and Solaris.
+
+    * Fixed a bug that caused a crash when glDrawArrays was used with a non-VBO
+      vertex attribute array to draw on a Xinerama screen other than screen 0
+      using an indirect GLX context.
+
+2011-11-04 version 275.36
+
+    * Added support for the following GPU:
+
+        * GeForce 510
+
+    * Fixed a bug that caused trapezoid and triangle rendering to be very slow
+      on older GPUs with xorg-server 1.11.
+
+2011-09-07 version 275.28
+
+    * Added support for xserver ABI 11 (xorg-server 1.11).
+
+    * Fixed a bug that caused the GLSL built-in uniforms gl_FrontMaterial
+      and gl_BackMaterial to not be updated properly when calling
+      glMaterial from a display list.
+
+    * Fixed an error handling bug that caused the OpenGL driver to
+      crash while running certain WebGL applications.
+
+    * Fixed a bug in VDPAU that caused a glibc assertion when a call to
+      VdpDeviceCreateX11 failed in certain ways.
+
+2011-07-15 version 275.21
+
+    * Restored the release splash screen in the NVIDIA X driver (the beta
+      splash screen was accidentally reenabled between 275.09.07 and
+      275.19).
+
+    * Fixed a bug that caused nvidia-settings to crash when configuring
+      multiple X screens after all monitors were unplugged from one of
+      the X screens.
+
+    * Fixed a bug in nvidia-settings that caused the display configuration
+      page to show extra disabled displays after connecting a new monitor.
+
+    * Added X configuration options "3DVisionProHwButtonPairing",
+      "3DVisionProHwSinglePairingTimeout", "3DVisionProHwMultiPairingTimeout",
+      and "3DVisionProHwDoubleClickThreshold" to configure hardware button
+      based pairing in NVIDIA 3D Vision Pro.
+      See "Appendix B. X Config Options" in the README for more information.
+
+    * Fixed a bug that prevented initialization of the NVIDIA 3D Vision or
+      NVIDIA 3D Vision Pro hub if no EDID was present.
+
+2011-07-15 version 275.19
+
+    * Fix memory error and abort reported by glibc when running the application
+      FieldView from Intelligent Light.
+
+    * Fixed an OpenGL driver bug that caused an application crash when running
+      Altair HyperMesh.
+
+    * Fixed a performance problem when switching between stereo and monoscopic
+      rendering in the application Smoke.
+
+    * Fixed poor X driver handling of pixmap out of memory scenarios.
+
+    * Fixed an interrupt handling deficiency that could lead to performance and
+      stability problems when many NVIDIA GPUs shared few IRQs.
+
+    * Added support for the following GPUs:
+
+        * GeForce GT 540M
+
+    * Fixed bugs in the VDPAU presentation queue that could cause GPU errors
+      and hangs when destroying a presentation queue. This happens when
+      exiting applications, and also when toggling to and from full-screen
+      mode in Adobe Flash.
+
+2011-06-14 version 275.09.07
+
+    * Fixed a bug that caused desktop corruption in GNOME 3 after a
+      VT-switch or suspend/resume cycle.
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 560
+        * GeForce GT 545
+        * GeForce GTX 560M
+        * GeForce 410M
+        * GeForce 320M
+        * GeForce 315M
+        * Quadro 5010M
+        * Quadro 3000M
+        * Quadro 4000M
+
+2011-06-05 version 275.09.04
+
+    * Fixed a bug that caused freezes and crashes when resizing windows in
+      KDE 4 with desktop effects enabled using X.Org X server version 1.10
+      or later.
+
+    * Modified the X driver to request that hardware inform the audio driver
+      whenever a display is disabled. This will allow the audio driver to
+      generate the appropriate jack unplug events to applications.
+
+    * Added support for the GL_EXT_x11_sync_object extension.  See the
+      extension specification in the OpenGL registry here:
+
+        http://www.opengl.org/registry/specs/EXT/x11_sync_object.txt
+
+      for more details.
+
+    * Improved performance of window resize operations in KDE 4 on systems
+      with slow CPUs.
+
+2011-05-19 version 275.09
+
+    * Added support for hardware button based pairing to NVIDIA 3D Vision Pro.
+      Single click button on the hub to enter into a pairing mode which pairs
+      one pair of glasses at a time. Double click the same button on the
+      hub to enter into a pairing mode which pairs multiple pairs of glasses
+      at a time.
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extensions:
+
+      GL_NV_framebuffer_multisample_coverage
+      GL_NV_texture_barrier
+
+    * Added GLX protocol support (i.e., for GLX
+      indirect rendering) for the following OpenGL extension:
+
+      GL_NV_register_combiners2
+
+    * Fixed a bug that caused the pop-out and external DVI displays to go blank
+      on Lenovo ThinkPad W701 laptops.
+
+    * Fixed a bug that caused corruption on the menus in OpenOffice.org when the
+      screen is rotated.
+
+    * Improved performance of certain memory allocations.
+
+    * Fixed a bug that caused Java2D widgets to disappear when Java is
+      configured to render using FBOs.
+
+    * Fixed a bug that caused nvidia-settings to crash while saving the X
+      configuration file on some Linux distributions.
+
+    * Added a new X configuration option "BaseMosaic" which can be used to
+      extend a single X screen transparently across all of the available
+      display outputs on each GPU. See "Appendix B. X Config Options" in the
+      README for more information.
+
+======== Release 270 Entries ========
+
+    * Fixed a bug causing incorrect reporting of GPU core and ambient
+      temperatures via NV-CONTROL.
+
+2011-05-19 version 270.41.19
+
+    * Fixed a bug in the VDPAU presentation queue that could cause 1
+      second hangs when transitioning from blit-based display to overlay-
+      based display. This would most commonly happen when disabling a
+      compositing manager.
+
+    * Fixed a bug that could cause crashes when capturing SDI video.
+
+    * Fixed a corner-case in which the OpenGL driver could leak resources
+      in applications utilizing fork().
+
+    * Addressed a Linux kernel interface compatibility problem that could
+      lead to ioremap() errors and, potentially, functional and/or
+      stability problems.
+
+    * Fixed a bug that caused SLI initialization to fail on some Intel
+      based systems.
+
+    * Fixed a bug that caused SLI initialization to fail when using recent
+      Linux kernels, such as 2.6.38.
+
+2011-04-20 version 270.41.06
+
+    * Fixed a bug that caused some GPUs to stop responding when the X Server
+      was started. All GPUs are susceptible, but the failure was primarily
+      seen on GF104 and GF106 boards.
+
+    * Added support for the following GPUs:
+
+        * Tesla M2090
+        * Tesla M2075
+        * Tesla C2075
+        * Quadro 7000
+
+2011-04-18 version 270.41.03
+
+    * Fixed a bug causing the X server to hang every 49.7 days on 32-bit
+      platforms.
+
+    * Added support for the following GPUs:
+
+        * GeForce GT 520
+        * GeForce GT 525M
+        * GeForce GT 520M
+        * GeForce GT 445M
+        * GeForce GT 530
+        * GeForce 405
+        * GeForce GTX 590
+        * GeForce GTX 550 Ti
+        * GeForce GT 420
+        * GeForce GT 440
+        * GeForce GTX 470M
+        * GeForce GTX 485M
+        * GeForce GT 550M
+        * GeForce GT 555M
+        * NVS 4200M
+        * Quadro 1000M
+        * Quadro 2000M
+
+2011-03-02 version 270.30
+
+    * Added support for xserver ABI 10 (xorg-server 1.10).
+
+    * Dropped support for xserver ABI 9 (which was only used with xorg-server
+      1.10 RC2 due to a last-minute xserver change).
+
+2011-02-24 version 270.29
+
+    * Added official support for xorg-server 1.10 [RC2 only, see above].  The
+      -ignoreABI option is no longer required with this version of the server.
+
+2011-02-15 version 270.26
+
+    * Added NV-CONTROL event notification for NV_CTRL_FRAMELOCK_SYNC_READY
+      status changes.
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 560 Ti
+
+    * Added a new X configuration option "Interactive", which defaults to
+      enabled, but can be disabled to allow long-running GPU compute programs
+      to run concurrently with X.
+
+    * Fixed a bug in the VDPAU presentation queue that could cause VDPAU
+      "display preemption" when rendering to tiny or zero-sized windows or
+      pixmaps.
+
+    * Fixed a bug in VDPAU which prevented use of the overlay presentation
+      queue following an application exiting without gracefully destroying its
+      VDPAU presentation queue.
+
+    * Fixed a bug in VDPAU that prevented the overlay from ever being used if
+      a presentation queue was created while the target window was redirected
+      using the Composite extension when the presentation queue was created.
+
+2011-01-21 version 270.18
+
+    * Added preliminary support for xserver 1.10.
+
+    * Reorganized the NVIDIA driver's /proc file system layout to better
+      reflect current needs: /proc/driver/nvidia/cards/0..N has been
+      moved to /proc/driver/nvidia/gpus/0..N/information
+
+    * Added new shared library: libnvidia-ml.so.
+
+      NVML provides programmatic access to static information and monitoring
+      data for NVIDIA GPUs, as well as limited managment capabilities. It is 
+      intended for use with Tesla compute products.
+
+      See web-based documentation and associated nvml.h header for more info.
+
+    * Added a new X configuration option "3DVisionDisplayType" to specify
+      the display type when NVIDIA 3D Vision is enabled with a non
+      3D Vision ready display.
+
+    * Fixed several bugs relating to hardware-accelerated gradients, which were
+      causing visual corruption in some of the default Ubuntu GNOME themes.
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extensions:
+      GL_ARB_shader_subroutine
+      GL_ARB_map_buffer_range                         
+
+    * Added GLX protocol support (i.e., for GLX
+      indirect rendering) for the following OpenGL extensions:
+      GL_NV_half_float
+      GL_NV_occlusion_query                             
+      GL_EXT_blend_equation_separate                  
+      GL_EXT_depth_bounds_test
+
+======== Release 265 Entries ========
+
+    * Modified colormap updates to no longer be synchronized to vblank.  This
+      allows applications to send XStoreColor and XStoreColors requests faster
+      than the screen's refresh rate.
+
+      This behavior can be controlled by a new NV-CONTROL attribute,
+      NV_CONTROL_SYNC_LUT_UPDATES.  By default, LUT updates are not
+      synchronized.  This may cause flickering in some applications that use the
+      colormap to perform animation, such as xpilot running on a depth 8 X
+      screen.  If you experience flickering, try running
+
+          nvidia-settings -a [gpu:0]/SynchronousPaletteUpdates=1
+
+======== Release 260 Entries ========
+    * Updated the NVIDIA X driver to not update mode timings for G-Sync
+      compatibility when NVIDIA 3D Vision or NVIDIA 3D VisionPro is
+      enabled along with a G-Sync device.
+
+    * Added support for the following GPUs:
+
+	* Quadro 2000 D
+	* Quadro 400
+
+2011-01-21 version 260.19.36
+
+    * Updated the NVIDIA kernel module to ensure that all system memory
+      allocated by it for use with GPUs or within user-space components of the
+      NVIDIA driver stack is initialized to zero.  A new NVIDIA kernel module
+      option, InitializeSystemMemoryAllocations, allows administrators to
+      revert to the previous behavior.
+
+    * Fixed a bug that caused X servers version 1.9 and higher to crash when
+      color index overlays were enabled.
+
+    * Fixed a bug that caused pixel value 255 to be treated as transparent in
+      color index overlays.
+
+2010-12-13 version 260.19.29
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 460 SE
+        * GeForce GTX 570
+	* Quadro 5000M
+	* NVS 300
+
+    * Fixed a bug that caused some OpenGL applications to become
+      unresponsive for up to a minute on some GPUs when changing
+      the resolution or refresh rate.
+
+    * Added support for NVIDIA 3D Vision Pro.
+      See the "Stereo" X configuration documentation in the README
+      for further details.
+
+    * Added a new X configuration option "3DVisionProConfigFile"
+      to allow user provide a filename which NVIDIA X driver uses
+      to store 3D Vision Pro configuration settings.
+      See "Appendix B. X Config Options" in the README for
+      more information.
+
+2010-11-11 version 260.19.21
+
+    * Fixed a race condition in OpenGL that could cause crashes with
+      multithreaded applications.
+
+    * Fixed a bug that may cause OpenGL applications which fork to crash.
+
+    * Fixed a bug in VDPAU that caused it to attempt allocation of huge
+      blocks of system memory. This regression was introduced in the
+      260.* driver series.
+
+2010-10-13 version 260.19.12
+
+    * Added support for the following GPUs:
+
+        * GeForce GTS 450
+        * GeForce GTX 460M
+        * GeForce GT 415M
+        * GeForce GT 425M
+        * GeForce GT 420M
+        * GeForce GT 435M
+        * Quadro 2000
+        * Quadro 600
+
+    * Temporarily added back OpenGL header files to the Linux driver
+      package, though these are not installed by default.  To have these
+      OpenGL header files installed, pass "--opengl-headers" to the NVIDIA
+      .run file.  These will be removed from future NVIDIA driver packages
+      once http://www.opengl.org/registry/ provides gl.h and glx.h.
+
+    * Fixed the CustomEDID X configuration option so that it can handle
+      EDID files from Linux procfs; e.g., /proc/acpi/video/IGPU/LCD0/EDID.
+
+2010-09-15 version 260.19.06
+
+    * Fixed an interaction problem with a change in X server behavior that
+      caused slow text rendering on X.Org xserver 1.9.
+
+    * Enhanced VDPAU to support interop with CUDA and OpenGL when Xinerama
+      is active.
+
+    * Fixed a bug in VDPAU that prevented temporal-spatial de-interlacing from
+      operating when temporal de-interlacing was not also enabled.
+
+    * Added support for configuring the dithering depth used when driving
+      a flat panel with a GeForce 8 family or Quadro 4600/5600 or
+      newer GPU.  See the "Dithering Controls" in the Flat Panel page
+      in nvidia-settings.
+
+2010-09-08 version 260.19.04
+
+    * Added support for the nvcuvid API.
+
+      nvcuvid provides a mechanism for decoding video and exposing the
+      surfaces to CUDA, allowing applications to perform custom processing of
+      the video. nvcuvid is primarily targeted at transcoding and video-
+      processing applications. nvcuvid was already available on other
+      platforms.
+
+      By default, nvidia-installer places the nvcuvid library in
+      /usr/lib/libnvcuvid.so, or in the appropriate library path for
+      your system.  The nvcuvid header files can be retrieved from the
+      CUDA toolkit package.
+
+    * Stopped packaging and installing OpenGL, VDPAU, CUDA, and OpenCL
+      header files with the driver.  Those interested in these files can
+      get them from their Linux distributions' packages, where available,
+      or upstream from:
+
+        OpenGL header files (gl.h, glext.h glx.h, glxext.h):
+            http://www.opengl.org/registry/
+
+        VDPAU header files (vdpau.h and vdpau_x11.h):
+            http://freedesktop.org/wiki/Software/VDPAU
+
+        CUDA and OpenCL header files (cuda.h, cudaGL.h, cudaVDPAU.h,
+                cl.h, cl_gl.h, cl_platform.h):
+            http://developer.nvidia.com/object/gpucomputing.html
+
+      Note that while libvdpau.so is still included in 260.xx drivers,
+      it will be removed from a future release series in early 2011.
+      Distributors are encouraged to package libvdpau.so from
+      http://freedesktop.org/wiki/Software/VDPAU
+
+    * Fixed a bug in VDPAU that could cause a "display preemption" when
+      toggling MPlayer to full-screen the first time.
+
+    * Added OpenGL 4.1 support for Quadro Fermi, GeForce GTX 4xx, and
+      later GPUs.
+
+    * Enhanced VDPAU to fully support Xinerama.
+
+    * Fixed a bug in the X driver that prevented operation of Xinerama when
+      using multiple NVIDIA GPUs from different major hardware generations
+      on X with ABI 4 or greater.
+
+    * Fixed a bug in the OpenGL driver's Xinerama support.
+
+      Rendering should have ocurred to all physical X screens driven by an
+      NVIDIA GPU compatible with the NVIDIA GPU driving physical X screen 0.
+      However, if some physical X screen did not satisfy that requirement,
+      then not only would that physical X screen not be rendered to (as
+      expected), but also all physical X screens with a higher number would
+      not be rendered to (which was unexpected).
+
+    * Added GPU "Processor Clock" reporting to the nvidia-settings PowerMizer
+      page.
+
+    * Implemented support for SLI Mosaic Mode on Quadro FX 5800 and
+      Quadro Fermi and newer Quadro GPUs.
+
+    * Enhanced the VDPAU overlay-based presentation queue to allow it to be
+      used when SLI is active, and in some cases when the X composite
+      extension is enabled. See the README for further details.
+
+    * Added support for configuring the dithering mode used when driving
+      a flat panel with a GeForce 8 family or Quadro 4600/5600 or
+      newer GPU.  See the "Dithering Controls" in the Flat Panel page
+      in nvidia-settings.
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extensions:
+      GL_EXT_texture_integer
+      GL_ARB_stencil_two_side
+      GL_EXT_transform_feedback2
+      GL_NV_transform_feedback2
+      GL_NV_conditional_render
+
+    * Added GLX protocol support (i.e., for GLX indirect rendering)
+      for the following OpenGL extensions:
+      GL_NV_point_sprite
+      GL_EXT_stencil_two_side
+      GL_EXT_point_parameters
+      GL_ARB_transpose_matrix
+      GL_EXT_framebuffer_blit
+      GL_EXT_framebuffer_multisample
+
+    * GLX protocol for the following OpenGL extension is promoted
+      from unofficial GLX ptotocol to ARB approved GLX protocol:
+      GL_EXT_geometry_shader4
+      GL_ARB_shader_objects
+      GL_ARB_vertex_shader
+      GL_ARB_fragment_shader
+
+    * Added support for configuring individual displays as any eye in passive
+      stereo mode "4" when using TwinView or SLI Mosaic through extensions to
+      the MetaMode syntax.
+
+    * Added ColorSpace and ColorRange features for HDMI. These give
+      the ability to output YUV over HDMI and select full/reduced
+      color range on RGB over HDMI. ColorSpace and ColorRange
+      are X Configuration options and can be changed dynamically
+      through nvidia-settings.
+
+======== Release 256 Entries ========
+
+    * Fixed a bug that prevented XvMC from initializing in most cases.
+
+    * Added support for xorg-server video driver ABI version 8, which will be
+      included in the upcoming xorg-server-1.9 series of releases.
+
+    * Fixed a bug that caused extremely slow rendering of OpenGL applications
+      on X screens other than screen 0 when using a compositing manager.
+
+    * Fixed a regression introduced after 256.35 that caused stability
+      problems on GPUs such as GeForce GT 240.
+
+    * Fixed a slow kernel virtual address space leak observed when
+      starting and stopping OpenGL, CUDA, or VDPAU applications.
+
+    * Fixed a bug that left the system susceptible to hangs when running
+      two or more VDPAU applications simultaneously.
+
+2010-07-29 version 256.44
+
+    * Added Support for Quadro 4000, Quadro 5000, and Quadro 6000.
+
+    * Updated nvidia-installer to detect the nouveau kernel module and
+      fail with an appropriate error message.
+
+    * Added information to the NVIDIA driver README on how to disable
+      the nouveau driver.
+
+    * Fixed VDPAU to not print a debug error message when calling
+      VdpVideoMixerQueryFeatureSupport with an unsupported or unknown
+      VdpVideoMixerFeature.
+
+    * Removed the requirement that in TwinView passive stereo, MetaModes
+      must have identical viewports on each monitor.
+
+    * Removed the requirement that in active stereo, all monitors must
+      use identical modetimings.
+
+    * Enhanced VDPAU to better report certain kinds of initialization error.
+
+    * Fixed a regression that caused Xv to return BadAlloc errors on AGP
+      systems when using the AGP GART driver contained in the NVIDIA driver.
+      This fixes the problem reported in nvnews.net thread 151199.
+
+2010-06-22 version 256.35
+
+    * Fixed a regression in 256.29 where Performance Level clock
+      frequencies were reported incorrectly in nvidia-settings.
+
+    * Fixed a 3D Vision Stereo bug that caused the stereo glasses to not
+      toggle when the flat panel was not running at its native mode timings.
+
+    * Fixed a bug that caused nvidia-settings to crash when rendering
+      its thermal gauge widget if the range of valid values for the thermal
+      sensor was empty.
+
+2010-05-28 version 256.29
+
+    * Fixed a bug which prevented use of high performance PowerMizer
+      levels on systems with certain ACPI configurations.
+
+    * Fixed a bug that caused non-primary Fermi GPUs to fail to initialize
+      framebuffer memory. This caused a variety of symptoms, up to and
+      including system hangs.
+
+2010-05-21 version 256.25
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extensions:
+
+       GL_ARB_blend_func_extended
+       GL_ARB_draw_buffers_blend
+       GL_ARB_sample_shading
+       GL_ARB_timer_query
+       GL_EXT_draw_buffers2
+       GL_EXT_separate_shader_objects
+       GL_NV_explicit_multisample
+       GL_NV_transform_feedback
+
+    * Improved Thermal Settings reporting in nvidia-settings to
+      accurately reflect hardware configurations with multiple thermal
+      sensors.
+
+    * Fixed an interaction problem between Compiz and
+      'screen-scraping' VNC servers like x11vnc and vino that caused the screen
+      to stop updating.
+      Fixes Launchpad bug #353126.
+
+    * Enhanced VDPAU to add basic support for Xinerama. VDPAU will now
+      operate on a single physical X screen under Xinerama. See the
+      README for more details.
+
+    * Enhanced VDPAU's handling of corrupt clips of all formats on GPUs with
+      VDPAU feature set C to be at least as good as on GPUs with VDPAU
+      feature set B. This significantly improves various clips provided by
+      nvnews.net user eamiller.
+
+    * Fixed a bug in Xv attribute handling that caused hue, saturation,
+      brightness, and contrast values to be misapplied when using an
+      Xv overlay adaptor.
+
+    * Fixed a bug in the XvMC driver that prevented it from working on
+      systems with AGP graphics cards.
+
+    * Enhanced VDPAU to clear all VdpVideoSurfaces to black when allocated.
+      This provides more consistent results when using a surface as a
+      reference when no prior decode operation has written to that surface.
+      In turn, this improves the results of decoding some corrupt streams,
+      such as "p_only_no_play" from ffmpeg bug 1124.
+
+    * Implemented new APIs to allow sharing VDPAU surfaces with OpenGL and
+      CUDA. The OpenGL extension is GL_NV_vdpau_interop. For CUDA, please
+      see the documentation in the CUDA toolkit for details.
+
+    * Worked around a bug where the combination of a GPU with VDPAU feature
+      set A together with specific motherboard chipsets could cause visible
+      corruption when decoding some MPEG-2 streams
+
+    * Fixed a bug that prevented the VDPAU overlay-based presentation queue
+      from being used more than a few hundred times per X server invocation.
+
+    * Renamed the driver file libGLcore.so.VERSION to
+      libnvidia-glcore.so.VERSION, as a small step towards reducing the
+      filename collisions between NVIDIA's and Mesa's OpenGL implementations.
+      This driver file is used by NVIDIA's libGL.so and libglx.so, and
+      should never be used directly by applications.
+
+    * Changed the SONAME of libnvidia-glcore.so.VERSION,
+      libnvidia-tls.so.VERSION, and libnvidia-compiler.so.VERSION to be
+      ".so.VERSION", rather than ".so.1".  These driver files are only used
+      by other NVIDIA driver components, and are only intended to be used
+      by components of the matching NVIDIA driver version.
+
+    * Removed the "-pkg#" suffix from the NVIDIA Linux .run files.
+      The packages are now simply named "NVIDIA-Linux-ARCH-VERSION.run".  On
+      Linux-x86_64, a package which omits the 32-bit compatibility libraries
+      is also available: "NVIDIA-Linux-x86_64-VERSION-no-compat32.run"
+
+    * Simplified the directory structure of the Linux extracted package;
+      most driver files are now just contained within the top level directory
+      of the package.  Pass the '--list' option to the .run file for details.
+
+    * Removed precompiled kernel interfaces from the NVIDIA Linux-x86 .run
+      file; these were ancient and had not been updated in years.  Going
+      forward, NVIDIA does not plan to provide precompiled kernel interfaces
+      with the Linux .run files.  However, nvidia-installer and the .run
+      file will retain the ability for users to add their own precompiled
+      kernel interfaces via the '--add-this-kernel' .run file option.
+
+    * Compressed the nvidia-settings, nvidia-installer, and nvidia-xconfig 
+      tarballs with bzip2, rather than gzip.
+
+======== Release 195 Entries ========
+
+    * Fixed a problem with SLI SFR, AFR, and SLIAA modes with GeForce GTX 480
+      and GeForce GTX 470 and high-resolution display modes.
+
+2010-04-28 version 195.36.24
+
+    * Added support for the following GPUs:
+
+        * GeForce GTX 480
+        * GeForce GTX 470
+        * Tesla C2050
+
+    * Fixed a problem that caused occasional red flashes in XVideo frames.
+
+    * Added official support for xserver 1.8.  The -ignoreABI option
+      is no longer required with this version of the server.
+
+    * Updated the "Supported NVIDIA GPU Products" list to include various
+      supported GPUs that were missing previously.
+
+2010-03-15 version 195.36.15
+
+    * Fixed a regression that caused the driver to fail to properly adjust
+      the GPU fan speed on some GPUs.
+
+    * Fixed a bug that prevented performance level transitions on recent
+      GPUs with SDDR3 and GDDR5 memory.
+
+    * Fixed a bug that caused the X server to crash when rendering
+      occurred while the X server was not on the active VT.
+
+2010-03-03 version 195.36.08
+
+    * Added support for the following GPUs:
+
+        * Quadro FX 880M
+        * GeForce GTS 350M
+        * GeForce GTS 360M
+
+    * Fixed a bug that caused screen corruption after an application
+      released a GLX_NV_present_video device.
+
+    * Fixed an X server crash caused by starting nvidia-settings while X was not
+      on the active VT.
+
+    * Fixed brightness control hotkeys on some laptops.
+
+    * Fixed an nvidia-settings bug that produced many "Bad argument" warning
+      messages when running nvidia-settings --query all.
+
+    * Fixed an installer bug that produced the following message:
+
+        WARNING: Unable to perform the runtime configuration check for library
+        'libGL.so.1' ('/usr/lib/libGL.so.195.36.03'); assuming successful
+        installation.
+
+    * Fixed a bug that caused G-Sync stereo synchronization to fail sometimes
+      when enabling frame lock.
+
+    * Fixed a bug that caused OpenGL applications to occasionally crash with
+      "double free or corruption" messages when exiting.
+
+    * On GPUs with VDPAU feature set A, enhanced VDPAU's handling of some
+      corrupted or incorrectly formatted MPEG-1/2 streams. This solves a
+      reported issue with "0testbad.mpg".
+
+    * Fixed a bug in the VDPAU video mixer that caused chroma aberrations,
+      and corruption in the right-hand few columns of pixels, when post-
+      processing video surfaces with widths not an exact multiple of 4 pixels.
+
+    * Fixed a bug that prevented the GPUFanControlState attribute from
+      being set on the nvidia-settings command line.
+
+2010-02-03 version 195.36.03
+
+    * Fixed a regression that made the "TVStandard" X configuration option
+      cause system hangs with products from the GeForce 6 and 7 series.
+
+    * Worked around a bug in some AUO laptop flat panels where the native mode
+      in the EDID is invalid, leading to a 640x480 desktop repeated six times
+      across the screen.
+
+    * Increased the maximum number of slices supported by VDPAU for MPEG-2
+      streams, in order to cope with the region 1 DVD "A Christmas Story".
+
+    * Added unofficial preliminary support for xorg-server video driver ABI
+      version 7, including xorg-server-1.7.99.2.
+
+    * Fix the soname of libvdpau_nvidia.so.1 and libvdpau_trace.so.1 to
+      match their filenames.
+
+2009-12-22 version 195.30
+
+    * Fixed a performance regression with non-antialiased text in KDE4.
+
+    * Enabled GPU acceleration for many RENDER compositing operations that were
+      previously processed in software, including conjoint and disjoint blending
+      modes and component alpha blending.
+
+    * Added experimental GPU acceleration of the RENDER CompositeTrapezoids
+      operation. This can be enabled at runtime by running:
+
+        nvidia-settings -a AccelerateTrapezoids=1
+
+      This is only supported on the GeForce GTX series or newer products.
+
+    * Fixed a bug in the VDPAU overlay-based presentation queue that caused
+      high CPU usage during "put bits" operations when more than two surfaces
+      were queued.
+
+    * Updated `nvidia-settings --query all` to report all available
+      attributes queryable through all NV-CONTROL target types.
+
+2009-11-23 version 195.22
+
+    * Enhanced the VDPAU blit-based presentation queue to provide values of
+      "first_presentation_time" that have less jitter.
+
+    * Add support for R16F and RG32F GLXFBConfigs when using GeForce 8
+      series and higher GPUs.
+
+    * Added support for NVIDIA 3D Vision Stereo on Linux with Quadro
+      GPUs. See the "Stereo" X configuration documentation in the README
+      for details.
+
+    * Added support for A2BGR10 32-bit GLX visuals on 30-bit X screens.
+      These allow some level of window transparency when using 30-bit
+      visuals with GLX and Composite, but they may cause problems with
+      older X servers and/or applications.  ARGB GLX visuals can be
+      disabled by adding:
+
+        Option "AddARGBGLXVisuals" "False"
+
+      to the X configuration file.
+
+    * Fixed a problem that caused DisplayPort devices to behave incorrectly when
+      DPMS power saving mode was triggered.
+
+    * Updated VDPAU to improve thread concurrency.  See the README for
+      details.
+
+    * Altered NVIDIA X driver behavior in the case that no display
+      devices are connected to the GPU.  Previously, in this case,
+      the NVIDIA X driver would pretend a CRT was connected to the GPU.
+      Now, the NVIDIA X driver will not automatically pretend that
+      any CRTs are connected.  If the X driver does not detect any
+      connected display devices, the X server will fail to start.
+
+      To restore the old behavior, use the ConnectedMonitor X
+      configuration option; e.g.,
+
+        Option "ConnectedMonitor" "CRT"
+
+      Alternatively, if display is not desired, Quadro and Tesla GPU
+      users can enable "NoScanout" mode, which bypasses any mode timing
+      validation or use of display devices; this is configured with:
+
+        Option "UseDisplayDevice" "none"
+
+    * Disabled software cursors when the driver is operating in "no scanout"
+      (UseDisplayDevice "none") mode.  The software cursor image is not visible
+      in remote desktop applications or screenshots anyway, so having software
+      cursor enabled was unnecessary.
+
+    * Changed glXSwapBuffers() behavior for a pixmap such that it is now a no-op
+      in the direct rendering case in order to match the indirect case and
+      comply with the GLX spec. Previously, calling glXSwapBuffers() on pixmaps
+      in the direct case would swap the pixmap's buffers if the pixmap was
+      double buffered.
+
+    * Modified the installation location and names of internal VDPAU libraries
+      to conform to conventions and Debian packaging guidelines. New versions
+      of libvdpau expect this layout. Compatibility with old versions of
+      libvdpau is maintained with symlinks.
+
+    * Fixed a bug that could cause errors in graphical applications run after a
+      previous application using VDPAU and OpenGL. This behaviour was observed
+      when running Gwenole Beauchesne's hwdecode-demos application.
+
+    * Modified vdpau.h to increment VDPAU_VERSION, to reflect the fact that
+      new features have been added in the past. Also, add the new define
+      VDPAU_INTERFACE_VERSION.
+
+    * Fixed a periodic temporary hang in the VDPAU blit-based presentation
+      queue.
+
+    * Fixed a problem that caused resolution limitations or corruption on
+      certain DisplayPort devices such as the Apple 24" Cinema display or some
+      DisplayPort to VGA adapters.
+
+    * Disabled the UseEvents option for GeForce 8 series and higher GPUs due to
+      a problem that causes occasional short hangs.  It will be re-enabled when
+      that bug has been tracked down and fixed.
+
+    * VDPAU now allows multiple streams to be decoded at once, without the
+      need to set any environment variables.
+
+======== Older Releases ========
+
+2009-10-21 version 190.42
+
+    * Fixed a bug in the nvidia-settings disclaimer window for the GPU
+      Clock Frequencies Coolbits page, such that the "Accept" button is
+      selectable when the desktop is so tall that the entire disclaimer
+      can be viewed without scrolling.
+
+    * Fixed a recent regression that caused the Xinerama option to not be set
+      properly in the X configuration file when saving and merging from the
+      nvidia-settings X Server Display Configuration page.
+
+    * Fixed a resource leak in VDPAU's blit-based presentation queue.
+      This bug limited the number of presentation queue objects that could be
+      created and destroyed in a single application instance, and hence could
+      limit the number of streams that could be displayed and/or the number
+      of iterations of "loop" playback.
+
+    * Fixed a power management regression that prevented some notebooks
+      and systems with integrated GeForce 8 and 9 series GPUs from
+      suspending.
+
+    * Fixed a regression that caused TV-OUT controls to be unavailable on
+      some GeForce 6 and 7 series GPUs.
+
+2009-10-16 version 190.40
+
+    * Added support for OpenGL 3.2.
+
+    * Added support for NVIDIA Quadro SDI Capture, part of the Quadro
+      Digital Video Pipeline.
+
+    * Added support for the following GPUs:
+
+        GeForce G102M 
+        GeForce GT 220 
+        GeForce G210 
+        GeForce G210M 
+        GeForce GT 230M 
+        GeForce GT 240M 
+        GeForce GTS 250M 
+        GeForce GTS 260M 
+
+    * Updated the NVIDIA X driver to allow, on GeForce 8 or greater GPUs,
+      more modes to validate on digital display devices whose EDIDs
+      report very constrained HorizSync or VertRefresh ranges.
+
+    * Fixed a randomly occurring X server crash caused by the PixmapCache
+      option.
+
+    * Increased the allowed amount of overscan compensation from 100 to 200.
+
+    * On GPUs with VDPAU feature set B, VDPAU's handling of some corrupted
+      or incorrectly formatted H.264 and MPEG streams has been improved.
+
+    * Fixed a memory allocation problem with pre-GeForce 8
+      GPUs that caused GLX_EXT_texture_from_pixmap clients (e.g., Compiz,
+      KDE 4) to display incorrect contents.
+
+2009-09-24 version 190.36
+
+    * Added support for X.Org xserver 1.6.99.901 (also known as 1.7.0 RC1).
+
+    * Add a new OverscanCompensation NV-CONTROL attribute, available on GeForce
+      8 and higher.  This option specifies the amount of overscan compensation
+      to apply to the current mode.  It is measured in raster pixels, i.e.
+      pixels as specified in the current mode's backend timings.
+
+    * Updated nvidia-installer to detect newer Debian distributions that use
+      /usr/lib32 instead of /emul/ia32-linux as the 32-bit library path.
+
+    * Added GLX support for OpenGL 3.2 context profiles through the extension
+      GLX_ARB_create_context_profile.
+
+2009-09-04 version 190.32
+
+    * Added support for IgnoreEDIDChecksum X configuration option, which can be
+      used to force the X driver to accept the EDID of a display device even
+      when the checksum is invalid. Please see the README IgnoreEDIDChecksum
+      description for a caution and details of use.
+    
+    * Added support for configuring the GPU's fan speed; see the
+      "Coolbits" X configuration option in the README.
+
+    * Fixed a bug in VDPAU that could cause visible corruption near the bottom
+      edge of the picture when decoding VC-1 simple/main profile clips whose
+      heights are not exact multiples of 16 pixels, on GPUs with VDPAU feature
+      set A.
+
+    * On GPUs with VDPAU feature set C, VDPAU now supports decoding MPEG-4
+      Part 2, DivX 4, and DivX 5 video. The VDPAU API has been enhanced to
+      expose this feature.
+
+    * On GPUs with VDPAU feature set C, VDPAU now supports a higher quality
+      video scaling algorithm. The VDPAU API has been enhanced to expose this
+      feature.
+
+2009-08-21 version 190.25
+
+    * Added code to reject screen modes based on available DisplayPort link
+      bandwidth.  Fixes display corruption caused by allowing high bandwidth
+      modes on display devices that can't handle them, such as certain
+      DisplayPort-to-VGA adapters that only support 2 DisplayPort lanes.
+
+    * Fixed an initialization problem on some mobile GPUs.
+
+    * Worked around X.Org X server Bugzilla bug #22804.  This bug
+      allows X clients to send invalid XGetImage requests to the
+      hardware, leading to screen corruption or hangs.  This was most
+      commonly triggered by running JDownloader in KDE 4.
+
+    * Fixed a crash in nvidia-settings displaying GPU information when in Xinerama.
+
+2009-07-23 version 190.18
+
+    * Added GLX protocol support (i.e., for GLX indirect rendering)
+      for the following OpenGL extensions:
+
+        GL_ARB_draw_buffers
+        GL_EXT_Cg_shader
+        GL_EXT_gpu_program_parameters
+        GL_NV_fragment_program
+        GL_NV_gpu_program4
+        GL_NV_register_combiners
+        GL_NV_vertex_program1_1
+        GL_NV_vertex_program2
+
+    * Added unofficial GLX protocol support (i.e., for GLX indirect
+      rendering) for the following OpenGL extensions:
+
+        GL_ARB_geometry_shader4
+        GL_ARB_shader_objects
+        GL_ARB_texture_buffer_object
+        GL_ARB_vertex_buffer_object
+        GL_ARB_vertex_shader
+        GL_EXT_bindable_uniform
+        GL_EXT_compiled_vertex_array
+        GL_EXT_geometry_shader4
+        GL_EXT_gpu_shader4
+        GL_EXT_texture_buffer_object
+        GL_NV_geometry_program4
+        GL_NV_vertex_program
+        GL_NV_parameter_buffer_object
+        GL_NV_vertex_program4
+
+      GLX protocol for GL_EXT_vertex_array was also updated to incorporate
+      rendering using GL_ARB_vertex_buffer_object.
+      Use of these extensions with GLX indirect rendering requires
+      the AllowUnofficialGLXProtocol X configuration option and the
+      __GL_ALLOW_UNOFFICIAL_PROTOCOL environment variable.
+
+    * Fixed glXQueryVersion to report GLX version 1.4.  NVIDIA's GLX
+      version has been 1.4 for several releases, and was already reported
+      as 1.4 in the GLX client and GLX server version strings.
+
+    * Fixed a problem that caused window border corruption when the screen is
+      rotated.
+
+    * Added support for configuring the GPU PowerMizer Mode on
+      GeForce 8 or later GPUs with multiple performance levels via
+      nvidia-settings and NV-CONTROL.
+
+2009-08-21 version 185.18.36
+
+    * Fixed a bug that caused kernel panics when starting X on some
+      mobile GPUs.
+
+    * Fixed an interaction problem between VDPAU and PowerMizer when using
+      VDPAU solely as a display mechanism, and not to decode video streams.
+      The GPU performance level should now be raised, if required, in this
+      scenario.
+
+    * Fixed VDPAU to avoid "display preemption" in some cases where a
+      VdpOutputSurface is deleted while it is still active (either queued or
+      visible) in a VdpPresentationQueue. In particular, this can occur in
+      MPlayer when using the "-fs" option, and could completely prevent
+      VDPAU from operating successfully, depending on the exact timing
+      conditions.
+
+2009-07-31 version 185.18.31
+
+    *  Fixed a crash on certain mobile GPUs.
+
+2009-07-28 version 185.18.29
+
+    * Fixed a bug that could cause occasional memory corruption problems or
+      segmentation faults when running OpenGL applications on Quadro GPUs.
+
+    * Fixed a deadlock in the OpenGL library that could be triggered in certain
+      rare circumstances on Quadro GPUs.
+
+    * Fixed the order of outputs in the GPUScaling nvidia-settings property.
+
+    * Fixed a bug that caused graphics corruption in some OpenGL applications
+      when the Unified Back Buffer is enabled the application window is moved.
+
+    * Fixed a bug that caused glXGetVideoSyncSGI, glXWaitVideoSyncSGI, and
+      glXGetRefreshRateSGI to operate on the wrong screen when there are
+      multiple X screens.
+
+    * Fixed a bug that causes corruption or GPU errors when an application
+      paints a redirected window whose background is set to ParentRelative on
+      X.Org servers older than 1.5.
+
+      This was typically triggered by running Kopete while using Compiz or
+      Beryl.
+
+    * Fixed a bug in VDPAU that could cause visible corruption when decoding
+      H.264 clips with alternating frame/field coded reference pictures, and
+      a video surface is concurrently removed from the DPB, and re-used as
+      the decode target, in a single decode operation. This affected all GPUs
+      supported by VDPAU.
+
+    * Fixed a bug in VDPAU that could cause visible corruption near the bottom
+      edge of the picture when decoding VC-1 advanced profile clips whose
+      heights are not exact multiples of 16 pixels, on G98 and MCP7x (IGP)
+      GPUs.
+
+    * Enhanced VDPAU to better handle corrupt/invalid H.264 bitstreams on
+      G84, G86, G92, G94, G96, or GT200 GPUs. This should prevent most cases
+      of "display preemption" that are caused by bitstream errors.
+
+    * Fixed an X server crash when using the VDPAU overlay-based presentation
+      queue and VT-switching away from the X server.
+
+    * Enhanced VDPAU's detection of the GPU's video decode capabilities.
+
+    * Fixed a bug in VDPAU that could cause ghosting/flashing issues when
+      decoding H.264 clips, in certain full DPB scenarios, on G98 and MCP7x.
+
+    * Fixed VDPAU to detect an attempt to destroy the VdpDevice object when
+      other device-owned objects still exist. VDPAU now triggers "display
+      preemption", and returns an error, when this occurs.
+
+    * Enhanced VDPAU's error handling and resource management in presentation
+      queue creation and operation. This change correctly propagates all
+      errors back to the client application, and avoids some resource leaks.
+
+   Linux specific changes:
+
+    * Added code to forcibly terminate long-running CUDA kernels when
+      Ctrl-C is pressed.
+
+    * Fixed an interaction problem between PowerMizer and CUDA applications that
+      caused the performance level to be reduced while the CUDA kernel is
+      running.
+
+    * Made CUDA compute-exclusive mode persistent across GPU resets.
+
+   FreeBSD specific changes:
+
+    * Fixed an installer problem that prevented Linux ABI compatibility from
+      working with newer versions of FreeBSD.
+
+2009-05-27 version 185.18.14
+
+    * Fixed a Xinerama drawable resource management problem that can cause
+      GLXBadDrawable errors in certain cases, such as when Wine applications are
+      run.
+
+    * Fixed XineramaQueryScreens to return 0 screens instead of 1 screen with
+      the geometry of screen 0 when XineramaIsActive returns false.  This
+      conforms to the Xinerama manual page and fixes an interaction problem with
+      Compiz when there is more than one X screen.
+
+    * Add support for the UseEvents X configuration option on GeForce 8 and
+      higher GPUs.
+
+    * Moved kernel module loading earlier in the X driver's initialization,
+      to facilitate more graceful fallbacks if the kernel module cannot
+      be loaded.  Removed the LoadKernelModule X configuration option.
+
+    * Added support for new horizontal interlaced and checkerboard passive
+      stereo modes.
+
+    * Fixed an OpenGL driver crash while running Bibble 5.
+
+    * Fixed a DisplayPort interaction problem with power management
+      suspend/resume events.
+
+    * Fixed occasional X driver memory management performance problems
+      when a composite manager is running.
+
+    * Fixed a bug with VT-switching or mode-switching while using Compiz;
+      the bug could lead to a corrupted desktop (e.g., a white screen)
+      or in the worst case an X server crash.
+
+    * Fixed a bug that could cause GPU errors in some cases while driving
+      Quadro SDI products.
+
+    * Fixed a several second hang when VT-switching while OpenGL stereo
+      applications were running on pre-G80 Quadro GPUs.
+
+    * Added support for multiple swap group members on G80 and later
+      Quadro GPUs.
+
+    * Fixed the behavior of the NV_CTRL_FRAMELOCK_SYNC_DELAY NV-CONTROL
+      attribute on Quadro G-Sync II.
+    
+    * Fixed a problem with Quadro SDI where transitioning from "clone
+      mode" to "OpenGL mode" would fail.
+
+    * Fixed VDPAU to eliminate some cases of corruption when decoding H.264
+      video containing field-coded reference frames on G84, G86, G92, G94,
+      G96, or GT200 GPUs. Such streams are commonly found in DVB broadcasts.
+
+    * Slightly improved the performance of the VDPAU noise reduction
+      algorithm.
+
+    * Enhanced VDPAU to validate whether overlay usage is supported by the
+      current hardware configuration, and to automatically fall back to the
+      blit-based presentation queue if required.
+
+    * Fixed error checking in VdpVideoMixerRender, to reject calls that
+      specify more layers than the VdpMixer was created with.
+
+    * Modified VDPAU's VDPAU_DEBUG code to emit a complete backtrace on all
+      platforms, not just on 32-bit Linux.
+
+    * Improved interaction between VDPAU and PowerMizer; appropriate
+      performance levels should now be chosen for video playback of all
+      standard resolutions on all supported GPUs.
+
+    * Fixed a bug in VDPAU that sometimes caused "display preemption" when the
+      VdpDecoderCreate function failed.
+
+    * Fixed a potential segfault in the VDPAU trace library, triggered by
+      a multi-threaded application creating a new VdpDevice in one thread,
+      at the same time that another thread detected "display preemption".
+
+  Linux specific changes:
+
+    * Improved compatibility with recent Linux kernels.
+
+  FreeBSD specific changes:
+
+    * Modified VDPAU to dlopen libpthread.so (on all platforms), to avoid
+      conflicts between the current libc and a compat libpthread.
+
+2009-04-06 version 185.19
+
+    * Added support for the following new GPUs:
+
+        Quadro FX 3800
+        Quadro FX 1800
+        Quadro FX 380
+        Quadro FX 580
+        GeForce GTS 250
+        GeForce GT 140
+        GeForce GT 130
+        GeForce 9600 GSO 512
+
+    * Fixed SDI presentation time queries returning unexpected values.
+
+    * Removed the 'AllowDFPStereo' X config file option, which is now enabled by
+      default.
+
+    * Fixed a bug that caused certain programs to hang when multiple threads
+      call functions in libdl at the same time.
+
+    * Fixed a driver crash when OpenGL applications use an extremely large
+      number of textures.
+
+    * Fixed GPU errors triggered by text rendering to PseudoColor windows with
+      the glyph cache enabled.
+
+    * Updated the X driver to allow pixmaps smaller than 32x32 pixels to be
+      placed in video memory.
+
+    * Fixed a problem that prevented the driver from retraining a DisplayPort
+      link after a device was hotplugged.
+
+    * Updated nvidia-bug-report.sh to automatically gzip the resulting log file.
+
+    * Fixed VDPAU to eliminate some cases of GPU hangs when decoding H.264
+      video on G84, G86, G92, G94, G96, or GT200 GPUs, and supplying a DPB
+      missing some reference frames.
+
+    * The VDPAU presentation queue now syncs to VBLANK in the blit
+      path. The environment variable VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE
+      selects which display to sync to when TwinView is enabled;
+      see the README for details.
+
+    * On systems using integrated graphics, VDPAU now uses system RAM
+      instead of video RAM for many purposes. This should prevent "out
+      of resources" problems in most cases, even when the video RAM
+      carve-out is configured as low as 128M.
+
+    * Added support for Quad-Buffered Stereo in the main plane
+      simultaneously with the Color Index Overlay; i.e., both Stereo
+      GLX FBConfigs and Color Index Overlay FBConfigs can be advertised
+      and used at the same time, though no single GLX FBConfig contains
+      both Stereo and Overlay capabilities.
+
+2009-03-12 version 185.13
+
+    * Numerous internal cleanups and improvements to OpenGL. In particular,
+      GLX_EXT_texture_from_pixmap binding performance problems were resolved.
+
+2009-04-21 version 180.51
+
+    * Added support for the following GPUs:
+
+        GeForce 9600 GSO 512
+        GeForce 9400 GT
+        GeForce GTS 250 
+        GeForce GT 130  
+        GeForce GT 140  
+
+    * Fixed stability problems with some GeForce 6200/7200/7300 GPUs
+      on multi-core/SMP systems.
+
+    * Updated nvidia-bug-report.sh to compress its log file; running
+      `nvidia-bug-report.sh` now produces "nvidia-bug-report.log.gz".
+
+    * Addressed a problem that could lead to intermittent hangs
+      and system crashes on some GeForce 9 and later GPUs.
+
+    * Fixed an X server crash when viewing the website www.tim.it.
+
+    * Fixed a DisplayPort interaction problem with power management
+      suspend/resume events.
+
+    * Fixed rendering corruption in the OpenGL 16-bit RGB Workstation
+      Overlay.
+
+    * Fixed a recent VDPAU regression that caused aborted playback
+      and hangs when decoding some H.264 clips on G84, G86, G92, G94,
+      G96, and GT200 GPUs.
+
+    * Fixed an interaction problem that could corrupt the EDID of the
+      Fujitsu Technology Solutions Celsius H270 notebook's internal
+      flatpanel.
+
+    * Fixed occasional X driver memory management performance problems 
+      when a composite manager is running.
+
+    * Fixed a bug that could interfere with the detection of display
+      devices attached to secondary GPUs when first starting X
+      after cold boots.
+
+    * Fixed a problem that could result in temporary stalls when
+      moving OpenGL application windows on GeForce 8 and
+      later GPUs.
+
+    * Fixed a bug that prevented VGA fonts from being saved/restored
+      correctly on GeForce 8 and later GPUs.
+
+  Linux specific changes:
+
+    * Improved compatibility with recent Linux kernels.
+
+    * Reduced CPU usage of nvidia-smi utility for reporting Quadro Plex
+      information.
+
+    * Fixed compatibility problem with LandMark GeoProbe.
+
+  Solaris specific changes:
+
+    * Fixed Solaris installer to not install libnvidia-wfb.so when a wfb
+      library is already present.
+
+    * Fixed an initialization ordering bug that could lead to
+      kernel panics starting X on some integrated GPUs. 
+
+2009-03-30 version 180.44
+
+    * Added support for the following GPUs:
+
+        Quadro FX 3800
+        Quadro FX 3700M
+        Quadro FX 1800
+        Quadro FX 580
+        Quadro FX 380
+        Quadro NVS 295
+        GeForce GT 120
+        GeForce G100
+
+    * Fixed a problem that could cause Xid errors and display corruption
+      in certain cases when OpenGL is used to render to redirected windows,
+      for example when Java2D is used with the -Dsun.java2d.opengl=true
+      option.
+
+    * Updated glGetStringi(GL_EXTENSIONS, i) to no longer return NULL
+      in OpenGL 3.0 preview contexts.
+
+    * Fixed OpenGL crashes while running KDE4's Plasma.
+
+    * Fixed OpenGL crashes when using a large number of texture objects.
+
+    * Fixed the timestamp reporting in the GL_NV_present_video extension
+      on SDI II with Quadro FX 4800 and 5800.
+
+    * Improved power management support on some systems, such
+      as Hewlett-Packard xw4600 workstations.
+
+    * Fixed a problem that caused the screen to flicker momentarily when
+      OpenGL applications exit unexpectedly on GeForce 6 and 7 series GPUs.
+
+    * Fixed an X server crash when an X client attempts to draw trapezoids
+      and RenderAccel is disabled.
+
+    * Improved recovery from certain types of errors.
+
+    * Fixed a bug that caused Autodesk Maya to freeze when overlays
+      are enabled.
+
+    * Fixed an interaction problem between OpenGL and memory tracking
+      libraries such as MicroQuill SmartHeap.
+
+    * Added support for RG renderbuffers in OpenGL 3.0.
+
+    * Added support for OpenGL 3.0 floating-point depth buffers.
+
+    * Fixed a problem that caused Valgrind to crash when tracing a
+      program that uses OpenGL.
+
+    * Updated VDPAU to support VC-1/WMV acceleration on all GPUs supported
+      by VDPAU; see the README for details.
+
+    * Fixed VDPAU corruption on some H.264 clips.
+
+    * Updated VDPAU documentation in the README and in vdpau.h,
+      in particular regarding how to use the deinterlacing algorithms
+      in the VdpVideoMixer object.  Explicitly documented "half rate"
+      deinterlacing, which should allow the advanced algorithms to run
+      on more low-end systems.
+
+    * Implemented a "skip chroma deinterlace" option in VDPAU,
+      which should allow the advanced deinterlacing algorithms to run
+      on more low-end systems. See vdpau.h.
+
+    * Fixed VDPAU VC-1 decoding on 64-bit platforms.
+
+    * Updated the VDPAU wrapper library to print dlerror() messages
+      when driver loading problems occur.
+
+    * Improved VDPAU's handling of some corrupt H.264 streams, and some
+      corrupt/invalid MPEG streams on some GPUs.
+
+    * Fixed VDPAU to correctly handle WMV "range reduction" on
+      some GPUs. A minor backwards-compatible API change was made
+      for this; see vdpau.h's documentation for structure field
+      VdpPictureInfoVC1.rangered.
+
+    * Fixed a problem that caused surfaces to be marked as visible
+      too early when the blit presentation queue is in use.
+
+    * Fixed VDPAU to prevent some cases of "display preemption"
+      in the face of missing H.264 reference frames on some GPUs.
+
+    * Fixed corruption decoding H.264 clips with pictures where
+      pic_order_cnt_type implies log2_max_pic_order_cnt_lsb_minus4 is
+      not used, on G84, G86, G92, G94, G96, GT200 GPUs.
+
+    * Update vdpau.h to document exact requirements for VdpDecoderRender
+      bitstream data content.
+
+    * Fix VDPAU error handling in some unusual low memory situations.
+
+    * Fix hang in VDPAU in some cases of output mode timing changes.
+
+    * Fixed a bug where setting SLI to "auto" in the X configuration
+      file would disable SLI.
+
+2009-02-11 version 180.29
+
+    * Added support for the following GPUs:
+
+        GeForce GTX 295
+        GeForce GTX 285
+        GeForce 9300 GE
+        Quadro NVS 420
+
+    * Added support for OpenGL 3.0 for GeForce 8 series and newer GPUs.
+
+    * Fixed a bug that caused VDPAU to display a green screen when
+      using the overlay-based presentation queue with interlaced
+      modes.
+
+    * Fixed a bug that prevented VDPAU from working correctly
+      after X server restarts on some GPUs.
+
+    * Improved VDPAU's handling of mode switches; eliminated a crash
+      in its mode switch recovery code and a hang in the
+      blit-based presentation queue.
+
+    * Fixed a bug that caused VDPAU to crash when using DisplayPort
+      devices.
+
+    * Fixed a potential hang in VDPAU when using the blit-based
+      presentation queue on systems with multiple GPUs not
+      in SLI mode.
+
+    * Implemented missing error checking of layer data in VDPAU's
+      VdpVideoMixerRender function.
+
+    * Improved VDPAU's handling of setups with multiple GPUs, if
+      a subset of the GPUs cannot be supported due to
+      resource limitations.
+
+    * Improved GPU video memory management coordination between the
+      NVIDIA X driver and VDPAU.
+
+    * Fix potential hang in VDPAU when the overlay is already in use.
+
+    * Improved workstation OpenGL performance.
+
+    * Fixed an X driver acceleration bug that resulted in Xid errors
+      on GeForce 6 and 7 series GPUs.
+
+    * Updated the X driver to consider GPUs it does not recognize
+      supported, allowing it to drive some GPUs it previously
+      ignored.
+
+    * Added the ability to run distribution provided pre- and post-
+      installation hooks to 'nvidia-installer'; please see the
+      'nvidia-installer' manual page for details.
+
+    * Updated the X driver's metamode parser to allow mode names
+      with periods (i.e. '.'s).
+
+    * Fixed a problem in VDPAU that prevented the overlay-based
+      presentation queue from being used on displays connected by component
+      video.
+
+    * Fixed various problems in VDPAU that caused visual corruption when
+      decoding certain MPEG-2 video streams.
+
+    * Fixed a crash in VDPAU caused by certain invalid MPEG-2 streams,
+      in 64-bit drivers for some GPUs.
+
+    * Fixed an X driver performance problem on integrated GPUs.
+
+    * Fixed a stability problem with OpenGL applications using FSAA.
+
+    * Fixed an initialization problem that caused some AGP
+      GPUs to be used in PCI compatibility mode.
+
+    * Fixed a bug that could result in stability problems
+      after changing clock settings via the Coolbits
+      interface.
+
+  Linux specific changes:
+
+    * Fixed a problem with hotkey switching on some recent
+      mobile GPUs.
+
+    * Worked around a power management regression in and improved
+      compatibility with recent Linux 2.6 kernels.
+
+2009-01-08 version 180.22
+
+    * Added support for the following GPUs:
+
+        Quadro FX 2700M
+        GeForce 9400M G
+        GeForce 9400M
+        GeForce 9800 GT
+        GeForce 9800 GT
+        GeForce 8200M G
+        GeForce Go 7700
+        GeForce 9800M GTX
+        GeForce 9800M GT
+        GeForce 9800M GS
+        GeForce 9500 GT
+        GeForce 9700M GT
+        GeForce 9650M GT
+        GeForce 9500 GT
+
+    * Added initial support for PureVideo-like features via the new
+      VDPAU API (see the vdpau.h header file installed with the driver).
+
+    * Added support for CUDA 2.1.
+
+    * Added preliminary support for OpenGL 3.0.
+
+    * Added new OpenGL workstation performance optimizations.
+
+    * Enabled the glyph cache by default and extended its support to 
+      all supported GPUs.
+
+    * Disabled shared memory X pixmaps by default; see
+      the "AllowSHMPixmaps" option.
+
+    * Improved X pixmap placement on GeForce 8 series and later GPUs.
+
+    * Improved stability on some GeForce 8 series and newer GPUs.
+
+    * Fixed a regression that could result in window decoration corruption
+      when running Compiz using Geforce 6 and 7 series GPUs.
+
+    * Fixed an nvidia-settings crash when xorg.conf contains Device
+      and Screen sections but no ServerLayout section.
+
+    * Fixed a problem parsing the monitor sync range X config file
+      options.
+
+    * Fixed a problem with the SDI sync skew controls in
+      nvidia-settings.
+
+    * Fixed a problem that caused some SDI applications to hang or
+      crash.
+
+    * Added support for SDI full-range color.
+
+  Linux specific changes:
+
+    * Improved compatibility with recent Linux kernels.
+
+  FreeBSD specific changes:
+
+    * Fixed a problem that caused the Linux OpenGL library to crash
+      when used inside FreeBSD's Linux emulation layer.
+
+2008-11-12 version 177.82
+
+    * Added support for the following new GPUs:
+        Quadro NVS 450
+        Quadro FX 370 LP
+        Quadro FX 5800
+        Quadro FX 4800
+        Quadro FX 470
+        Quadro CX
+
+    * Fixed a problem on recent mobile GPUs that caused a power management
+      resume from S3 to take 30+ seconds.
+
+    * Fixed an image corruption issue seen in FireFox 3.
+
+  Linux specific changes:
+
+    * Fixed a problem with hotkey switching on some recent mobile GPUs.
+
+2008-10-07 version 177.80
+
+    * Added support for the following new GPUs:
+
+        GeForce GTX 260
+        GeForce GTX 280
+        GeForce 9800 GTX+
+        GeForce 9800 GT
+        GeForce 9700M GTS
+        GeForce 9500 GT
+        GeForce 8100P
+        nForce 780a SLI
+        nForce 750a SLI
+        Quadro FX 770M
+        Quadro NVS 160M
+        Quadro NVS 150M
+
+    * Improved support for RENDER masks, as well as RENDER repeating
+      modes and transformations, for video memory pixmaps.
+
+    * Added accelerated support for RENDER convolution filters for
+      video memory pixmaps on GeForce 8, 9 and GTX GPUs.
+
+    * Improved support for RENDER operations with the same source
+      and destination; this should performance in some
+      situations, e.g. when dragging Plasma applets in KDE4.
+
+    * Improved GPU video memory management coordination between the
+      NVIDIA X driver and OpenGL implementation; this should
+      improve performance with e.g. the KDE4 OpenGL compositing
+      manager.
+
+    * Added an 'AllowSHMPixmaps' X configuration option, which can
+      be used to prevent applications from using shared memory
+      pixmaps; the latter may cause some optimizations in the NVIDIA
+      X driver to be disabled.
+
+    * Fixed a text rendering performance regression that affected
+      GeForce 6 and 7 series GPUs.
+
+    * Fixed a regression that caused the 'Auto' SLI X option
+      setting to not enable SLI.
+
+    * Fixed a bug that caused system hangs when using the NV-CONTROL
+      interface to change GPU clock frequencies.
+
+    * Added support for DisplayPort display devices (including
+      30-bit devices).
+
+    * Resolved various stability problems on GeForce 8, 9 and GTX
+      GPUs, as well as some GeForce 6 and 7 PCI-E GPUs.
+
+    * Fixed a bug that resulted in GPU errors when changing the
+      TwinView display configuration while using Compiz.
+
+    * Further improved the error recovery paths taken in case of GPU
+      command stream corruption.
+
+    * Updated mode validation, in cases when no EDID is detected,
+      such that 1024x768 @ 60Hz and 800x600 @ 60Hz are
+      allowed, rather than just 640x480 @ 60Hz.
+
+    * Removed an old workaround that caused incorrect Xinerama
+      information to be reported after enabling a second
+      TwinView display.
+
+    * Fixed corruption when using SLI in SFR mode with
+      OpenGL-based composite managers.
+
+    * Fixed the subpicture component order reported by the NVIDIA
+      X driver's XvMC implementation.
+
+    * Added a workaround for broken EDIDs provided by some Acer
+      AL1512 monitors.
+
+    * Fixed a bug that caused GLXBadDrawable errors to be generated
+      when running more than one OpenGL application with
+      anti-aliasing enabled on GeForce 6 and 7 GPUs, e.g. wine.
+
+  Linux specific changes:
+
+    * Fixed a problem that could result in IRQs being disabled
+      on some multi-GPU SMP configurations.
+
+    * Worked around cache flushing problems (on some Linux kernels)
+      that caused corruption and stability problems.
+
+    * Added experimental support for PCI-E MSI.
+
+    * Updated the X driver to consider /sys/class/power_supply
+      when determining the AC power state.
+
+    * Fixed a bug that resulted in AGP FW/SBA settings and overrides
+      being applied incorrectly when using the Linux kernel's
+      AGP GART driver.
+
+    * Improved compatibility with recent Linux 2.6 kernels.
+
+  Solaris specific changes:
+
+    * Fixed a bug that caused intermittent kernel panics when stress
+      testing attach/detach paths.
+
+  FreeBSD specific changes:
+
+    * Fixed a bug that caused the kernel module to fail building
+      against some FreeBSD kernels.
+
+    * Fixed a bug that caused the kernel module to fail building
+      with FreeBSD AGPGART support enabled.
+
+    * Resolved an event-handling bug in the X driver responsible for
+      X server crashes upon starting a windowed OpenGL
+      application while using Compiz.
+
+2008-07-30 version 173.14.12
+
+    * Added support for GeForce 8600 GS.
+
+    * Fixed a problem with missing rendering in OpenGL Workstation
+      Overlays.
+
+    * Fixed a problem with running some SDL applications and virtual
+      terminal switching.
+
+    * Fixed a potential crash in nvidia-settings when saving to the X
+      configuration file.
+
+    * Improved error recovery paths in the case of corruption of the
+      commands sent to the GPU.
+
+2008-06-11 version 173.14.09
+
+    * Fixed aliased font rendering corruption on X.Org server 1.5.
+
+    * Fixed a display corruption problem driving two dual-link
+      DFPs with Quadro FX 1700 GPUs.
+
+    * Fixed a regression that prevented the X driver from starting
+      on some GeForce FX, 6 and 7 mobile GPUs.
+
+    * Fixed a locale-interaction issue in the nvidia-settings
+      NV-CONTROL protocol parser.
+
+  Linux specific changes:
+
+    * Added preliminary support for Linux 2.6.26.
+
+  FreeBSD specific changes:
+
+    * Fixed a problem that caused a memory leak when some OpenGL
+      applications are syncing to vblank.
+
+2008-05-28 version 173.14.05
+
+    * Added support for the following new GPUs:
+
+        Quadro FX 3600M
+        GeForce 9800 GX2
+        GeForce 9800 GTX
+        GeForce 9600 GT
+        GeForce 9600 GSO
+        GeForce 9600 GS
+        GeForce 9500M GS
+        GeForce 8400
+        GeForce 8400 GS
+
+    * Added support for Quadro FX 5600/4600 SDI and Quadro
+      G-Sync II.
+
+    * Resolved a bug causing left and right eyes to be reversed
+      in stereo mode on some Quadro FX GPUs.
+
+    * Fixed a problem that caused OpenGL to stop rendering to
+      windows with origins at or beyond 4096 pixels (horizontally)
+      on GeForce 8 and 9 GPUs.
+
+    * Fixed a bug causing some Quadro FX 4500 SDI configurations
+      to take a long time to achieve synchronization.
+
+    * Added preliminary support for X.Org server 1.5.
+
+    * Addressed a problem causing visual corruption when using
+      GeForce 8 GPUs to drive Chi Mei 56" displays.
+
+    * Addressed visual corruption when driving Cintiq 20WSX wide
+      format tables with some GeForce 6 and 7 GPUs.
+
+    * Fixed OpenGL rendering corruption with textures compressed
+      using the DXT5 compression algorithm.
+
+    * Fixed a regression that caused invalid EDIDs to be detected
+      for the internal display device on some notebooks.
+
+    * Improved hotkey switching and power management support on
+      some GeForce 8 notebooks.
+
+    * Fixed a regression causing some GeForce 6100/6150 systems to
+      fail to restore the screen after DPMS cycles.
+
+    * Fixed a bug that prevented the console from being restored
+      correctly in SLI mode on GeForce 6 and 7 GPUs.
+
+    * Fixed interlaced modes on GeForce 8 GPUs.
+
+    * Fixed a problem that caused the synchronization signal
+      polarity to always be positive for DVI devices on
+      GeForce 8 and 9 GPUs.
+
+    * Resolved a problem resulting in X startup to fail on some
+      GeForce 8 and 9 systems without swap space.
+
+    * Fixed a bug resulting in X crashes when using GeForce 8
+      and 9 GPUs in SLI to drive X screens at depth 8.
+
+    * Fixed a problem that caused TV output on secondary TVs to be
+      black and white on some GPUs.
+
+  Linux specific changes:
+
+    * Restored compatibility with recent Linux 2.6 kernels.
+
+  Solaris specific changes:
+
+    * Fixed a bug that could result in kernel panics on SMP systems.
+
+    * Fixed a problem causing multi-threaded JOGL applications to
+      hang on exit.
+
+  FreeBSD specific changes:
+
+    * Resolved a bug that could cause the X driver to crash in
+      various out-of-IPC-resource scenarios; documented common IPC
+      resource related problems in the README.
+
+    * Added initial support for FreeBSD 7.0-RELEASE.
+
+2008-02-26 version 169.12
+
+    * Improved power management support with GeForce 8 GPUs.
+
+    * Further improved stability on some GeForce 8 GPUs.
+
+    * Fixed a bug that broke certain TwinView configurations with
+      TV-OUT on GeForce 8 GPUs.
+
+    * Fixed a bug that could cause OpenGL to crash in certain cases,
+      e.g. when running Counter-Strike under Wine.
+
+    * Further improved GLX_EXT_texture_from_pixmap out-of-memory
+      handling.
+
+    * Fixed a bug that could result in incorrect PowerMizer state
+      being reported.
+
+    * Improved nvidia-xconfig behavior when updating X configuration
+      files without a "Module" section.
+
+    * Worked around a problem that caused function key presses on
+      some Toshiba notebooks to result in system crashes.
+
+  Solaris specific changes:
+
+    * Fixed a bug that caused intermittent kernel panics when stress
+      testing setup/teardown paths.
+
+    * Fixed a problem that could result in X driver crashes when
+      trying to change resolutions with XRandR.
+
+2008-01-21 version 169.09
+
+    * Fixed a problem causing the fan on some GPUs to always run at
+      full speed.
+
+    * Fixed a bug that could lead to X crashes using Paraview's
+      "Save Animation" dialog.
+
+    * Fixed a bug that caused the X driver to crash if the X.Org GLX
+      extension module was loaded instead of NVIDIA's.
+
+    * Improved the X driver's awareness of the current notebook
+      docking status.
+
+    * Fixed brightness control on HP Compaq notebooks.
+
+    * Fixed a bug in the Linux/i2c algorithm driver implementation
+      that prevented core transfer types from succeeding.
+
+2007-12-20 version 169.07
+
+    * Added support for GeForce 8800 GTS 512 and GeForce 8800M.
+
+    * Added CUDA driver to .run file.
+
+    * Fixed several X rendering issues.
+
+    * Fixed problems scrolling ARGB X drawables in Qt.
+
+    * Improved support for interlaced DVI, HDMI, and HDTV modesetting.
+
+2007-11-16 version 169.04
+
+    * Improved glXWaitVideoSyncSGI() latency by using a method asynchronous to
+      graphics commands.  Applications using glXWaitVideoSyncSGI() to
+      synchronize graphics rendering to monitor frame rate will need to
+      call glFinish() before glXWaitVideoSyncSGI().
+
+2007-10-18 version 100.14.19
+
+    * Added support for the GeForce 8800 GT.
+
+    * Improved modesetting support on Quadro/GeForce G8x GPUs.
+
+    * Fixed stability problems with some GeForce 8 GPUs.
+
+    * Fixed stability problems with some GeForce 6200/7200/7300 GPUs
+      on multi-core/SMP systems.
+
+    * Improved hotkey switching support for some Lenovo notebooks.
+
+    * Fixed a problem with Compiz after VT-switching.
+
+    * Improved RENDER performance.
+
+    * Improved interaction with Barco and Chi Mei 56" DFPs, as well
+      as with some Gateway 19" DFPs.
+
+    * Added an interface to monitor PowerMizer state information.
+
+    * Fixed rendering corruption in Maya's Graph Editor.
+
+    * Improved interaction between AFR SLI and swap groups on certain
+      Quadro FX GPUs.
+
+    * Fixed a bug that caused corruption with redirected XV on
+      GPUs without TurboCache support.
+
+    * Improved display device detection on GeForce 8 GPUs.  
+
+    * Improved nvidia-settings usability at lower resolutions like
+      1024x768 and 800x600.
+
+    * Improved GLX visual consolidation when using Xinerama with
+      Quadro/GeForce G8x and older GPUs.
+
+    * Added experimental support for running the X server at Depth 30
+      (10 bits per component) on Quadro G8x and later GPUs.
+
+  Linux specific changes:
+
+    * Worked around a Linux kernel/toolchain bug that caused soft
+      lockup errors when suspending on some Intel systems.
+
+  Solaris specific changes:
+
+    * Fixed a bug that prevented stereo from being enabled properly 
+      on some Quadro FX GPUs.
+
+  FreeBSD specific changes:
+
+    * Fixed a problem that could cause crashes on SMP systems.
+
+2007-09-18 version 100.14.19
+
+    * Added support for new GPUs:
+
+        Quadro NVS 290
+        Quadro FX 370
+        Quadro FX 570
+        Quadro FX 1700
+
+    * Improved GLX_EXT_texture_from_pixmap out-of-memory handling.
+
+    * Fixed a performance regression on GeForce 8 GPUs.
+
+    * Added support for a 'NoScanout' mode to the X driver, useful for
+      high performance computing environments and remote graphics; please
+      see the 'UseDisplayDevice' option description for details.
+
+    * Improved power management support with GeForce 8 and older GPUs.
+
+    * Improved compatibility with recent X.Org X servers.
+
+    * Improved G-Sync support with Quadro FX 4600 and Quadro FX 5600.
+
+    * Added XV brightness and contrast controls to the GeForce 8
+      video texture adapter implementation.
+
+    * Further improved interaction with ATi RS480/482 based mainboards.
+
+    * Fixed stability problems with some GeForce 8 GPUs.
+
+    * Fixed XvMC support on GeForce 7050 PV / NVIDIA nForce 630a GPUs
+      with PureVideo support.
+
+    * Added support for bridgeless SLI with GeForce 8 GPUs.
+
+    * Fixed rotation support on some GeForce 8 GPUs.
+
+    * Fixed a problem causing X to render incorrectly after VT switches
+      with composited desktops.
+
+    * Fixed a RENDER acceleration bug that was causing 2D rendering
+      corruption in Eclipse with GeForce 8 GPUs.
+
+    * Improved VGA console restoration with DFPs and TVs.
+
+    * Fixed a bug that resulted in the generation of incorrect EDIDs
+      on some notebooks.
+
+    * Fixed flickering corruption with SLIAA on GeForce 8 GPUs.
+
+  Linux specific changes:
+
+    * Improved compatibility with recent Linux 2.6 kernels.
+
+    * Fixed a compatibility problem with some Linux 2.4 kernels.
+
+    * Improved hotkey switching support.
+
+    * Fixed an 'nvidia-installer' bug that was causing the installer
+      to treat some of its temporary files as conflicting.
+
+    * Fixed several problems causing crashes if /dev is mounted
+      with the 'noexec' option.
+
+    * Reduced kernel virtual memory usage with some GeForce 8 GPUs.
+
+  FreeBSD specific changes:
+
+    * Fixed installation problems on systems with modular X.Org
+      X servers.
+
+    * Fixed X driver event delivery problems interfering with event
+      driven features like DamageEvents.
+
+  Solaris specific changes:
+
+    * Fixed a bug that occasionally caused crashes at kernel module
+      unload time.
+
+2007-06-21 version 100.14.11
+
+    * Added support for new GPUs:
+
+        GeForce 7050 PV / NVIDIA nForce 630a
+        GeForce 7025 / NVIDIA nForce 630a
+
+    * Fixed console restore problems in several different configurations:
+
+        Quadro FX 4400 SLI
+        VESA console
+        Notebook LCD displays
+
+    * Improved interaction with ATi RS480/482 based mainboards.
+
+    * Improved support for House Sync with G-Sync II.
+
+    * Improved NVIDIA X driver interaction with ACPI daemon.
+
+2007-06-08 version 100.14.09
+
+    * Added support for new GPUs:
+
+        GeForce 8600 GTS
+        GeForce 8600 GT
+        GeForce 8600M GT
+        GeForce 8600M GS
+        GeForce 8500 GT
+        GeForce 8400 GS
+        GeForce 8400M GT
+        GeForce 8400M GS
+        GeForce 8400M G
+        GeForce 8300 GS
+        Quadro FX 1600M
+        Quadro FX 570M
+        Quadro FX 360M
+        Quadro NVS 320M
+        Quadro NVS 140M
+        Quadro NVS 135M
+        Quadro NVS 130M
+
+    * Added support for G-Sync with Quadro FX 4600 and Quadro FX 5600.
+
+    * Improved Notebook support. 
+
+    * Improved RenderAccel support for subpixel antialiased fonts.
+
+    * Added XV brightness and contrast controls for GeForce 8 GPUs.
+
+    * Improved interaction with newer Linux kernels.
+
+    * Fixed a locale-interaction issue in the nvidia-settings
+      configuration file parser.
+
+2007-03-07 version 1.0-9755
+
+    * Added support for Quadro FX 4600 and Quadro FX 5600.
+
+    * Added support for SLI with GeForce 8800, Quadro FX 4600,
+      and Quadro FX 5600.
+
+2006-12-21 version 1.0-9746
+
+    * Added support for GeForce 8800 GTX and GeForce 8800 GTS GPUs.
+
+2006-12-04 version 1.0-9631
+
+    * Fixed an OpenGL crash on some GeForce 3 and GeForce 4 GPUs.
+
+    * Fixed an X server crash starting some fullscreen OpenGL games.
+
+    * Improved interaction with newer Linux kernels.
+
+2006-11-07 version 1.0-9629
+
+    * Added initial support for GLX_EXT_texture_from_pixmap.
+
+    * Added new "Display Configuration" page in nvidia-settings.
+
+    * Improved workstation OpenGL performance in Xinerama.
+
+    * Added support for NVIDIA Quadro Plex.
+
+    * Added support for Quad SLI.
+
+    * Improved X driver error recovery.
+
+    * Improved workstation overlay performance.
+
+    * Added SMBus functionality to the Linux/i2c interface.
+
+    * Fixed DFP scaling support.
+
+    * Added support for OpenGL 2.1.
+
+    * Added new "TwinViewXineramaInfoOrder" X configuration option to
+      control the order of display devices when in TwinView.
+
+    * Fixed some problems related to TV Out.
+
+    * Added new NVIDIA logo artwork to nvidia-settings and X driver
+      splashscreen; the X driver splashscreen can now be configured
+      with the new "LogoPath" X configuration option.
+
+2006-10-19 version 1.0-8776
+
+    * Fixed Security Advisory R7-0025.
+
+2006-08-24 version 1.0-8774
+
+    * Added support for X.Org 7.1.
+
+    * Added support for XVideo with the Composite X extension when
+      using X.Org 7.1.
+
+    * Improved interaction with newer Linux kernels.
+
+2006-05-22 version 1.0-8762
+
+    * Added support for new GPUs, such as QuadroFX 4500 X2, Quadro FX
+      5500, Quadro FX 3500, and Quadro FX 1500.
+
+    * Improved Quadro FX 3450/4000 SDI support.
+
+    * Fixed video memory reporting with GeForce 6200 Turbo Cache.
+
+    * Fixed a problem with Overlay support when in TwinView.
+
+    * Fixed problems starting X with SLI Frame Rendering on nForce 4
+      SLI Intel Edition.
+
+    * Fixed multiple issues with combinations of Stereo, SLI,
+      FrameRendering and G-Sync.
+
+    * Fixed several issues with mode selection for CRTs and DFPs.
+
+    * Fixed a corruption problem with Rotation and large desktops on
+      older GPUs, including GeForce4 MX.
+
+    * Fixed a system crash starting X with TwinView on certain GPUs.
+
+    * Addressed an NV-CONTROL compatibility issue; please see the Known
+      Issues section of the README for details.
+
+2006-04-07 version 1.0-8756
+
+    * Added support for GeForce 7300, GeForce 7400, GeForce 7600 and
+      GeForce 7900.
+
+    * Added support for running OpenGL applications while the
+      Composite X extension is enabled; see "The X Composite Extension"
+      appendix for details.
+
+    * Enabled hardware acceleration of the Render X extension by default.
+
+    * Added "AddARGBGLXVisuals" X configuration option, so that OpenGL
+      applications can render to X Windows' alpha channel.
+
+    * Added Linux/i2c support to the NVIDIA kernel module; see the "i2c
+      Bus Support" appendix for details.
+
+    * Improved power management support with Linux >= 2.6.14 and
+      added support for suspend-to-disk.
+
+    * Added new "nvidia-auto-select" mode entry for use in the X
+      configuration file; see description in the "Programming Modes"
+      appendix.
+
+    * Added support for GLX 1.4.
+
+    * Added ability for OpenGL applications to span greater than
+      4096 pixels when in Xinerama.
+
+    * Improved G-Sync support.
+
+    * Fixed interlaced modes on CRTs.
+
+    * Improved compatibility with the latest Linux 2.6 kernels.
+
+2005-12-22 version 1.0-8178
+
+    * Fixed a problem where certain precompiled kernel interfaces were
+      not recognized.
+
+    * Improved stability with the Composite X extension.
+
+    * Fixed a corruption bug with RenderAccel and the Composite X
+      extension when using wide desktops.
+
+    * Fixed a problem validating HDTV modes on GeForce 6200.
+
+    * Fixed detection of certain older TV encoders.
+
+    * Fixed installation problems with Linux kernel source trees
+      using separate KBUILD output directories.
+
+    * Fixed installation problems on newer Debian systems.
+
+2005-12-05 version 1.0-8174
+
+    * Added support for SLI FrameRendering.  Please see the README
+      for details.
+
+    * Added support for new GPUs such as the GeForce 6100 and GeForce 6150.
+
+    * Added a new utility 'nvidia-xconfig', which is a commandline
+      tool for updating X configuration files.
+
+    * Added manpages for 'nvidia-xconfig', 'nvidia-settings', and
+      'nvidia-installer'.
+
+    * Improved workstation OpenGL performance on Solaris.
+
+    * Made UseEdidFreqs "on" by default; the NVIDIA X driver will
+      use the valid HorizSync and VertRefresh frequency ranges from the
+      EDID whenever possible.
+
+    * Added support for Stereo Digital Flat Panels such as the SeeReal
+      and Sharp3D DFPs.
+
+    * Added HTML version of the README.
+
+    * Added support for static Rotation; see the "Rotate" X config option
+      in the README.
+
+    * Improved stability on 64-bit Linux 2.6 kernels.
+
+    * Fixed driver installation when SELinux is enabled.
+
+2005-08-02 version 1.0-7676
+
+    * Improved GeForce 7800 GTX performance.
+
+2005-06-22 version 1.0-7667
+
+    * Added support for GeForce 7800 GTX.
+
+    * Fixed problem with certain flatpanels running at 1600x1200.
+
+    * Fixed an unresolved symbol issue in libXvMCNVIDIA.so.
+
+    * Fixed an unresolved reference to the symbol "gnu_dev_makedev".
+
+    * Worked around a bug in Java2D that was exposed in 1.0-7664.
+
+    * Improved support for Quadro FX 4000 SDI.
+
+2005-06-01 version 1.0-7664
+
+    * Install NVIDIA OpenGL headers by default.
+
+    * Fixed performance problem when using AGPGART.
+
+    * Fixed support for GeForce2 Integrated GPUs.
+
+    * Fixed a workstation graphics stability problem.
+
+    * Improved XRandR rotation support.
+
+    * Fixed installation problems on some Linux 2.6 kernels.
+
+2005-03-11 version 1.0-7167
+
+    * Improved OpenGL workstation performance.
+
+    * Added support for XRandR rotation; see Appendix W in the text README.
+
+    * Added ExactModeTimingsDVI X config option to give explicit control
+      over the mode timings used on FlatPanels.
+
+    * Added X.Org dlloader support.
+
+    * Changed driver behavior such that PAT (Page Attribute Table)
+      is used where possible instead of MTRRs.
+
+    * Added a workaround for an X server bug with PCI-E GeForce 6800
+      and GeForce 6600; a fix has been provided to XFree86 and X.Org.
+
+    * Fixed stability problems on x86_64 PCI-E systems.
+
+    * Documented change_page_attr problems with x86_64 2.6 kernels;
+      please see the known issue "The X86-64 platform (AMD64/EM64T)
+      and 2.6 kernels" in the text README here:
+
+        /usr/share/doc/NVIDIA_GLX-1.0/README
+
+    * Fixed 2D rendering corruption on certain older GPUs.
+
+    * Improved compatibility with Linux 2.6 kernels.
+
+    * Fixed compatibility problems with some SWIOTLB em64t systems.
+
+    * Fixed a bug that triggered error messages of the form:
+
+        "ioctl32(doom.x86:6747): Unknown cmd fd(16) cmd(c0384642){00}
+            arg(ffffc75c) on /dev/nvidiactl"
+
+    * Fixed NvAGP incompatibility with recent Linux 2.6 kernels.
+
+    * Improved interaction with the udev filesystem.
+
+    * Improved performance of PCI cards on Linux 2.6 systems.
+
+    * Support for TurboCache GPUs.
+
+2004-11-5 version 1.0-6629
+
+    * Added support for GeForce 6600 and GeForce 6600 GT.
+
+    * Added support for Quadro FX 4000 SDI
+
+    * Added support for 512 MB framebuffers.
+
+    * Improved support for GLSL (OpenGL Shading Language).
+
+    * Improved performance for VBO (OpenGL Vertex Buffer Objects).
+
+    * Improved support for Linux 2.6 kernels.
+
+    * Improved support for PCI Express.
+
+    * Reduced virtual address space consumption in OpenGL applications.
+
+    * Updated documentation.  Please see the file
+
+        /usr/share/doc/NVIDIA_GLX-1.0/README
+
+      There are new known issues on EM64T and multithreaded
+      application stability as well as new appendices:
+
+        (app-s)  APPENDIX S: POWER MANAGEMENT SUPPORT
+        (app-t)  APPENDIX T: DISPLAY DEVICE NAMES
+        (app-u)  APPENDIX U: THE COMPOSITE X EXTENSION
+
+    * Improved support for EM64T Linux/x86-64 systems
+
+    * Improved support for RenderAccell
+
+    * Improved performance for Java2D.
+
+2004-8-5 version 1.0-6111
+
+  * Fixed SoftImage certification issues.
+
+    * Made the the "Do you really want to quit?" dialog in nvidia-settings
+      optional (via the nvidia-settings Configuration page).
+
+    * Fixed problem that prevented multiple simultaneous X servers
+      from running on TNT/TNT2.
+
+    * Fixed problem that caused TV-Out modes other than 640x480 and
+      800x600 to be unavailable.
+
+    * Fixed problem that caused cursor misplacement/corruption in
+      certain TwinView configurations.
+
+    * Fixed problem that caused some AGP kernel module options to
+      be ignored.
+
+    * Fixed problem in GLSL with shadow2DProj.
+
+    * Fixed console restore problems on GeForce4 Ti.
+
+2004-6-30 version 1.0-6106
+
+    * Added support for GLSL (OpenGL Shading Language).
+
+    * Added support for GL_EXT_pixel_buffer_object.
+
+    * Added support for 4kstack kernels.
+
+    * Added configuration utility "nvidia-settings"; see the user guide
+      installed here:
+
+        /usr/share/doc/NVIDIA_GLX-1.0/nvidia-settings-user-guide.txt
+
+      for details.
+
+    * Added support for running 32bit OpenGL applications on 64bit AMD64
+      Linux installations.
+
+    * Fixed problem that prevented 32bit kernel driver from running on
+      certain AMD64 CPUs.
+
+    * Added a new Xv adaptor on GeForce4 and GeForceFX which uses the 
+      3D engine to do Xv PutImage requests.  This allows XvMC to operate
+      when the video overlay is not available (such as in TwinView).
+      XvMC still uses the overlay by default, when available.  A new
+      XF86Config option "XvmcUsesTextures" has been added to force
+      usage of the 3D engine for XvMCPutSurface even when overlays are 
+      available.
+
+    * Added a shell script "nvidia-bug-report.sh" that gathers
+      system configuration information into a log file; the resulting
+      log file (nvidia-bug-report.log) should be included when reporting
+      bugs to NVIDIA.
+
+2004-1-26 version 1.0-5336
+
+    * Added support for Linux 2.6 kernels.
+
+    * Fixed a problem that caused kernels oops, black screens, and agp
+      failures on some VIA motherboards.
+
+    * Fixed a typo in the NVIDIA-provided libGL.la.
+
+    * Fixed a problem that prevented X from running on Samsung X10 laptops.
+
+    * Deprecated the "--kernel-include-path" .run commandline option,
+      in favor of "--kernel-source-path".
+
+2003-12-22 version 1.0-5328
+
+    * Added support for UBB and FSAA Stereo.
+
+    * Improved GLXPixamp support.
+
+    * Added support for Red Hat Advanced Workstation 3.0.
+
+    * Added support for GLX_SGI_swap_control.
+
+    * Added an OS ABI ELF Note to the OpenGL libraries.
+
+    * Fix a problem where the video overlay would sometimes stop working 
+      when displaying HDTV resolutions.
+
+    * For graphics cards that require a power connector but do not have
+      a connector plugged in, fail X screen initialization, rather than
+      just print a warning message.
+
+    * Reduced CPU usage when OpenGL applications are syncing to vblank.
+
+2003-7-28 version 1.0-4496
+
+    * Improved OpenGL performance when rendering to multiple
+      buffers (such as when using a stereo visual and rendering to
+      GL_LEFT_AND_RIGHT).
+
+    * Initial support for APM power management.
+
+    * Fixed some RENDER related corruption reported with GTK+ 2.2.2.
+
+    * Added support for Active Stereo + TwinView.
+
+    * Fixed a hang on GeForce2 that occurred when using RENDER extension
+      acceleration on some apps such as OpenOffice.
+
+2003-4-24 version 1.0-4363
+
+    * Fixed a problem that prevented running multiple X servers on 
+      different virtual terminals.
+
+    * Improved IDCT level acceleration in XvMC.
+
+    * Fixed a 2D performance slowdown experienced by many people.
+
+2002-12-11 version 1.0-4191
+
+    * Added support for FSAA with UBB.
+
+    * Support for OpenGL 1.4
+
+    * Finished GLX 1.3 support
+
+    * Support for AGP 3.0
+
+    * Improved support for NForce2
+
+    * Added support for NV30 and NV30 extensions.
+
+    * Fixed bug where there was corruption at the borders of a pbuffer
+
+    * More complete acceleration for the XRENDER extension.  Due to the
+      experimental nature, RENDER acceleration is now disabled by default
+      (Option "RenderAccel" enables it).
+
+    * The driver no longer uses the XFree86 Acceleration Architecture (XAA),
+      but provides its own 2D acceleration architecture to better accomodate
+      the needs of simultaneous 3D and 2D rendering.
+
+    * Added color index overlay emulation on Quadro4.
+
+    * Added support for separate X screens on a single GPU (supported
+      by all GPUs that support TwinView).
+
+2002-9-10 version 1.0-3123
+
+    * Added support for NV18, NV28 and nForce 2.
+
+    * Added Quadbuffered workstation stereo visuals for Quadro2, 4 and
+      Quadro DCC.
+
+    * Improved Viewperf numbers.
+
+    * Added support for up to 16 monitors.
+
+    * Added support for T221 panel.
+
+    * Added support for RGB OpenGL overlays in TwinView on NV25/28.
+
+    * Added support for hardware clip ids on Quadro4 parts.  Option "UseClipIDs"
+      enables them.
+
+2002-5-23 version 1.0-2960
+
+    * Fixed problem with loading the GLX extension in multi-head
+      environments with non-NVIDIA video cards.
+
+    * Significant performance improvements in Viewperf on Quadro parts.
+
+    * Added option "NoRenderExtension" to disable the RENDER extension.
+      This is useful in 8bpp where the RENDER extension will preallocate
+      a large portion of the default colormap and break many legacy 
+      applications.
+
+    * Fixed a regression where I420 XvImages had the chroma planes swapped.
+
+    * Fixed some problems with moving overlay windows.
+
+    * Added a dynamic XvMC library "libXvMCNVIDIA_dynamic.so" so that 
+      applications can dynamically load the vendor-specific core XvMC
+      support.
+
+    * Added XvMC motion-compensation acceleration for NV25 and fixed
+      some bugs in the NV17 XvMC support.
+
+    * Fixed some problems with FSAA modes failing.
+
+2002-4-3 version 1.0-2880
+
+    * Fixed rendering problems which occurred in some cases when 
+      GL_SYNC_TO_VBLANK was enabled.
+
+    * Fixed problem where the maximum pixel clock was set too low.
+      
+    * Fixed a problem with image flicker when running full-screen apps
+      on GeForce4.
+  
+    * Fixed a pixmap cache corruption problem on GeForce3.
+
+    * Fixed some issues running multiple NVIDIA graphics cards simultaneously.
+
+2002-3-7 version 1.0-2802
+
+    * Support for anisotropic filtering.
+
+    * Provide libXvMCNVIDIA.a which is an implementation of XvMC 1.0.
+      This allows mpeg acceleration on NV17 chips and NV17 chips only.
+
+    * RGB Workstation overlays for Quadro4.  These are double buffered,
+      Z-buffered 16 bit visuals.  The transparency key is 0x0000 hex.
+
+    * NV17 and NV25 support.
+
+    * Added an 8:8:8:8 XRGB XvImage format to the video blitter.
+
+    * Config file option for Digital Vibrance Control.
+     
+    * Added new XF86Config option "FlatPanelProperties" to control dithering 
+      and scaling when X is started.
+
+    * Added support for SoftEDID's. When enabled the driver will generate 
+      an EDID based on the video bios isntead of doing a table lookup.
+
+    * Improved Crush support
+
+    * Fixed problem with using SGIX_fbconfig and SGIX_pbuffer with 
+      indirect rendering (protocol was incorrect)
+
+    * Fixed problem where the driver would fail on systems with >= 1GB 
+      of memory and a kernel configured to use all the memory.
+
+2001-11-26 version 1.0-2313
+
+    * Got Crush working.
+
+    * OpenGL 1.3 support.
+
+    * Added SGIX_pbuffer and SGIX_fbconfig extensions.
+
+    * Added UBB support, pageflipping and window flipping (described in
+      README).
+
+    * Improved Viewperf performance, Quake performance and performance
+      of immediate mode applications.
+
+    * Improved stability on AMD platforms.
+
+    * Fixed TwinView problem that caused garbage to appear on the screen
+      when starting X with a null option on head 0.
+
+    * Added workaround for XAA bug that causes system to hang when Lisa
+      Screensaver is run.  The problem is worked around by adding the
+      following line in the "Device" section of the XF86Config file:
+      'Option "XaaNoSolidFillTrap"'.  This option prevents XAA from
+      breaking wide lines (and polyggons) into trapezoids and avoids an
+      XAA clipping bug.
+      
+    * Fixed a system hang that occured on some chipsets when taking the
+      X server down (after having run once successfully) and restarting
+      it while using the DVI-I connected toa flat panel.
+
+    * Fixed problem where the performer application Perfly would hang
+      when run in forked-draw mode.
+
+    * Fixed problem where the X driver would segfault when given an
+      invalid MetaMode.
+
+    * Fixed problem where the console was not restored properly after
+      entering X and returning to the console.
+
+    * Fixed problem where X did not redraw completely after a screen
+      blank on GForce 2 Go and Quadro 2 Go.
+
+    * Fixed problem with initializing secondary card. In most cases, the
+      secondary card is posted correctly.  In the cases where it isn't,
+      there is now a workaround to initialize the card via X.
+
+    * Added workarounds to enable AGP on ALI chipsets and enable 4X AGP
+      on VIA chipsets (See README and use with caution!).
+
+2001-08-20 version 1.0-1541
+
+    * Changed behaviour of the X server so the NVIDIA splash screen will
+      only show up on the first run of X.  This can also be disabled by
+      setting an option in XF86Config (see README).
+
+    * Fixed problem where OpenGL applications would sometimes leave
+      portions of their rendering behind when the window was closed
+      using the kill button on the window banner.
+
+    * Fixed problem on mobile where X would respond to the wrong hotkey
+      event under some conditions.
+
+    * Fixed several more problems with indirect rendering.
+
+    * Fixed problem on SMP machines which occured when VT switching
+      while running gloss and gears indirect.
+
+    * Fixed problem where /proc/nv/card0 did not report nv20 correctly.
+
+    * Fixed problem on TNT2, where the driver would only support up to 4
+      threads per process.
+
+    * Fixed Xserver crash that occured when running two Xservers with
+      AGPgart.
+
+    * Fixed some problems in GLX that occured when running
+      multi-threaded  applications.
+
+2001-07-05 version 1.0-1420
+
+    * Added support for hotkey switching on mobile platforms.
+
+    * Fixed a hang on mobile that occurred after starting X, killing it
+      and restarting.
+
+    * Fixed a problem on mobile platforms that prevented DVD's from
+      displaying.
+
+    * Fixed a problem that caused OpenGL programs to segfault when using
+      a graphical login with xdm/kdm, and doing the following sequence:
+      login, mode switch, logout, log in and run a GL app.
+
+    * Fixed some indirect rendering problems.
+
+    * Fixed a problem that caused Xconfigure to fail on NVIDIA drivers.
+
+    * Fixed a crash that occured when X forwarding over SSH.
+
+    * Fixed OpenGL front buffer clipping bug.
+
+    * Added xf86XVOffscreenImage support so the V4L module can use the
+      hardware scaler on YUV surfaces.
+
+    * Improved X-Render acceleration.
+
+    * Fixed a bug that prevented X-Render acceleration on GeForce3.
+
+2001-05-14 version 1.0-1251
+
+    * Preliminary GeForce2 Go support.
+
+    * Added support for GeForce3 OpenGL and GLX extensions.
+
+    * Fixed many SMP bugs.
+
+    * Added TV-Out support.
+     
+    * Fixed DGA depth change bug.
+
+    * Rewrote 2D offscreen memory allocation.
+
+    * Fixed X-Video in TwinView.
+
+    * Acceleration for X-Render extension.
+
+    * Fixed up GLXPixmap rendering.
+
+    * Fixed problem with make current to same drawable but different
+      dpy.
+
+    * Fixed problem in which OpenGL would segfault when reading X
+      atoms.
+
+    * X now gets the DPI (dots per inch) from the monitor's EDID (rather
+      than just defaulting to 75 dpi).
+
+    * All DPMS modes are now supported.  There are still issues on flat
+      panels and on the second head of a TwinView system (please see the
+      README).
+
+    * Fixed support for AGP on systems with 1 GB or more of memory.
+
+2001-02-16 version 0.9-769
+
+    * Fixed problem where direct rendering applications were allowed to
+      continue rendering after xkill was called.
+
+    * Fixed problem where Tribes 2 crashed when compressed textures
+      (s3tc textures) were used.
+
+    * Some drawable leaks were fixed in X and GLX.
+
+    * Fixed problem where the application would hang when calling
+      glXMakeCurrent while holding the X server grab.
+
+    * Bios-posting problems on GeForce2 GTS and GeForce Ultra cards were
+      fixed.  This bug resulted in a significant performance loss.
+
+    * Added support for the X Render extension.
+
+    * TwinView functionality was enhanced so that each head can pan 
+      independently.
+
+    * Fixed problem on TNT and TNT2 where Xv(Shm)PutImage returned
+      BadAlloc in high resolutions when there was not enough video
+      bandwidth to display the YUV video overlay correctly. This works
+      now but the resulting display has artifacts.
+
+    * Fixed problem with cursor hanges in X.
+
+    * Fixed problem with X console not restoring on some monitors.
+
+    * Fixed problem with fork() and OpenGL rendering.
+
+    * Fixed problem with X driver module, nvidia_drv.o, being stripped
+      when RPM was rebuilt.
+
+    * Added missing PCI device ids for some TNT2 variants and GeForce3.
+
+    * Fixed problem where the kernel would often hang during X and/or
+      OpenGL operation when on an SMP machine and using the 2.4 kernel.
+
+    * Fixed SYNC_TO_VBLANK hang with 2.4 kernels.
+
+    * DPMS is partially working again. It is possible to set the "off"
+      option for dpms.  DPMS options "suspend" and "standby" are not
+      fully supported -- they simply blank the screen.  
+
+2000-12-20 version 0.96
+
+    * Fix many SMP problems.
+
+    * Fix memory management problems that arise with large RAM systems
+      (500M+).
+
+    * Add multi-mon OpenGL support.
+
+    * Add TwiNView support.
+
+    * More modeline handling fixes, added double-scan support.
+
+    * Fix bios-posting problems with TNT2 M64s and GeForce2 MXs.
+
+    * Dynamic run-time selection between nvagp and agpgart.
+
+    * Fix TNT2 OpenGL slowdowns (noticeable in UT).
+
+2000-08-30 version 0.95
+
+    * Improve XFree86 4.0.1 support.
+
+    * Re-fixed console switch lockup.
+
+    * Fix some AGP regressions.  Better detection/support for AGPGART.
+
+    * Fix color palette problems (xgamma, direct color visuals).
+
+    * Add bios posting override to help with some card problems (M64).
+
+    * Update included 2.4 support to newest test kernels.
+
+2000-07-07 version 0.94
+
+    * Add support for XFree86 4.0.1
+
+    * Fix modesetting problem.
+
+    * Add AGPGART support (nvagpgart v. 0.5-5).
+
+    * Add GeForce2 MX support.
+
+    * Fixed various hangs.
+
+    * Added FSAA support.
+
+    * Fixed problem where an opengl app dying during a console switch
+      would kill the X Server.
+
+2000-06-08 version 0.9-3
+
+    * Allow Modeline directives in the XF86Config file to override our
+      auto-detection of monitor resolutions and refresh rates.
+
+    * "Correct" fix for TNT memory-type problems.
+
+    * Fix for VT switch lockups.
+
+    * Fix for general ALI chipset lockups.
+
+    * Addition and documentation of some registry keys.  Check
+      os-registry.c in the kernel source directory for more details and
+      options.
+
+    * Work around Quake3 modeswitch crashing bug.  Note: It's really a
+      bug in dlopen().
+
+    * Major improvement in multi-threading behavior.
+
+    * Display list sharing with glXCreateContext works now.
+
+    * Faster implementation of glTexImage/glTexSubImage and
+      glCopyTexImage/glCopytexSubImage calls.
+
+    * Fixed kernel memory leak, relating to threaded OpenGL.  This
+      problem was most noticeable with xmms.
+
+    * Fix build problems with older 2.2.x kernels (RedHat 6.0).
+
+2000-05-02 version 0.9-2
+
+    * Fixed problem initializing TNT w/ SGRAM.
+
+    * Removed all GPL'd code from nv.c.
+
+    * Better logging and messages everywhere for tracking problems.
+
+    * Dynamic allocation of client data in kernel, rather than static.
+
+    * Incorporated *unsupported* 2.3 kernel changes for completeness.
+
+    * Makefile updates - add -D_LOOSE_KERNEL_NAMES, and default to 'make
+      install'.
+
+    * Improved mode switching in quake3 (still see occasional crashes).
+
+    * Changed installation name of libraries.  We now have a .1.0.1
+      revision name in the libraries.
+
+    * Temporarily force disabling of AGP fast writes for all chipsets.
+
+    * Fixed monitor issues, allow overriding of sync polarities.
+
+2000-04-25 version 0.9-1
+
+    * Initial Release.
+
diff -uNr kernel.org/nv-mm.h kernel/nv-mm.h
--- kernel.org/nv-mm.h	1970-01-01 08:00:00.000000000 +0800
+++ kernel/nv-mm.h	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,53 @@
+/*******************************************************************************
+    Copyright (c) 2016 NVIDIA Corporation
+
+    Permission is hereby granted, free of charge, to any person obtaining a copy
+    of this software and associated documentation files (the "Software"), to
+    deal in the Software without restriction, including without limitation the
+    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+    sell copies of the Software, and to permit persons to whom the Software is
+    furnished to do so, subject to the following conditions:
+
+        The above copyright notice and this permission notice shall be
+        included in all copies or substantial portions of the Software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+    DEALINGS IN THE SOFTWARE.
+
+*******************************************************************************/
+#ifndef __NV_MM_H__
+#define __NV_MM_H__
+
+/*  get_user_pages_remote() was added by:
+ *    2016 Feb 12: 1e9877902dc7e11d2be038371c6fbf2dfcd469d7
+ *
+ *  The very next commit (cde70140fed8429acf7a14e2e2cbd3e329036653)
+ *  deprecated the 8-argument version of get_user_pages for the
+ *  non-remote case (calling get_user_pages with current and current->mm).
+ *
+ *  The guidelines are: call NV_GET_USER_PAGES_REMOTE if you need the 8-argument
+ *  version that uses something other than current and current->mm. Use
+ *  NV_GET_USER_PAGES if you are refering to current and current->mm.
+ *
+*  Note that get_user_pages_remote() requires the caller to hold a reference on
+*  the task_struct (if non-NULL) and the mm_struct. This will always be true
+*  when using current and current->mm. If the kernel passes the driver a vma
+*  via driver callback, the kernel holds a reference on vma->vm_mm over that
+*  callback.
+ */
+
+#if defined(NV_GET_USER_PAGES_REMOTE_PRESENT)
+    #define NV_GET_USER_PAGES           get_user_pages
+    #define NV_GET_USER_PAGES_REMOTE    get_user_pages_remote
+#else
+    #define NV_GET_USER_PAGES           get_user_pages
+    #define NV_GET_USER_PAGES_REMOTE    get_user_pages
+#endif
+
+
+#endif // __NV_MM_H__
diff -uNr kernel.org/os-mlock.c kernel/os-mlock.c
--- kernel.org/os-mlock.c	2015-11-09 13:44:53.000000000 +0800
+++ kernel/os-mlock.c	2016-07-31 10:11:11.000000000 +0800
@@ -13,6 +13,7 @@
 
 #include "os-interface.h"
 #include "nv-linux.h"
+#include "nv-mm.h"
 
 RM_STATUS NV_API_CALL os_lock_user_pages(
     void   *address,
@@ -45,7 +46,7 @@
     }
 
     down_read(&mm->mmap_sem);
-    ret = get_user_pages(current, mm, (unsigned long)address,
+    ret = NV_GET_USER_PAGES((unsigned long)address,
             page_count, write, force, user_pages, NULL);
     up_read(&mm->mmap_sem);
     pinned = ret;
@@ -58,7 +59,7 @@
     else if (pinned < page_count)
     {
         for (i = 0; i < pinned; i++)
-            page_cache_release(user_pages[i]);
+            put_page(user_pages[i]);
         os_free_mem(user_pages);
         return RM_ERR_INVALID_ADDRESS;
     }
@@ -85,7 +86,7 @@
     {
         if (write)
             set_page_dirty_lock(user_pages[i]);
-        page_cache_release(user_pages[i]);
+        put_page(user_pages[i]);
     }
 
     os_free_mem(user_pages);
diff -uNr kernel.org/patches.h kernel/patches.h
--- kernel.org/patches.h	1970-01-01 08:00:00.000000000 +0800
+++ kernel/patches.h	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,5 @@
+static struct {
+	const char *short_description;
+	const char *description;
+} __nv_patches[] = {
+{ NULL, NULL } };
diff -uNr kernel.org/uvm/conftest.sh kernel/uvm/conftest.sh
--- kernel.org/uvm/conftest.sh	2015-11-09 13:44:53.000000000 +0800
+++ kernel/uvm/conftest.sh	2016-07-31 10:11:11.000000000 +0800
@@ -1,2163 +1,7 @@
 #!/bin/sh
-
-PATH="${PATH}:/bin:/sbin:/usr/bin"
-
-# make sure we are in the directory containing this script
-SCRIPTDIR=`dirname $0`
-cd $SCRIPTDIR
-
+# This is a replacement for nvidia's conftest.sh
 #
-# HOSTCC vs. CC - if a conftest needs to build and execute a test
-# binary, like get_uname, then $HOSTCC needs to be used for this
-# conftest in order for the host/build system to be able to execute
-# it in X-compile environments.
-# In all other cases, $CC should be used to minimize the risk of
-# false failures due to conflicts with architecture specific header
-# files.
-#
-CC="$1"
-HOSTCC="$2"
-ARCH=$3
-ISYSTEM=`$CC -print-file-name=include 2> /dev/null`
-SOURCES=$4
-HEADERS=$SOURCES/include
-OUTPUT=$5
-XEN_PRESENT=1
-PREEMPT_RT_PRESENT=0
-COMPILE_TEST_HEADERS="macros functions symbols types generic headers"
-
-# VGX_BUILD parameter defined only for VGX builds
-
-test_xen() {
-    #
-    # Determine if the target kernel is a Xen kernel. It used to be
-    # sufficient to check for CONFIG_XEN, but the introduction of
-    # modular para-virtualization (CONFIG_PARAVIRT, etc.) and
-    # Xen guest support, it is no longer possible to determine the
-    # target environment at build time. Therefore, if both
-    # CONFIG_XEN and CONFIG_PARAVIRT are present, text_xen() treats
-    # the kernel as a stand-alone kernel.
-    #
-    if ! test_configuration_option CONFIG_XEN ||
-         test_configuration_option CONFIG_PARAVIRT; then
-        XEN_PRESENT=0
-    fi
-}
-
-append_conftest() {
-    #
-    # Append data from stdin to a temporary conftest/*.h file.
-    #
-    TEMPORARY_HEADER=conftest/$1-$$.h
-
-    while read LINE; do
-        echo ${LINE} >> $TEMPORARY_HEADER
-    done
-}
-
-compare_files() {
-    #
-    # Compare two files. Return 0 if checksums and sizes match; 1 otherwise.
-    # In case of any errors, assume the files differ, just to be safe.
-    #
-    FILE_1_CKSUM_RESULT=`cksum $1` || return 1
-    FILE_2_CKSUM_RESULT=`cksum $2` || return 1
-
-    FILE_1_SUM=`echo $FILE_1_CKSUM_RESULT | cut -f 1 -d ' '` || return 1
-    FILE_2_SUM=`echo $FILE_2_CKSUM_RESULT | cut -f 1 -d ' '` || return 1
-    if ! [ $FILE_1_SUM = $FILE_2_SUM ]; then
-        return 1
-    fi
-
-    FILE_1_SIZE=`echo $FILE_1_CKSUM_RESULT | cut -f 2 -d ' '` || return 1
-    FILE_2_SIZE=`echo $FILE_2_CKSUM_RESULT | cut -f 2 -d ' '` || return 1
-    if ! [ $FILE_1_SIZE = $FILE_2_SIZE ]; then
-        return 1
-    fi
-
-    return 0
-}
-
-update_conftest() {
-    #
-    # Check for a generated temporary header file generated by append_conftest:
-    # if present, compare against any existing header file of the same type.
-    # Update the header using the temporary one if no existing header is present
-    # or the existing header differs from the newly generated one. Otherwise,
-    # delete the temporary header. If the header is newly generated, then also
-    # regenerate the master conftest.h file.
-    #
-    TEMPORARY_HEADER=conftest/$1-$$.h
-    HEADER=conftest/$1.h
-
-    if ! [ -f $TEMPORARY_HEADER ]; then
-        return
-    fi
-
-    if ! [ -f $HEADER ] || ! compare_files $TEMPORARY_HEADER $HEADER; then
-        mv $TEMPORARY_HEADER $HEADER
-
-        # regenerate conftest.h to include any include existing subheaders
-        rm -f conftest.h
-        for i in $COMPILE_TEST_HEADERS; do
-            if [ -f conftest/$i.h ]; then
-                echo "#include \"conftest/$i.h\"" >> conftest.h
-            fi
-        done
-    else
-        rm -f $TEMPORARY_HEADER
-    fi 
-}
-
-test_headers() {
-    #
-    # Determine which header files (of a set that may or may not be
-    # present) are provided by the target kernel.
-    #
-    FILES="asm/system.h"
-    FILES="$FILES drm/drmP.h"
-    FILES="$FILES drm/drm_gem.h"
-    FILES="$FILES generated/autoconf.h"
-    FILES="$FILES generated/compile.h"
-    FILES="$FILES generated/utsrelease.h"
-    FILES="$FILES linux/efi.h"
-    FILES="$FILES linux/kconfig.h"
-    FILES="$FILES linux/screen_info.h"
-    FILES="$FILES linux/semaphore.h"
-    FILES="$FILES linux/nvmap.h"
-    FILES="$FILES linux/printk.h"
-    FILES="$FILES linux/ratelimit.h"
-    FILES="$FILES linux/prio_tree.h"
-
-    for FILE in $FILES; do
-        FILE_DEFINE=NV_`echo $FILE | tr '/.' '_' | tr 'a-z' 'A-Z'`_PRESENT
-        if [ -f $HEADERS/$FILE -o -f $OUTPUT/include/$FILE ]; then
-            echo "#define $FILE_DEFINE" | append_conftest "headers"
-        else
-            echo "#undef $FILE_DEFINE" | append_conftest "headers"
-        fi
-    done
-    update_conftest "headers"
-}
-
-create_skeleton_headers() {
-    mkdir -p conftest
-
-    for header in $COMPILE_TEST_HEADERS; do
-        if [ ! -f conftest/$header.h ]; then
-            touch conftest/$header.h
-        fi
-    done
-}
-
-build_cflags() {
-    BASE_CFLAGS="-O2 -D__KERNEL__ \
--DKBUILD_BASENAME=\"#conftest$$\" -DKBUILD_MODNAME=\"#conftest$$\" \
--nostdinc -isystem $ISYSTEM"
-
-    if [ "$OUTPUT" != "$SOURCES" ]; then
-        OUTPUT_CFLAGS="-I$OUTPUT/include2 -I$OUTPUT/include"
-        if [ -f "$OUTPUT/include/generated/autoconf.h" ]; then
-            AUTOCONF_CFLAGS="-include $OUTPUT/include/generated/autoconf.h"
-        else
-            AUTOCONF_CFLAGS="-include $OUTPUT/include/linux/autoconf.h"
-        fi
-    else
-        if [ -f "$HEADERS/generated/autoconf.h" ]; then
-            AUTOCONF_CFLAGS="-include $HEADERS/generated/autoconf.h"
-        else
-            AUTOCONF_CFLAGS="-include $HEADERS/linux/autoconf.h"
-        fi
-    fi
-
-    CFLAGS="$CFLAGS $OUTPUT_CFLAGS -I$HEADERS $AUTOCONF_CFLAGS"
-
-    test_xen
-
-    if [ "$OUTPUT" != "$SOURCES" ]; then
-        MACH_CFLAGS="-I$HEADERS/asm-$ARCH/mach-default"
-        if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/asm-x86/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/x86/include/asm/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/x86/include/uapi"
-        elif [ "$ARCH" = "arm" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -D__LINUX_ARM_ARCH__=7"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/arm/mach-tegra/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/arm/include/uapi"
-        elif [ "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include/uapi"
-        fi
-        if [ "$XEN_PRESENT" != "0" ]; then
-            MACH_CFLAGS="-I$HEADERS/asm-$ARCH/mach-xen $MACH_CFLAGS"
-        fi
-    else
-        MACH_CFLAGS="-I$HEADERS/asm/mach-default"
-        if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/asm-x86/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/x86/include/asm/mach-default"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/x86/include/uapi"
-        elif [ "$ARCH" = "arm" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -D__LINUX_ARM_ARCH__=7"
-            MACH_CFLAGS="$MACH_CFLAGS -I$SOURCES/arch/arm/mach-tegra/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/arm/include/uapi"
-        elif [ "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include"
-            MACH_CFLAGS="$MACH_CFLAGS -I$HEADERS/arch/$ARCH/include/uapi"
-        fi
-        if [ "$XEN_PRESENT" != "0" ]; then
-            MACH_CFLAGS="-I$HEADERS/asm/mach-xen $MACH_CFLAGS"
-        fi
-    fi
-
-    CFLAGS="$BASE_CFLAGS $MACH_CFLAGS $OUTPUT_CFLAGS $AUTOCONF_CFLAGS"
-    CFLAGS="$CFLAGS -I$HEADERS -I$HEADERS/uapi -I$OUTPUT/include/generated/uapi"
-
-    if [ "$ARCH" = "i386" -o "$ARCH" = "x86_64" ]; then
-        CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include"
-        CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include/uapi"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/x86/include/generated"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/x86/include/generated/uapi"
-    elif [ "$ARCH" = "arm" -o "$ARCH" = "arm64" -o "$ARCH" = "powerpc" ]; then
-        CFLAGS="$CFLAGS -I$SOURCES/arch/$ARCH/include"
-        CFLAGS="$CFLAGS -I$SOURCES/arch/$ARCH/include/uapi"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/$ARCH/include/generated"
-        CFLAGS="$CFLAGS -I$OUTPUT/arch/$ARCH/include/generated/uapi"
-    fi
-    if [ -n "$BUILD_PARAMS" ]; then
-        CFLAGS="$CFLAGS -D$BUILD_PARAMS"
-    fi
-}
-
-CONFTEST_PREAMBLE="#include \"conftest.h\"
-    #if defined(NV_LINUX_KCONFIG_H_PRESENT)
-    #include <linux/kconfig.h>
-    #endif
-    #if defined(NV_GENERATED_AUTOCONF_H_PRESENT)
-    #include <generated/autoconf.h>
-    #else
-    #include <linux/autoconf.h>
-    #endif
-    #if defined(CONFIG_XEN) && \
-        defined(CONFIG_XEN_INTERFACE_VERSION) &&  !defined(__XEN_INTERFACE_VERSION__)
-    #define __XEN_INTERFACE_VERSION__ CONFIG_XEN_INTERFACE_VERSION
-    #endif"
-
-test_configuration_option() {
-    #
-    # Check to see if the given configuration option is defined
-    #
-
-    get_configuration_option $1 >/dev/null 2>&1
-
-    return $?
-
-}
-
-compile_check_conftest() {
-    #
-    # Compile the current conftest C file and check+output the result
-    #
-    CODE="$1"
-    DEF="$2"
-    VAL="$3"
-    CAT="$4"
-
-    echo "$CONFTEST_PREAMBLE
-    $CODE" > conftest$$.c
-
-    $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-    rm -f conftest$$.c
-
-    if [ -f conftest$$.o ]; then
-        rm -f conftest$$.o
-        if [ "${CAT}" = "functions" ]; then
-            #
-            # The logic for "functions" compilation tests is inverted compared to
-            # other compilation steps: if the function is present, the code
-            # snippet will fail to compile because the function call won't match
-            # the prototype. If the function is not present, the code snippet
-            # will produce an object file with the function as an unresolved
-            # symbol.
-            #
-            echo "#undef ${DEF}" | append_conftest "${CAT}"
-        else
-            echo "#define ${DEF} ${VAL}" | append_conftest "${CAT}"
-        fi
-        return
-    else
-        if [ "${CAT}" = "functions" ]; then
-            echo "#define ${DEF} ${VAL}" | append_conftest "${CAT}"
-        else
-            echo "#undef ${DEF}" | append_conftest "${CAT}"
-        fi
-        return
-    fi
-}
-
-get_configuration_option() {
-    #
-    # Print the value of given configuration option, if defined
-    #
-    RET=1
-    OPTION=$1
-
-    OLD_FILE="linux/autoconf.h"
-    NEW_FILE="generated/autoconf.h"
-    FILE=""
-
-    if [ -f $HEADERS/$NEW_FILE -o -f $OUTPUT/include/$NEW_FILE ]; then
-        FILE=$NEW_FILE
-    elif [ -f $HEADERS/$OLD_FILE -o -f $OUTPUT/include/$OLD_FILE ]; then
-        FILE=$OLD_FILE
-    fi
-
-    if [ -n "$FILE" ]; then
-        #
-        # We are looking at a configured source tree; verify
-        # that its configuration includes the given option
-        # via a compile check, and print the option's value.
-        #
-
-        if [ -f $HEADERS/$FILE ]; then
-            INCLUDE_DIRECTORY=$HEADERS
-        elif [ -f $OUTPUT/include/$FILE ]; then
-            INCLUDE_DIRECTORY=$OUTPUT/include
-        else
-            return 1
-        fi
-
-        echo "#include <$FILE>
-        #ifndef $OPTION
-        #error $OPTION not defined!
-        #endif
-
-        $OPTION
-        " > conftest$$.c
-
-        $CC -E -P -I$INCLUDE_DIRECTORY -o conftest$$ conftest$$.c > /dev/null 2>&1
-
-        if [ -e conftest$$ ]; then
-            tr -d '\r\n\t ' < conftest$$
-            RET=$?
-        fi
-
-        rm -f conftest$$.c conftest$$
-    else
-        CONFIG=$OUTPUT/.config
-        if [ -f $CONFIG ] && grep "^$OPTION=" $CONFIG; then
-            grep "^$OPTION=" $CONFIG | cut -f 2- -d "="
-            RET=$?
-        fi
-    fi
-
-    return $RET
-
-}
-
-compile_test() {
-    case "$1" in
-        set_memory_uc)
-            #
-            # Determine if the set_memory_uc() function is present.
-            #
-            CODE="
-            #include <asm/cacheflush.h>
-            void conftest_set_memory_uc(void) {
-                set_memory_uc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SET_MEMORY_UC_PRESENT" "" "functions"
-        ;;
-
-        set_memory_array_uc)
-            #
-            # Determine if the set_memory_array_uc() function is present.
-            #
-            CODE="
-            #include <asm/cacheflush.h>
-            void conftest_set_memory_array_uc(void) {
-                set_memory_array_uc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SET_MEMORY_ARRAY_UC_PRESENT" "" "functions"
-        ;;
-
-        set_pages_uc)
-            #
-            # Determine if the set_pages_uc() function is present.
-            #
-            CODE="
-            #include <asm/cacheflush.h>
-            void conftest_set_pages_uc(void) {
-                set_pages_uc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SET_PAGES_UC_PRESENT" "" "functions"
-        ;;
-
-        outer_flush_all)
-            #
-            # Determine if the outer_cache_fns struct has flush_all member.
-            #
-            CODE="
-            #include <asm/outercache.h>
-            int conftest_outer_flush_all(void) {
-                return offsetof(struct outer_cache_fns, flush_all);
-            }"
-
-            compile_check_conftest "$CODE" "NV_OUTER_FLUSH_ALL_PRESENT" "" "types"
-        ;;
-
-        change_page_attr)
-            #
-            # Determine if the change_page_attr() function is
-            # present.
-            #
-            CODE="
-            #include <linux/version.h>
-            #include <linux/utsname.h>
-            #include <linux/mm.h>
-            #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 0)
-              #include <asm/cacheflush.h>
-            #endif
-            void conftest_change_page_attr(void) {
-                change_page_attr();
-            }"
-
-            compile_check_conftest "$CODE" "NV_CHANGE_PAGE_ATTR_PRESENT" "" "functions"
-        ;;
-
-        pci_get_class)
-            #
-            # Determine if the pci_get_class() function is
-            # present.
-            #
-            CODE="
-            #include <linux/pci.h>
-            void conftest_pci_get_class(void) {
-                pci_get_class();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_GET_CLASS_PRESENT" "" "functions"
-        ;;
-
-        pci_get_domain_bus_and_slot)
-            #
-            # Determine if the pci_get_domain_bus_and_slot() function
-            # is present.
-            #
-            CODE="
-            #include <linux/pci.h>
-            void conftest_pci_get_domain_bus_and_slot(void) {
-                pci_get_domain_bus_and_slot();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_GET_DOMAIN_BUS_AND_SLOT_PRESENT" "" "functions"
-        ;;
-
-        pci_save_state)
-            #
-            # Determine the number of arguments of pci_(save|restore)_state().
-            # The explicit buffer argument is only present on 2.6.9. Assume the
-            # interface is always present.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pci.h>
-            void conftest_pci_save_state(void) {
-                pci_save_state(NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 1" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#define NV_PCI_SAVE_STATE_ARGUMENT_COUNT 2" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        remap_pfn_range)
-            #
-            # Determine if the remap_pfn_range() function is
-            # present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_remap_pfn_range(void) {
-                remap_pfn_range();
-            }"
-
-            compile_check_conftest "$CODE" "NV_REMAP_PFN_RANGE_PRESENT" "" "functions"
-        ;;
-
-        vmap)
-            #
-            # Determine if the vmap() function is present and how
-            # many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/vmalloc.h>
-            void conftest_vmap(void) {
-                vmap();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_VMAP_PRESENT" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/vmalloc.h>
-            void *conftest_vmap(struct page **pages, int count) {
-                return vmap(pages, count);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_VMAP_PRESENT" | append_conftest "functions"
-                echo "#define NV_VMAP_ARGUMENT_COUNT 2" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/vmalloc.h>
-            #include <linux/mm.h>
-            void *conftest_vmap(struct page **pages, int count) {
-                return vmap(pages, count, 0, PAGE_KERNEL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_VMAP_PRESENT" | append_conftest "functions"
-                echo "#define NV_VMAP_ARGUMENT_COUNT 4" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error vmap() conftest failed!" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        i2c_adapter)
-            #
-            # Determine if the 'i2c_adapter' structure has the
-            # client_register() field.
-            #
-            CODE="
-            #include <linux/i2c.h>
-            int conftest_i2c_adapter(void) {
-                return offsetof(struct i2c_adapter, client_register);
-            }"
-
-            compile_check_conftest "$CODE" "NV_I2C_ADAPTER_HAS_CLIENT_REGISTER" "" "types"
-        ;;
-
-        pm_message_t)
-            #
-            # Determine if the 'pm_message_t' data type is present
-            # and if it as an 'event' member.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pm.h>
-            void conftest_pm_message_t(pm_message_t state) {
-                pm_message_t *p = &state;
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PM_MESSAGE_T_PRESENT" | append_conftest "types"
-                rm -f conftest$$.o
-            else
-                echo "#undef NV_PM_MESSAGE_T_PRESENT" | append_conftest "types"
-                echo "#undef NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pm.h>  
-            int conftest_pm_message_t(void) {
-                return offsetof(pm_message_t, event);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#undef NV_PM_MESSAGE_T_HAS_EVENT" | append_conftest "types"
-                return
-            fi
-        ;;
-
-        pci_choose_state)
-            #
-            # Determine if the pci_choose_state() function is
-            # present.
-            #
-            CODE="
-            #include <linux/pci.h>
-            void conftest_pci_choose_state(void) {
-                pci_choose_state();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_CHOOSE_STATE_PRESENT" "" "functions"
-        ;;
-
-        vm_insert_page)
-            #
-            # Determine if the vm_insert_page() function is
-            # present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_vm_insert_page(void) {
-                vm_insert_page();
-            }"
-
-            compile_check_conftest "$CODE" "NV_VM_INSERT_PAGE_PRESENT" "" "functions"
-        ;;
-
-        irq_handler_t)
-            #
-            # Determine if the 'irq_handler_t' type is present and
-            # if it takes a 'struct ptregs *' argument.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/interrupt.h>
-            irq_handler_t conftest_isr;
-            " > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ ! -f conftest$$.o ]; then
-                echo "#undef NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            fi
-
-            rm -f conftest$$.o
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/interrupt.h>
-            irq_handler_t conftest_isr;
-            int conftest_irq_handler_t(int irq, void *arg) {
-                return conftest_isr(irq, arg);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
-                echo "#define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 2" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/interrupt.h>
-            irq_handler_t conftest_isr;
-            int conftest_irq_handler_t(int irq, void *arg, struct pt_regs *regs) {
-                return conftest_isr(irq, arg, regs);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_IRQ_HANDLER_T_PRESENT" | append_conftest "types"
-                echo "#define NV_IRQ_HANDLER_T_ARGUMENT_COUNT 3" | append_conftest "types"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error irq_handler_t() conftest failed!" | append_conftest "types"
-                return
-            fi
-        ;;
-
-        acpi_device_ops)
-            #
-            # Determine if the 'acpi_device_ops' structure has
-            # a match() member.
-            #
-            CODE="
-            #include <linux/acpi.h>
-            int conftest_acpi_device_ops(void) {
-                return offsetof(struct acpi_device_ops, match);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_OPS_HAS_MATCH" "" "types"
-        ;;
-
-        acpi_op_remove)
-            #
-            # Determine the number of arguments to pass to the
-            # 'acpi_op_remove' routine.
-            #
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-
-            acpi_op_remove conftest_op_remove_routine;
-
-            int conftest_acpi_device_ops_remove(struct acpi_device *device) {
-                return conftest_op_remove_routine(device);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT 1" | append_conftest "types"
-                return
-            fi
-
-            CODE="
-            #include <linux/acpi.h>
-
-            acpi_op_remove conftest_op_remove_routine;
-
-            int conftest_acpi_device_ops_remove(struct acpi_device *device, int type) {
-                return conftest_op_remove_routine(device, type);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT" "2" "types"
-        ;;
-
-        acpi_device_id)
-            #
-            # Determine if the 'acpi_device_id' structure has 
-            # a 'driver_data' member.
-            #
-            CODE="
-            #include <linux/acpi.h>
-            int conftest_acpi_device_id(void) {
-                return offsetof(struct acpi_device_id, driver_data);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACPI_DEVICE_ID_HAS_DRIVER_DATA" "" "types"
-        ;;
-
-        acquire_console_sem)
-            #
-            # Determine if the acquire_console_sem() function
-            # is present.
-            #
-            CODE="
-            #include <linux/console.h>
-            void conftest_acquire_console_sem(void) {
-                acquire_console_sem(NULL);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ACQUIRE_CONSOLE_SEM_PRESENT" "" "functions"
-        ;;
-
-        console_lock)
-            #
-            # Determine if the console_lock() function is present.
-            #
-            CODE="
-            #include <linux/console.h>
-            void conftest_console_lock(void) {
-                console_lock(NULL);
-            }"
-
-            compile_check_conftest "$CODE" "NV_CONSOLE_LOCK_PRESENT" "" "functions"
-        ;;
-
-        kmem_cache_create)
-            #
-            # Determine if the kmem_cache_create() function is
-            # present and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/slab.h>
-            void conftest_kmem_cache_create(void) {
-                kmem_cache_create();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/slab.h>
-            void conftest_kmem_cache_create(void) {
-                kmem_cache_create(NULL, 0, 0, 0L, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
-                echo "#define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 6" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/slab.h>
-            void conftest_kmem_cache_create(void) {
-                kmem_cache_create(NULL, 0, 0, 0L, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_KMEM_CACHE_CREATE_PRESENT" | append_conftest "functions"
-                echo "#define NV_KMEM_CACHE_CREATE_ARGUMENT_COUNT 5" | append_conftest "functions"
-                return
-            else
-                echo "#error kmem_cache_create() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        smp_call_function)
-            #
-            # Determine if the smp_call_function() function is
-            # present and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_smp_call_function(void) {
-            #ifdef CONFIG_SMP
-                smp_call_function();
-            #endif
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_smp_call_function(void) {
-                smp_call_function(NULL, NULL, 0, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
-                echo "#define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 4" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_smp_call_function(void) {
-                smp_call_function(NULL, NULL, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_SMP_CALL_FUNCTION_PRESENT" | append_conftest "functions"
-                echo "#define NV_SMP_CALL_FUNCTION_ARGUMENT_COUNT 3" | append_conftest "functions"
-                return
-            else
-                echo "#error smp_call_function() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        on_each_cpu)
-            #
-            # Determine if the on_each_cpu() function is present
-            # and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_on_each_cpu(void) {
-            #ifdef CONFIG_SMP
-                on_each_cpu();
-            #endif
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_on_each_cpu(void) {
-                on_each_cpu(NULL, NULL, 0, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
-                echo "#define NV_ON_EACH_CPU_ARGUMENT_COUNT 4" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/smp.h>
-            void conftest_on_each_cpu(void) {
-                on_each_cpu(NULL, NULL, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ON_EACH_CPU_PRESENT" | append_conftest "functions"
-                echo "#define NV_ON_EACH_CPU_ARGUMENT_COUNT 3" | append_conftest "functions"
-                return
-            else
-                echo "#error on_each_cpu() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        nvmap_support)
-            # check if nvmap is supported.
-            if [ -f nv-android.h ]; then
-                echo "#define HAVE_NV_ANDROID" | append_conftest "generic"
-                return
-            else
-                echo "#undef HAVE_NV_ANDROID" | append_conftest "generic"
-            fi
-        ;;
-
-        acpi_evaluate_integer)
-            #
-            # Determine if the acpi_evaluate_integer() function is
-            # present and the type of its 'data' argument.
-            #
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            acpi_status acpi_evaluate_integer(acpi_handle h, acpi_string s,
-                struct acpi_object_list *l, unsigned long long *d) {
-                return AE_OK;
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
-                echo "typedef unsigned long long nv_acpi_integer_t;" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            acpi_status acpi_evaluate_integer(acpi_handle h, acpi_string s,
-                struct acpi_object_list *l, unsigned long *d) {
-                return AE_OK;
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
-                echo "typedef unsigned long nv_acpi_integer_t;" | append_conftest "functions"
-                return
-            else
-                #
-                # We can't report a compile test failure here because
-                # this is a catch-all for both kernels that don't
-                # have acpi_evaluate_integer() and kernels that have
-                # broken header files that make it impossible to
-                # tell if the function is present.
-                #
-                echo "#undef NV_ACPI_EVALUATE_INTEGER_PRESENT" | append_conftest "functions"
-                echo "typedef unsigned long nv_acpi_integer_t;" | append_conftest "functions"
-            fi
-        ;;
-
-        acpi_walk_namespace)
-            #
-            # Determine if the acpi_walk_namespace() function is present
-            # and how many arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            void conftest_acpi_walk_namespace(void) {
-                acpi_walk_namespace();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#undef NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            void conftest_acpi_walk_namespace(void) {
-                acpi_walk_namespace(0, NULL, 0, NULL, NULL, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
-                echo "#define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 7" | append_conftest "functions"
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/acpi.h>
-            void conftest_acpi_walk_namespace(void) {
-                acpi_walk_namespace(0, NULL, 0, NULL, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                rm -f conftest$$.o
-                echo "#define NV_ACPI_WALK_NAMESPACE_PRESENT" | append_conftest "functions"
-                echo "#define NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT 6" | append_conftest "functions"
-                return
-            else
-                echo "#error acpi_walk_namespace() conftest failed!" | append_conftest "functions"
-            fi
-        ;;
-
-        ioremap_cache)
-            #
-            # Determine if the ioremap_cache() function is present.
-            #
-            CODE="
-            #include <asm/io.h>
-            void conftest_ioremap_cache(void) {
-                ioremap_cache();
-            }"
-
-            compile_check_conftest "$CODE" "NV_IOREMAP_CACHE_PRESENT" "" "functions"
-        ;;
-
-        ioremap_wc)
-            #
-            # Determine if the ioremap_wc() function is present.
-            #
-            CODE="
-            #include <asm/io.h>
-            void conftest_ioremap_wc(void) {
-                ioremap_wc();
-            }"
-
-            compile_check_conftest "$CODE" "NV_IOREMAP_WC_PRESENT" "" "functions"
-        ;;
-
-        proc_dir_entry)
-            #
-            # Determine if the 'proc_dir_entry' structure has 
-            # an 'owner' member.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            int conftest_proc_dir_entry(void) {
-                return offsetof(struct proc_dir_entry, owner);
-            }"
-
-            compile_check_conftest "$CODE" "NV_PROC_DIR_ENTRY_HAS_OWNER" "" "types"
-        ;;
-
-      INIT_WORK)
-            #
-            # Determine how many arguments the INIT_WORK() macro
-            # takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/workqueue.h>
-            void conftest_INIT_WORK(void) {
-                INIT_WORK();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_INIT_WORK_PRESENT" | append_conftest "macros"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/workqueue.h>
-            void conftest_INIT_WORK(void) {
-                INIT_WORK((struct work_struct *)NULL, NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_INIT_WORK_PRESENT" | append_conftest "macros"
-                echo "#define NV_INIT_WORK_ARGUMENT_COUNT 3" | append_conftest "macros"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/workqueue.h>
-            void conftest_INIT_WORK(void) {
-                INIT_WORK((struct work_struct *)NULL, NULL);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_INIT_WORK_PRESENT" | append_conftest "macros"
-                echo "#define NV_INIT_WORK_ARGUMENT_COUNT 2" | append_conftest "macros"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error INIT_WORK() conftest failed!" | append_conftest "macros"
-                return
-            fi
-        ;;
-
-      pci_dma_mapping_error)
-            #
-            # Determine how many arguments pci_dma_mapping_error()
-            # takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pci.h>
-            int conftest_pci_dma_mapping_error(void) {
-                return pci_dma_mapping_error(NULL, 0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_PRESENT" | append_conftest "functions"
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 2" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/pci.h>
-            int conftest_pci_dma_mapping_error(void) {
-                return pci_dma_mapping_error(0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_PRESENT" | append_conftest "functions"
-                echo "#define NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT 1" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#error pci_dma_mapping_error() conftest failed!" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        scatterlist)
-            #
-            # Determine if the 'scatterlist' structure has
-            # a 'page_link' member.
-            #
-            CODE="
-            #include <linux/types.h>
-            #include <linux/scatterlist.h>
-            int conftest_scatterlist(void) {
-                return offsetof(struct scatterlist, page_link);
-            }"
-
-            compile_check_conftest "$CODE" "NV_SCATTERLIST_HAS_PAGE_LINK" "" "types"
-        ;;
-
-        pci_domain_nr)
-            #
-            # Determine if the pci_domain_nr() function is present.
-            #
-            CODE="
-            #include <linux/types.h>
-            #include <linux/pci.h>
-            int conftest_pci_domain_nr(struct pci_dev *dev) {
-                return pci_domain_nr();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PCI_DOMAIN_NR_PRESENT" "" "functions"
-        ;;
-
-        file_operations)
-            #
-            # Determine if the 'file_operations' structure has
-            # 'ioctl', 'unlocked_ioctl' and 'compat_ioctl' fields.
-            #
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_operations(void) {
-                return offsetof(struct file_operations, ioctl);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_IOCTL" "" "types"
-
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_operations(void) {
-                return offsetof(struct file_operations, unlocked_ioctl);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_UNLOCKED_IOCTL" "" "types"
-
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_operations(void) {
-                return offsetof(struct file_operations, compat_ioctl);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_OPERATIONS_HAS_COMPAT_IOCTL" "" "types"
-        ;;
-
-        sg_init_table)
-            #
-            # Determine if the sg_init_table() function is present.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/scatterlist.h>
-            void conftest_sg_init_table(struct scatterlist *sgl,
-                    unsigned int nents) {
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ ! -f conftest$$.o ]; then
-                echo "#undef NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
-                return
-
-            fi
-            rm -f conftest$$.o
-
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/types.h>
-            #include <linux/scatterlist.h>
-            void conftest_sg_init_table(struct scatterlist *sgl,
-                    unsigned int nents) {
-                sg_init_table();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#define NV_SG_INIT_TABLE_PRESENT" | append_conftest "functions"
-                return
-            fi
-        ;;
-
-        sg_table)
-            #
-            # Determine if the struct sg_table type is present.
-            #
-            CODE="
-            #include <linux/scatterlist.h>
-            struct sg_table conftest_sg_table;
-            "
-
-            compile_check_conftest "$CODE" "NV_SG_TABLE_PRESENT" "" "types"
-        ;;
-
-        sg_alloc_table)
-            #
-            # Determine if include/linux/scatterlist.h exists and which table
-            # allocation functions are present if so.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #include <linux/scatterlist.h>
-            int conftest_sg_alloc_table(void) {
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ ! -f conftest$$.o ]; then
-                echo "#undef NV_SG_ALLOC_TABLE_PRESENT" | append_conftest "functions"
-                echo "#undef NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" | append_conftest "functions"
-                return
-            fi
-            
-            rm -f conftest$$.o
-
-            CODE="
-            #include <linux/scatterlist.h>
-            int conftest_sg_alloc_table(void) {
-                sg_alloc_table();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SG_ALLOC_TABLE_PRESENT" "" "functions"
-
-            CODE="
-            #include <linux/scatterlist.h>
-            void conftest_sg_alloc_table_from_pages(void) {
-                sg_alloc_table_from_pages();
-            }"
-
-            compile_check_conftest "$CODE" "NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" "" "functions"
-        ;;
-
-        efi_enabled)
-            #
-            # Determine if the efi_enabled symbol is present, or if
-            # the efi_enabled() function is present and how many
-            # arguments it takes.
-            #
-            echo "$CONFTEST_PREAMBLE
-            #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
-            #endif
-            int conftest_efi_enabled(void) {
-                return efi_enabled();
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#undef NV_EFI_ENABLED_PRESENT" | append_conftest "symbols"
-                echo "#undef NV_EFI_ENABLED_PRESENT" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            fi
-
-            echo "$CONFTEST_PREAMBLE
-            #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
-            #endif
-            int conftest_efi_enabled(void) {
-                return efi_enabled(0);
-            }" > conftest$$.c
-
-            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c
-
-            if [ -f conftest$$.o ]; then
-                echo "#define NV_EFI_ENABLED_PRESENT" | append_conftest "functions"
-                echo "#define NV_EFI_ENABLED_ARGUMENT_COUNT 1" | append_conftest "functions"
-                rm -f conftest$$.o
-                return
-            else
-                echo "#define NV_EFI_ENABLED_PRESENT" | append_conftest "symbols"
-                return
-            fi
-        ;;
-
-        dom0_kernel_present)
-            #
-            # Add config parameter if running on DOM0.
-            #
-            if [ -n "$VGX_BUILD" ]; then
-                echo "#define NV_DOM0_KERNEL_PRESENT" | append_conftest "generic"
-            else
-                echo "#undef NV_DOM0_KERNEL_PRESENT" | append_conftest "generic"
-            fi
-            return
-        ;;
-
-        drm_available)
-            #
-            # Determine if the DRM subsystem is usable
-            #
-            CODE="
-            #if defined(NV_DRM_DRMP_H_PRESENT)
-            #include <drm/drmP.h>
-            #endif
-            #if !defined(CONFIG_DRM) && !defined(CONFIG_DRM_MODULE)
-            #error DRM not enabled
-            #endif
-            void conftest_drm_available(void) {
-                struct drm_driver drv;
-                drv.gem_prime_pin = 0;
-                drv.gem_prime_get_sg_table = 0;
-                drv.gem_prime_vmap = 0;
-                drv.gem_prime_vunmap = 0;
-                (void)drm_gem_prime_import;
-                (void)drm_gem_prime_export;
-            }"
-
-            compile_check_conftest "$CODE" "NV_DRM_AVAILABLE" "" "generic"
-        ;;
-
-        proc_create_data)
-            #
-            # Determine if the proc_create_data() function is present.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            void conftest_proc_create_data(void) {
-                proc_create_data();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PROC_CREATE_DATA_PRESENT" "" "functions"
-        ;;
-
-
-        pde_data)
-            #
-            # Determine if the PDE_DATA() function is present.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            void conftest_PDE_DATA(void) {
-                PDE_DATA();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PDE_DATA_PRESENT" "" "functions"
-        ;;
-
-        get_num_physpages)
-            #
-            # Determine if the get_num_physpages() function is
-            # present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_get_num_physpages(void) {
-                get_num_physpages(NULL);
-            }"
-
-            compile_check_conftest "$CODE" "NV_GET_NUM_PHYSPAGES_PRESENT" "" "functions"
-        ;;
-
-        proc_remove)
-            #
-            # Determine if the proc_remove() function is present.
-            #
-            CODE="
-            #include <linux/proc_fs.h>
-            void conftest_proc_remove(void) {
-                proc_remove();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PROC_REMOVE_PRESENT" "" "functions"
-        ;;
-
-        vm_operations_struct)
-            #
-            # Determine if the 'vm_operations_struct' structure has
-            # a 'fault' field.
-            #
-            CODE="
-            #include <linux/mm.h>
-            int conftest_vm_operations_struct(void) {
-                return offsetof(struct vm_operations_struct, fault);
-            }"
-
-            compile_check_conftest "$CODE" "NV_VM_OPERATIONS_STRUCT_HAS_FAULT" "" "types"
-        ;;
-
-        task_struct)
-            #
-            # Determine if the 'task_struct' structure has
-            # a 'cred' field.
-            #
-            CODE="
-            #include <linux/sched.h>
-            int conftest_task_struct(void) {
-                return offsetof(struct task_struct, cred);
-            }"
-
-            compile_check_conftest "$CODE" "NV_TASK_STRUCT_HAS_CRED" "" "types"
-        ;;
-
-        address_space)
-            #
-            # Determine if the 'address_space' structure has
-            # a 'tree_lock' field of type rwlock_t.
-            #
-            CODE="
-            #include <linux/fs.h>
-            int conftest_address_space(void) {
-                struct address_space as;
-                rwlock_init(&as.tree_lock);
-                return offsetof(struct address_space, tree_lock);
-            }"
-
-            compile_check_conftest "$CODE" "NV_ADDRESS_SPACE_HAS_RWLOCK_TREE_LOCK" "" "types"
-        ;;
-
-        address_space_init_once)
-            #
-            # Determine if address_space_init_once is present.
-            #
-            CODE="
-            #include <linux/fs.h>
-            void conftest_address_space_init_once(void) {
-                address_space_init_once();
-            }"
-
-            compile_check_conftest "$CODE" "NV_ADDRESS_SPACE_INIT_ONCE_PRESENT" "" "functions"
-        ;;
-
-        kbasename)
-            #
-            # Determine if the kbasename() function is present.
-            #
-            CODE="
-            #include <linux/string.h>
-            void conftest_kbasename(void) {
-                kbasename();
-            }"
-
-            compile_check_conftest "$CODE" "NV_KBASENAME_PRESENT" "" "functions"
-        ;;
-
-        fatal_signal_pending)
-            #
-            # Determine if fatal_signal_pending is present.
-            #
-            CODE="
-            #include <linux/sched.h>
-            void conftest_fatal_signal_pending(void) {
-                fatal_signal_pending();
-            }"
-
-            compile_check_conftest "$CODE" "NV_FATAL_SIGNAL_PENDING_PRESENT" "" "functions"
-        ;;
-
-        kuid_t)
-            #
-            # Determine if the 'kuid_t' type is present.
-            #
-            CODE="
-            #include <linux/sched.h>
-            kuid_t conftest_kuid_t;
-            "
-
-            compile_check_conftest "$CODE" "NV_KUID_T_PRESENT" "" "types"
-        ;;
-
-        pm_vt_switch_required)
-            #
-            # Determine if the pm_vt_switch_required() function is present.
-            #
-            CODE="
-            #include <linux/pm.h>
-            void conftest_pm_vt_switch_required(void) {
-                pm_vt_switch_required();
-            }"
-
-            compile_check_conftest "$CODE" "NV_PM_VT_SWITCH_REQUIRED_PRESENT" "" "functions"
-        ;;
-
-        file_inode)
-            #
-            # Determine if the 'file' structure has
-            # a 'f_inode' field.
-            #
-            CODE="
-            #include <linux/fs.h>
-            int conftest_file_inode(void) {
-                return offsetof(struct file, f_inode);
-            }"
-
-            compile_check_conftest "$CODE" "NV_FILE_HAS_INODE" "" "types"
-        ;;
-
-        drm_pci_set_busid)
-            #
-            # Determine if the drm_pci_set_busid function is present.
-            #
-            CODE="
-            #if defined(NV_DRM_DRMP_H_PRESENT)
-            #include <drm/drmP.h>
-            #endif
-            void conftest_drm_pci_set_busid(void) {
-                drm_pci_set_busid();
-            }"
-
-            compile_check_conftest "$CODE" "NV_DRM_PCI_SET_BUSID_PRESENT" "" "functions"
-        ;;
-
-        write_cr4)
-            #
-            # Determine if the write_cr4() function is present.
-            #
-            CODE="
-            #include <asm/processor.h>
-            void conftest_write_cr4(void) {
-                write_cr4();
-            }"
-
-            compile_check_conftest "$CODE" "NV_WRITE_CR4_PRESENT" "" "functions"
-        ;;
-
-        for_each_online_node)
-            #
-            # Determine if the for_each_online_node() function is present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_for_each_online_node() {
-                for_each_online_node();
-            }"
-
-            compile_check_conftest "$CODE" "NV_FOR_EACH_ONLINE_NODE_PRESENT" "" "functions"
-        ;;
-
-        node_end_pfn)
-            #
-            # Determine if the node_end_pfn() function is present.
-            #
-            CODE="
-            #include <linux/mm.h>
-            void conftest_node_end_pfn() {
-                node_end_pfn();
-            }"
-
-            compile_check_conftest "$CODE" "NV_NODE_END_PFN_PRESENT" "" "functions"
-        ;;
-    esac
-}
-
-create_skeleton_headers
-build_cflags
-
-case "$6" in
-    cc_sanity_check)
-        #
-        # Check if the selected compiler can create object files
-        # in the current environment.
-        #
-        VERBOSE=$7
-
-        echo "int cc_sanity_check(void) {
-            return 0;
-        }" > conftest$$.c
-
-        $CC -c conftest$$.c > /dev/null 2>&1
-        rm -f conftest$$.c
-
-        if [ ! -f conftest$$.o ]; then
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "";
-            fi
-            if [ "$CC" != "cc" ]; then
-                echo "The C compiler '$CC' does not appear to be able to"
-                echo "create object files.  Please make sure you have "
-                echo "your Linux distribution's libc development package"
-                echo "installed and that '$CC' is a valid C compiler";
-                echo "name."
-            else
-                echo "The C compiler '$CC' does not appear to be able to"
-                echo "create executables.  Please make sure you have "
-                echo "your Linux distribution's gcc and libc development"
-                echo "packages installed."
-            fi
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "";
-                echo "*** Failed CC sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            rm -f conftest$$.o
-            exit 0
-        fi
-    ;;
-
-    cc_version_check)
-        #
-        # Verify that the same compiler is used for the kernel and kernel
-        # module.
-        #
-        VERBOSE=$7
-        
-        if [ ! -f gcc-version-check.c ]; then
-          #
-          # gcc-version-check.c is not in the current working directory.
-          # This can happen when building the kernel module from an
-          # NVIDIA-internal intermediate directory prior to creating an
-          # NVIDIA driver package.  Since the version check below is less
-          # useful than it used to be, just silently skip the test if
-          # gcc-version-check.c is missing.
-          #
-          IGNORE_CC_MISMATCH=1
-        fi
-
-        if [ -n "$IGNORE_CC_MISMATCH" -o -n "$SYSSRC" -o -n "$SYSINCLUDE" ]; then
-          #
-          # The user chose to disable the CC version test (which may or
-          # may not be wise) or is building the module for a kernel not
-          # currently running, which renders the test meaningless.
-          #
-          exit 0
-        fi
-
-        rm -f gcc-version-check
-        $HOSTCC gcc-version-check.c -o gcc-version-check > /dev/null 2>&1
-        if [ ! -f gcc-version-check ]; then
-            if [ "$CC" != "cc" ]; then
-                MSG="Could not compile 'gcc-version-check.c'.  Please be "
-                MSG="$MSG sure you have your Linux distribution's libc "
-                MSG="$MSG development package installed and that '$CC' "
-                MSG="$MSG is a valid C compiler name."
-            else
-                MSG="Could not compile 'gcc-version-check.c'.  Please be "
-                MSG="$MSG sure you have your Linux distribution's gcc "
-                MSG="$MSG and libc development packages installed."
-            fi
-            RET=1
-        else
-            PROC_VERSION="/proc/version"
-            if [ -f $PROC_VERSION ]; then
-                MSG=`./gcc-version-check "$(cat $PROC_VERSION)"`
-                RET=$?
-            else
-                MSG="$PROC_VERSION does not exist."
-                RET=1
-            fi
-            rm -f gcc-version-check
-        fi
-
-        if [ "$RET" != "0" ]; then
-            #
-            # The gcc version check failed
-            #
-            
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "";
-                echo "gcc-version-check failed:";
-                echo "";
-                echo "$MSG" | fmt -w 52
-                echo "";
-                echo "If you know what you are doing and want to override";
-                echo "the gcc version check, you can do so by setting the";
-                echo "IGNORE_CC_MISMATCH environment variable to \"1\".";
-                echo "";
-                echo "In any other case, set the CC environment variable";
-                echo "to the name of the compiler that was used to compile";
-                echo "the kernel.";
-                echo ""
-                echo "*** Failed CC version check. Bailing out! ***";
-                echo "";
-            else
-                echo "$MSG";
-            fi
-            exit 1;
-        else
-            exit 0
-        fi
-    ;;
-
-    suser_sanity_check)
-        #
-        # Determine the caller's user id to determine if we have sufficient
-        # privileges for the requested operation.
-        #
-        if [ $(id -ur) != 0 ]; then
-            echo "";
-            echo "Please run \"make install\" as root.";
-            echo "";
-            echo "*** Failed super-user sanity check. Bailing out! ***";
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    rmmod_sanity_check)
-        #
-        # Make sure that any currently loaded NVIDIA kernel module can be
-        # unloaded.
-        #
-        MODULE="nvidia"
-
-        if [ -n "$SYSSRC" -o -n "$SYSINCLUDE" ]; then
-          #
-          # Don't attempt to remove the kernel module if we're not
-          # building against the running kernel.
-          #
-          exit 0
-        fi
-
-        if lsmod | grep -wq $MODULE; then
-          rmmod $MODULE > /dev/null 2>&1
-        fi
-
-        if lsmod | grep -wq $MODULE; then
-            #
-            # The NVIDIA kernel module is still loaded, most likely because
-            # it is busy.
-            #
-            echo "";
-            echo "Unable to remove existing NVIDIA kernel module.";
-            echo "Please be sure you have exited X before attempting";
-            echo "to install the NVIDIA kernel module.";
-            echo "";
-            echo "*** Failed rmmod sanity check. Bailing out! ***";
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    get_uname)
-        #
-        # Print UTS_RELEASE from the kernel sources, if the kernel header
-        # file ../linux/version.h or ../linux/utsrelease.h exists. If
-        # neither header file is found, but a Makefile is found, extract
-        # PATCHLEVEL and SUBLEVEL, and use them to build the kernel
-        # release name.
-        #
-        # If no source file is found, or if an error occurred, return the
-        # output of `uname -r`.
-        #
-        RET=1
-        DIRS="generated linux"
-        FILE=""
-        
-        for DIR in $DIRS; do
-            if [ -f $HEADERS/$DIR/utsrelease.h ]; then
-                FILE="$HEADERS/$DIR/utsrelease.h"
-                break
-            elif [ -f $OUTPUT/include/$DIR/utsrelease.h ]; then
-                FILE="$OUTPUT/include/$DIR/utsrelease.h"
-                break
-            fi
-        done
-
-        if [ -z "$FILE" ]; then
-            if [ -f $HEADERS/linux/version.h ]; then
-                FILE="$HEADERS/linux/version.h"
-            elif [ -f $OUTPUT/include/linux/version.h ]; then
-                FILE="$OUTPUT/include/linux/version.h"
-            fi
-        fi
-
-        if [ -n "$FILE" ]; then
-            #
-            # We are either looking at a configured kernel source tree
-            # or at headers shipped for a specific kernel.  Determine
-            # the kernel version using a CPP check.
-            #
-            VERSION=`echo "UTS_RELEASE" | $CC - -E -P -include $FILE 2>&1`
-
-            if [ "$?" = "0" -a "VERSION" != "UTS_RELEASE" ]; then
-                echo "$VERSION"
-                RET=0
-            fi
-        else
-            #
-            # If none of the kernel headers ar found, but a Makefile is,
-            # extract PATCHLEVEL and SUBLEVEL and use them to find
-            # the kernel version.
-            #
-            MAKEFILE=$HEADERS/../Makefile
-
-            if [ -f $MAKEFILE ]; then
-                #
-                # This source tree is not configured, but includes
-                # the top-level Makefile.
-                #
-                PATCHLEVEL=$(grep "^PATCHLEVEL =" $MAKEFILE | cut -d " " -f 3)
-                SUBLEVEL=$(grep "^SUBLEVEL =" $MAKEFILE | cut -d " " -f 3)
-
-                if [ -n "$PATCHLEVEL" -a -n "$SUBLEVEL" ]; then
-                    echo 2.$PATCHLEVEL.$SUBLEVEL
-                    RET=0
-                fi
-            fi
-        fi
-
-        if [ "$RET" != "0" ]; then
-            uname -r
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    rivafb_sanity_check)
-        #
-        # Check if the kernel was compiled with rivafb support. If so, then
-        # exit, since the driver no longer works with rivafb.
-        #
-
-        if test_configuration_option CONFIG_FB_RIVA; then
-            echo "Your kernel was configured to include rivafb support!";
-            echo "";
-            echo "The rivafb driver conflicts with the NVIDIA driver, please";
-            echo "reconfigure your kernel and *disable* rivafb support, then";
-            echo "try installing the NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed rivafb sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    nvidiafb_sanity_check)
-        #
-        # Check if the kernel was compiled with nvidiafb support. If so, then
-        # exit, since the driver doesn't work with nvidiafb.
-        #
-
-        if test_configuration_option CONFIG_FB_NVIDIA; then
-            echo "Your kernel was configured to include nvidiafb support!";
-            echo "";
-            echo "The nvidiafb driver conflicts with the NVIDIA driver, please";
-            echo "reconfigure your kernel and *disable* nvidiafb support, then";
-            echo "try installing the NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed nvidiafb sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    xen_sanity_check)
-        #
-        # Check if the target kernel is a Xen kernel. If so, exit, since
-        # the RM doesn't currently support Xen.
-        #
-        VERBOSE=$7
-
-        if [ -n "$IGNORE_XEN_PRESENCE" -o -n "$VGX_BUILD" ]; then
-            exit 0
-        fi
-
-        if [ "$XEN_PRESENT" != "0" ]; then
-            echo "The kernel you are installing for is a Xen kernel!";
-            echo "";
-            echo "The NVIDIA driver does not currently support Xen kernels. If ";
-            echo "you are using a stock distribution kernel, please install ";
-            echo "a variant of this kernel without Xen support; if this is a ";
-            echo "custom kernel, please install a standard Linux kernel.  Then ";
-            echo "try installing the NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed Xen sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    preempt_rt_sanity_check)
-        #
-        # Check if the target kernel has the PREEMPT_RT patch set applied. If
-        # so, exit, since the RM doesn't support this configuration.
-        #
-        VERBOSE=$7
-
-        if [ -n "$IGNORE_PREEMPT_RT_PRESENCE" ]; then
-            exit 0
-        fi
-
-        if test_configuration_option CONFIG_PREEMPT_RT; then
-            PREEMPT_RT_PRESENT=1
-        elif test_configuration_option CONFIG_PREEMPT_RT_FULL; then
-            PREEMPT_RT_PRESENT=1
-        fi
-
-        if [ "$PREEMPT_RT_PRESENT" != "0" ]; then
-            echo "The kernel you are installing for is a PREEMPT_RT kernel!";
-            echo "";
-            echo "The NVIDIA driver does not support real-time kernels. If you ";
-            echo "are using a stock distribution kernel, please install ";
-            echo "a variant of this kernel that does not have the PREEMPT_RT ";
-            echo "patch set applied; if this is a custom kernel, please ";
-            echo "install a standard Linux kernel.  Then try installing the ";
-            echo "NVIDIA kernel module again.";
-            echo "";
-            if [ "$VERBOSE" = "full_output" ]; then
-                echo "*** Failed PREEMPT_RT sanity check. Bailing out! ***";
-                echo "";
-            fi
-            exit 1
-        else
-            exit 0
-        fi
-    ;;
-
-    patch_check)
-        #
-        # Check for any "official" patches that may have been applied and
-        # construct a description table for reporting purposes.
-        #
-        PATCHES=""
-
-        for PATCH in patch-*.h; do
-            if [ -f $PATCH ]; then
-                echo "#include \"$PATCH\"" | append_conftest "patches"
-                PATCHES="$PATCHES "`echo $PATCH | sed -s 's/patch-\(.*\)\.h/\1/'`
-            fi
-        done
-
-        echo "static struct {
-                const char *short_description;
-                const char *description;
-              } __nv_patches[] = {" | append_conftest "patches"
-            for i in $PATCHES; do
-                echo "{ \"$i\", NV_PATCH_${i}_DESCRIPTION }," | \
-                append_conftest "patches"
-            done
-        echo "{ NULL, NULL } };" | append_conftest "patches"
-
-        update_conftest "patches"
-
-        exit 0
-    ;;
-
-    compile_tests)
-        #
-        # Run a series of compile tests to determine the set of interfaces
-        # and features available in the target kernel.
-        #
-        shift 5
-
-        test_headers
-
-        for i in $*; do compile_test $i; done
-
-        if [ -n "$SHOW_COMPILE_TEST_RESULTS" -a -f conftest.h ]; then
-            cat conftest.h conftest/*.h
-        fi
-
-        for header in $COMPILE_TEST_HEADERS; do
-            update_conftest "$header"
-        done
-
-        exit 0
-    ;;
-
-    dom0_sanity_check)
-        #
-        # Determine whether running in DOM0.
-        #
-        VERBOSE=$7
-
-        if [ -n "$VGX_BUILD" ]; then
-            if [ -f /proc/xen/capabilities ]; then
-                if [ "`cat /proc/xen/capabilities`" == "control_d" ]; then
-                    exit 0
-                fi
-            else
-                echo "The kernel is not running in DOM0.";
-                echo "";
-                if [ "$VERBOSE" = "full_output" ]; then
-                    echo "*** Failed DOM0 sanity check. Bailing out! ***";
-                    echo "";
-                fi
-            fi
-            exit 1
-        fi
-    ;;
-
-    test_configuration_option)
-        #
-        # Check to see if the given config option is set.
-        #
-        OPTION=$7
-
-        test_configuration_option $OPTION
-        exit $?
-    ;;
-
-    get_configuration_option)
-        #
-        # Get the value of the given config option.
-        #
-        OPTION=$7
-
-        get_configuration_option $OPTION
-        exit $?
-    ;;
-
-
-    guess_module_signing_hash)
-        #
-        # Determine the best cryptographic hash to use for module signing,
-        # to the extent that is possible.
-        #
-
-        HASH=$(get_configuration_option CONFIG_MODULE_SIG_HASH)
-
-        if [ $? -eq 0 ] && [ -n $HASH ]; then
-            echo $HASH
-            exit 0
-        else
-            for SHA in 512 384 256 224 1; do
-                if test_configuration_option CONFIG_MODULE_SIG_SHA$SHA; then
-                    echo sha$SHA
-                    exit 0
-                fi
-            done
-        fi
-        exit 1
-    ;;
-
-esac
+# We have a new conftest.h that works with kbuild that we don't want
+# overwritten or generated or anything else, so we want any call to
+# conftest.sh to do absolutely nothing.
+exit 0
diff -uNr kernel.org/uvm/Kbuild kernel/uvm/Kbuild
--- kernel.org/uvm/Kbuild	1970-01-01 08:00:00.000000000 +0800
+++ kernel/uvm/Kbuild	2016-07-31 10:11:11.000000000 +0800
@@ -0,0 +1,232 @@
+################################################################################
+#   Copyright (c) 2013 NVidia Corporation
+#
+#   Permission is hereby granted, free of charge, to any person obtaining a copy
+#   of this software and associated documentation files (the "Software"), to
+#   deal in the Software without restriction, including without limitation the
+#   rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+#   sell copies of the Software, and to permit persons to whom the Software is
+#   furnished to do so, subject to the following conditions:
+#
+#       The above copyright notice and this permission notice shall be
+#       included in all copies or substantial portions of the Software.
+#
+#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#   DEALINGS IN THE SOFTWARE.
+#
+################################################################################
+
+#
+# UVM kernel module makefile
+#
+
+# The following UVM_BUILD_TYPEs are supported: debug, release, and develop.
+# The first two are nearly self-explanatory, but "develop" deserves a little
+# more explanation (below).
+#
+# Description of the UVM build types (UVM_BUILD_TYPE):
+#
+# debug builds: these get debug symbols, no optimization (in order to allow
+# easier stepping through of functions), and debug printing.
+#
+# develop builds: these are "printing" builds, normally without debug symbols.
+# These builds must run at close to normal speeds, so they are optimized, and
+# do not have any debug symbols. However, they do have debug printing output.
+# This allows a convenient way for QA (or anyone) to get a slightly deeper look
+# at what the driver is doing, without the hassle of setting up kernel
+# debugging.
+#
+# release builds: these are just the usual speed-optimized, no-debug,
+# no-printing builds that you would expect most users to run.
+#
+UVM_BUILD_TYPE ?= release
+
+ifeq ($(UVM_BUILD_TYPE),debug)
+  EXTRA_CFLAGS += -DDEBUG -O0 -g
+else
+    ifeq ($(UVM_BUILD_TYPE),develop)
+	  # -DDEBUG is required, in order to allow pr_devel() print statements to
+	  # work:
+      EXTRA_CFLAGS += -DDEBUG -O2
+	else
+      EXTRA_CFLAGS += -O2
+    endif
+endif
+
+NV_HOST_OS := $(shell uname)
+NV_HOST_ARCH := $(shell uname -m)
+
+NV_TARGET_DEFINES ?=
+NV_DEFINES=
+
+# In addition to the UVM_BUILD_TYPE (release, debug) choice, there is also a
+# UVM_PROJECT choice. Choices include UVM_NEXT and UVM_LITE, and ALL. The
+# default is UVM_LITE.
+#
+# Unless you are working (inside NVIDIA) on the "next" version of UVM, you want
+# to use the default choice here.
+UVM_PROJECT ?= UVM_LITE
+
+UVM_LITE ?= 0
+UVM_NEXT ?= 0
+RM_ENABLED ?= 1
+
+ifeq ($(UVM_PROJECT),ALL)
+    UVM_LITE = 1
+    UVM_NEXT = 1
+else
+    ifeq ($(UVM_PROJECT),UVM_LITE)
+        UVM_LITE = 1
+    else
+        ifeq ($(UVM_PROJECT),UVM_NEXT)
+            UVM_NEXT = 1
+        else
+            $(error "Invalid UVM_PROJECT: $(UVM_PROJECT)")
+        endif
+    endif
+endif
+
+ifeq ($(UVM_LITE),0)
+    ifeq ($(UVM_NEXT),0)
+        $(error "Cannot build with both UVM_LITE and UVM_NEXT disabled")
+    endif
+endif
+
+ifneq ($(UVM_LITE),0)
+    NV_DEFINES += -DNVIDIA_UVM_LITE_ENABLED
+endif
+ifneq ($(UVM_NEXT),0)
+    NV_DEFINES += -DNVIDIA_UVM_NEXT_ENABLED
+endif
+
+NV_DEFINES += -D$(NV_HOST_OS)
+
+ifneq ($(findstring $(NV_HOST_OS),"Linux"),)
+  NV_HOST_OS_FAMILY = Unix
+  NV_HOST_OS_FAMILY_LOWER_CASE = unix
+  NV_DEFINES+= -D__linux__
+endif
+
+ifneq ($(findstring $(NV_HOST_OS),"macosx"),)
+  NV_HOST_OS_FAMILY = MacOSX
+  NV_HOST_OS_FAMILY_LOWER_CASE = macosx
+endif
+
+ifeq ($(NV_HOST_OS_FAMILY),)
+  $(error "Unrecognized NV_HOST_OS: $(NV_HOST_OS)")
+endif
+
+ifneq ($(findstring $(NV_HOST_OS_FAMILY),"Unix MacOSX"),)
+  # For Unix and MacOS, use the host platform as the default target platform.
+  NV_TARGET_OS ?= $(NV_HOST_OS)
+  NV_TARGET_ARCH ?= $(NV_HOST_ARCH)
+endif
+
+#
+# Determine NV_TARGET_OS_FAMILY
+#
+NV_TARGET_OS_FAMILY =
+
+ifneq ($(findstring $(NV_TARGET_OS),"Linux"),)
+  NV_TARGET_OS_FAMILY = Unix
+  NV_TARGET_OS_FAMILY_LOWER_CASE = unix
+endif
+
+ifneq ($(findstring $(NV_TARGET_OS),"macosx"),)
+  NV_TARGET_OS_FAMILY = MacOSX
+  NV_TARGET_OS_FAMILY_LOWER_CASE = macosx
+endif
+
+ifeq ($(NV_TARGET_OS_FAMILY),)
+  $(error "NV_TARGET_OS_FAMILY has not been set.")
+endif
+
+src ?= .
+obj ?= $(src)
+
+# In both internal builds, and installation (public) builds, the UVM open-source
+# files (that's all of them, for UVM) are in a subdirectory below the RM
+# open-source files.
+RM_OUT_DIR ?= $(src)/..
+
+VERSION_HEADER := $(RM_OUT_DIR)/nv_compiler.h
+
+COMPILE_TESTS = \
+	remap_page_range \
+	remap_pfn_range \
+	irq_handler_t \
+	vm_insert_page \
+	kmem_cache_create \
+	outer_flush_all \
+	vm_operations_struct \
+	file_operations \
+	task_struct \
+	address_space \
+	address_space_init_once \
+	kbasename \
+	fatal_signal_pending \
+	kuid_t
+
+MODULE_NAME:= nvidia-uvm
+
+MODULE_GLUE_OBJS :=     nvidia_uvm_linux.o \
+                        nvidia_uvm_common.o \
+                        nvidia_uvm_utils.o
+
+ifneq ($(UVM_LITE),0)
+    MODULE_GLUE_OBJS += nvidia_uvm_lite.o \
+                        nvidia_uvm_page_cache.o \
+                        nvidia_uvm_lite_api.o \
+                        nvidia_uvm_lite_counters.o \
+                        nvidia_page_migration.o \
+                        nvidia_page_migration_kepler.o \
+                        nvidia_uvm_lite_events.o \
+                        uvm_gpu_ops_tests.o
+endif
+
+NV_INCLUDES:= -I$(PWD) -I$(RM_OUT_DIR)
+
+ifneq ($(UVM_NEXT),0)
+    include $(src)/uvmnext.mk
+endif
+
+ifneq ($(RM_ENABLED),0)
+    NV_DEFINES += -DNVIDIA_UVM_RM_ENABLED
+endif
+
+EXTRA_CFLAGS += $(NV_DEFINES) $(NV_TARGET_DEFINES) $(NV_INCLUDES)
+
+ccflags-y += $(EXTRA_CFLAGS)
+
+RM_MODULE_SYMVERS:= $(RM_OUT_DIR)/Module.symvers
+UVM_MODULE_SYMVERS:= $(obj)/Module.symvers
+
+module $(MODULE_NAME).ko: $(UVM_MODULE_SYMVERS) debug_diagnostics_printing
+
+$(MODULE_NAME)-y := $(MODULE_GLUE_OBJS)
+
+include $(RM_OUT_DIR)/nvidia-modules-common.mk
+
+$(eval $(call BUILD_MODULE_RULE, $(MODULE_OBJECT),"uvm",))
+module: $(MODULE_OBJECT)
+
+$(RM_MODULE_SYMVERS):
+	cd $(RM_OUT_DIR); make module SYSSRC=$(KERNEL_SOURCES) SYSOUT=$(KERNEL_OUTPUT) KBUILD_EXTMOD=$(RM_OUT_DIR)
+
+$(UVM_MODULE_SYMVERS): $(RM_MODULE_SYMVERS)
+	cp $< $@
+
+debug_diagnostics_printing:
+ifeq ($(NV_VERBOSE),1)
+	@echo "NVIDIA UVM: CC=$(CC), HOST_CC=$(HOST_CC) NV_TARGET_ARCH=$(NV_TARGET_ARCH)"
+	@echo "NVIDIA UVM: CONFTEST=$(CONFTEST)"
+	@echo "KERNEL_SOURCES: $(KERNEL_SOURCES)"
+	@echo "EXTRA_CFLAGS: $(EXTRA_CFLAGS)"
+endif
+
+.PHONY: debug_diagnostics_printing
diff -uNr kernel.org/uvm/Makefile kernel/uvm/Makefile
--- kernel.org/uvm/Makefile	2015-11-09 13:44:53.000000000 +0800
+++ kernel/uvm/Makefile	2016-07-31 10:11:11.000000000 +0800
@@ -1,232 +1,35 @@
-################################################################################
-#   Copyright (c) 2013 NVidia Corporation
 #
-#   Permission is hereby granted, free of charge, to any person obtaining a copy
-#   of this software and associated documentation files (the "Software"), to
-#   deal in the Software without restriction, including without limitation the
-#   rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-#   sell copies of the Software, and to permit persons to whom the Software is
-#   furnished to do so, subject to the following conditions:
+# By default, the build is done against the running linux kernel source.
+# To build against a different kernel source tree, set SYSSRC:
 #
-#       The above copyright notice and this permission notice shall be
-#       included in all copies or substantial portions of the Software.
-#
-#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
-#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#   DEALINGS IN THE SOFTWARE.
-#
-################################################################################
+#    make SYSSRC=/path/to/kernel/source
 
-#
-# UVM kernel module makefile
-#
-
-# The following UVM_BUILD_TYPEs are supported: debug, release, and develop.
-# The first two are nearly self-explanatory, but "develop" deserves a little
-# more explanation (below).
-#
-# Description of the UVM build types (UVM_BUILD_TYPE):
-#
-# debug builds: these get debug symbols, no optimization (in order to allow
-# easier stepping through of functions), and debug printing.
-#
-# develop builds: these are "printing" builds, normally without debug symbols.
-# These builds must run at close to normal speeds, so they are optimized, and
-# do not have any debug symbols. However, they do have debug printing output.
-# This allows a convenient way for QA (or anyone) to get a slightly deeper look
-# at what the driver is doing, without the hassle of setting up kernel
-# debugging.
-#
-# release builds: these are just the usual speed-optimized, no-debug,
-# no-printing builds that you would expect most users to run.
-#
-UVM_BUILD_TYPE ?= release
-
-ifeq ($(UVM_BUILD_TYPE),debug)
-  EXTRA_CFLAGS += -DDEBUG -O0 -g
-else
-    ifeq ($(UVM_BUILD_TYPE),develop)
-	  # -DDEBUG is required, in order to allow pr_devel() print statements to
-	  # work:
-      EXTRA_CFLAGS += -DDEBUG -O2
-	else
-      EXTRA_CFLAGS += -O2
-    endif
+ifneq ($(KERNELRELEASE),)
+$(error Running inside Kbuild should not use the Makefile)
 endif
 
-NV_HOST_OS := $(shell uname)
-NV_HOST_ARCH := $(shell uname -m)
-
-NV_TARGET_DEFINES ?=
-NV_DEFINES=
-
-# In addition to the UVM_BUILD_TYPE (release, debug) choice, there is also a
-# UVM_PROJECT choice. Choices include UVM_NEXT and UVM_LITE, and ALL. The
-# default is UVM_LITE.
-#
-# Unless you are working (inside NVIDIA) on the "next" version of UVM, you want
-# to use the default choice here.
-UVM_PROJECT ?= UVM_LITE
-
-UVM_LITE ?= 0
-UVM_NEXT ?= 0
-RM_ENABLED ?= 1
-
-ifeq ($(UVM_PROJECT),ALL)
-    UVM_LITE = 1
-    UVM_NEXT = 1
+ifdef SYSSRC
+ KERNEL_SOURCES	 = $(SYSSRC)
 else
-    ifeq ($(UVM_PROJECT),UVM_LITE)
-        UVM_LITE = 1
-    else
-        ifeq ($(UVM_PROJECT),UVM_NEXT)
-            UVM_NEXT = 1
-        else
-            $(error "Invalid UVM_PROJECT: $(UVM_PROJECT)")
-        endif
-    endif
-endif
-
-ifeq ($(UVM_LITE),0)
-    ifeq ($(UVM_NEXT),0)
-        $(error "Cannot build with both UVM_LITE and UVM_NEXT disabled")
-    endif
-endif
-
-ifneq ($(UVM_LITE),0)
-    NV_DEFINES += -DNVIDIA_UVM_LITE_ENABLED
-endif
-ifneq ($(UVM_NEXT),0)
-    NV_DEFINES += -DNVIDIA_UVM_NEXT_ENABLED
-endif
-
-NV_DEFINES += -D$(NV_HOST_OS)
-
-ifneq ($(findstring $(NV_HOST_OS),"Linux"),)
-  NV_HOST_OS_FAMILY = Unix
-  NV_HOST_OS_FAMILY_LOWER_CASE = unix
-  NV_DEFINES+= -D__linux__
-endif
-
-ifneq ($(findstring $(NV_HOST_OS),"macosx"),)
-  NV_HOST_OS_FAMILY = MacOSX
-  NV_HOST_OS_FAMILY_LOWER_CASE = macosx
-endif
-
-ifeq ($(NV_HOST_OS_FAMILY),)
-  $(error "Unrecognized NV_HOST_OS: $(NV_HOST_OS)")
-endif
-
-ifneq ($(findstring $(NV_HOST_OS_FAMILY),"Unix MacOSX"),)
-  # For Unix and MacOS, use the host platform as the default target platform.
-  NV_TARGET_OS ?= $(NV_HOST_OS)
-  NV_TARGET_ARCH ?= $(NV_HOST_ARCH)
-endif
-
-#
-# Determine NV_TARGET_OS_FAMILY
-#
-NV_TARGET_OS_FAMILY =
-
-ifneq ($(findstring $(NV_TARGET_OS),"Linux"),)
-  NV_TARGET_OS_FAMILY = Unix
-  NV_TARGET_OS_FAMILY_LOWER_CASE = unix
-endif
-
-ifneq ($(findstring $(NV_TARGET_OS),"macosx"),)
-  NV_TARGET_OS_FAMILY = MacOSX
-  NV_TARGET_OS_FAMILY_LOWER_CASE = macosx
-endif
-
-ifeq ($(NV_TARGET_OS_FAMILY),)
-  $(error "NV_TARGET_OS_FAMILY has not been set.")
-endif
-
-src ?= .
-obj ?= $(src)
-
-# In both internal builds, and installation (public) builds, the UVM open-source
-# files (that's all of them, for UVM) are in a subdirectory below the RM
-# open-source files.
-RM_OUT_DIR ?= $(src)/..
-
-VERSION_HEADER := $(RM_OUT_DIR)/nv_compiler.h
-
-COMPILE_TESTS = \
-	remap_page_range \
-	remap_pfn_range \
-	irq_handler_t \
-	vm_insert_page \
-	kmem_cache_create \
-	outer_flush_all \
-	vm_operations_struct \
-	file_operations \
-	task_struct \
-	address_space \
-	address_space_init_once \
-	kbasename \
-	fatal_signal_pending \
-	kuid_t
-
-MODULE_NAME:= nvidia-uvm
-
-MODULE_GLUE_OBJS :=     nvidia_uvm_linux.o \
-                        nvidia_uvm_common.o \
-                        nvidia_uvm_utils.o
-
-ifneq ($(UVM_LITE),0)
-    MODULE_GLUE_OBJS += nvidia_uvm_lite.o \
-                        nvidia_uvm_page_cache.o \
-                        nvidia_uvm_lite_api.o \
-                        nvidia_uvm_lite_counters.o \
-                        nvidia_page_migration.o \
-                        nvidia_page_migration_kepler.o \
-                        nvidia_uvm_lite_events.o \
-                        uvm_gpu_ops_tests.o
+ KERNEL_UNAME	:= $(shell uname -r)
+ KERNEL_SOURCES	 = /lib/modules/$(KERNEL_UNAME)/build
 endif
 
-NV_INCLUDES:= -I$(PWD) -I$(RM_OUT_DIR)
-
-ifneq ($(UVM_NEXT),0)
-    include $(src)/uvmnext.mk
+ifndef NV_VERBOSE
+ ifneq ($(strip $(QUIET)),1)
+ NV_VERBOSE=1
+ else
+ NV_VERBOSE=0
+ endif
 endif
 
-ifneq ($(RM_ENABLED),0)
-    NV_DEFINES += -DNVIDIA_UVM_RM_ENABLED
-endif
-
-EXTRA_CFLAGS += $(NV_DEFINES) $(NV_TARGET_DEFINES) $(NV_INCLUDES)
-
-ccflags-y += $(EXTRA_CFLAGS)
-
-RM_MODULE_SYMVERS:= $(RM_OUT_DIR)/Module.symvers
-UVM_MODULE_SYMVERS:= $(obj)/Module.symvers
+KBUILD_PARAMS += KBUILD_VERBOSE=$(NV_VERBOSE)
+KBUILD_PARAMS += -C $(KERNEL_SOURCES) M=$(CURDIR)
 
-module $(MODULE_NAME).ko: $(UVM_MODULE_SYMVERS) debug_diagnostics_printing
 
-$(MODULE_NAME)-y := $(MODULE_GLUE_OBJS)
-
-include $(RM_OUT_DIR)/nvidia-modules-common.mk
-
-$(eval $(call BUILD_MODULE_RULE, $(MODULE_OBJECT),"uvm",))
-module: $(MODULE_OBJECT)
-
-$(RM_MODULE_SYMVERS):
-	cd $(RM_OUT_DIR); make module SYSSRC=$(KERNEL_SOURCES) SYSOUT=$(KERNEL_OUTPUT) KBUILD_EXTMOD=$(RM_OUT_DIR)
-
-$(UVM_MODULE_SYMVERS): $(RM_MODULE_SYMVERS)
-	cp $< $@
-
-debug_diagnostics_printing:
-ifeq ($(NV_VERBOSE),1)
-	@echo "NVIDIA UVM: CC=$(CC), HOST_CC=$(HOST_CC) NV_TARGET_ARCH=$(NV_TARGET_ARCH)"
-	@echo "NVIDIA UVM: CONFTEST=$(CONFTEST)"
-	@echo "KERNEL_SOURCES: $(KERNEL_SOURCES)"
-	@echo "EXTRA_CFLAGS: $(EXTRA_CFLAGS)"
-endif
+default: modules
+.PHONY: default
 
-.PHONY: debug_diagnostics_printing
+# hand over to kbuild
+%::
+	$(MAKE) $(KBUILD_PARAMS) $@
diff -uNr kernel.org/uvm/nvidia_uvm_lite.c kernel/uvm/nvidia_uvm_lite.c
--- kernel.org/uvm/nvidia_uvm_lite.c	2015-11-09 13:44:53.000000000 +0800
+++ kernel/uvm/nvidia_uvm_lite.c	2016-07-31 10:11:11.000000000 +0800
@@ -785,7 +785,7 @@
         // a reference so that the fault handling logic is correct:
         //
         get_page(pTracking->uvmPage);
-        retValue = VM_FAULT_MINOR;
+        retValue = 0;
     }
 
     pRecord->isMapped = NV_TRUE;
