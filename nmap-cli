#!/bin/bash


############################
sudo rm -rf /tmp/nmap
sudo rm -rf /tmp/nmap/nmap-opt
mkdir /tmp/nmap
touch /tmp/nmap/nmap-opt

FAKE_HOST='163.29.3.110'
FAKE_MAC='00:11:22:33:44:55'

############################
init_fun(){
if [ "$SW" == "1" ]; then
    LHOST=$(curl ident.me)
else
    clear
    echo -e ""
    echo -e "    選擇介面卡"
    echo -e ""
    echo -e "    1) 有線網路"
    echo -e ""
    echo -e "    2) 無線網路"
    echo -e ""
    read NET
    [[ "$NET" ]]
    if [ "$NET" == "1" ]; then
        IFCE=$(sudo route | grep default 2>&1 | grep eth | awk '{print $8}')
        LHOST=$(sudo ifconfig -v "$IFCE" | grep "inet " | awk '{print $2}')
    elif [ "$NET" == "2" ]; then
        IFCE=$(sudo route | grep default 2>&1 | grep wlan | awk '{print $8}')
        LHOST=$(sudo ifconfig -v "$IFCE" | grep "inet " | awk '{print $2}')
    else
        init_fun
    fi
fi

}

############################
tcp_scan_fun(){
clear
echo -e ""
echo -e "    TCP 掃描"
echo -e ""
echo -e "    1) ACK 掃描 (-sA)      2) FIN 掃描 (-sF)"
echo -e "    3) Maimon 掃描 (-sM)   4) TCP Null 掃描 (-sN)"
echo -e "    5) TCP SYN 掃描 (-sS)  6) TCP 連接掃描 (-sT)"
echo -e "    7) Xmas Tree掃描 (-sX) 8) 滑動窗口掃描 (-sW)"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "1" ]; then
    echo "-sA" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "2" ]; then
    echo "-sF" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "3" ]; then
    echo "-sM" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "4" ]; then
    echo "-sN" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "5" ]; then
    echo "-sS" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "6" ]; then
    echo "-sT" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "7" ]; then
    echo "-sX" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "8" ]; then
    echo "-sW" >> /tmp/nmap/nmap-opt
fi

}

############################
tcp_port_fun(){
clear
echo -e ""
echo -e "    SYN Ping (-PS)"
echo -e "    輸入範例: 80 或 80,93 或 25-80,93"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ ! "$OPT" == "" ]; then
    echo "-PS$OPT" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    ACK Ping (-PA)"
echo -e "    輸入範例: 80 或 80,93 或 25-80,93"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ ! "$OPT" == "" ]; then
    echo "-PA$OPT" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    UDP Ping (-PU)"
echo -e "    輸入範例: 80 或 80,93 或 25-80,93"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ ! "$OPT" == "" ]; then
    echo "-PU$OPT" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    SCTP Ping (-PY)"
echo -e "    輸入範例: 80 或 80,93 或 25-80,93"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ ! "$OPT" == "" ]; then
    echo "-PY$OPT" >> /tmp/nmap/nmap-opt
fi

}
############################
ping_scan_fun(){
clear
echo -e ""
echo -e "    掃描前不發送Ping請求 (-Pn)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "-Pn" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    設置 ICMP 請求發現探測"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo -e "    ICMP Ping (-PE)"
    echo -e ""
    echo -e "    選項[y/n]"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ "$OPT" == "y" ]; then
        echo "-PE" >> /tmp/nmap/nmap-opt
    fi

    echo -e "    ICMP 時間戳記請求 (-PP)"
    echo -e ""
    echo -e "    選項[y/n]"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ "$OPT" == "y" ]; then
        echo "-PP" >> /tmp/nmap/nmap-opt
    fi

    echo -e "    ICMP 網路遮罩請求 (-PM)"
    echo -e ""
    echo -e "    選項[y/n]"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ "$OPT" == "y" ]; then
        echo "-PM" >> /tmp/nmap/nmap-opt
    fi
fi

clear
echo -e ""
echo -e "    使用 TCP SYN/ACK/UDP/SCTP 端口探測功能"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    tcp_port_fun
fi

}
############################
non_tcp_scan_fun(){
clear
echo -e ""
echo -e "    Non TCP 掃描"
echo -e ""
echo -e "    1) UDP 掃描 (-sU)        2) IP協議掃描 (-sO)"
echo -e "    3) Ping 掃描 (-sn)       4) 列表掃描 (-sL)"
echo -e "    5) SCTP INIT 掃描 (-sY)  6) COOKIE-ECHO 掃描 (-sZ)"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "1" ]; then
    echo "-sU" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "2" ]; then
    echo "-sO" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "3" ]; then
    echo "-sn" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "4" ]; then
    echo "-sL" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "5" ]; then
    echo "-sY" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "6" ]; then
    echo "-sZ" >> /tmp/nmap/nmap-opt
fi

}
############################
verbosity_fun(){
echo -e "    設置詳細級別"
echo -e "    範圍 1-10"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "1" ]; then
    echo "-v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "2" ]; then
    echo "-v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "3" ]; then
    echo "-v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "4" ]; then
    echo "-v -v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "5" ]; then
    echo "-v -v -v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "6" ]; then
    echo "-v -v -v -v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "7" ]; then
    echo "-v -v -v -v -v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "8" ]; then
    echo "-v -v -v -v -v -v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "9" ]; then
    echo "-v -v -v -v -v -v -v -v -v" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "10" ]; then
    echo "-v -v -v -v -v -v -v -v -v -v" >> /tmp/nmap/nmap-opt
fi

}
############################
debugging_fun(){
echo -e "    設置除錯級別"
echo -e "    範圍 1-10"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "1" ]; then
    echo "-d" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "2" ]; then
    echo "-d2" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "3" ]; then
    echo "-d3" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "4" ]; then
    echo "-d4" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "5" ]; then
    echo "-d5" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "6" ]; then
    echo "-d6" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "7" ]; then
    echo "-d7" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "8" ]; then
    echo "-d8" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "9" ]; then
    echo "-d9" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "10" ]; then
    echo "-d10" >> /tmp/nmap/nmap-opt
fi

}

############################
script_fun(){
clear
echo -e ""
echo -e "    設定腳本"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "y" ]; then
    echo -e "    輸入腳本名稱"
    echo -e "    範例 asn-query"
    echo -e "    如使用多個腳本以逗號分隔"
    echo -e "    範例 asn-query,acarsd-info"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        echo "--script $OPT" >> /tmp/nmap/nmap-opt
    fi

    echo -e "    設定腳本參數"
    echo -e "    範例 acarsd-info.timeout=1"
    echo -e "    如使用多個參數以逗號分隔"
    echo -e "    範例 afp.password=1111,afp.username=1111"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        echo "--script-args $OPT" >> /tmp/nmap/nmap-opt
    fi
fi
}

############################
scan_opt_fun(){
clear
echo -e ""
echo -e "    指定其他IP、端口、介面來發送接收封包"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then

    echo -e "    指定發送封包的介面"
    echo -e "    範例: eth0、eth1、wlan0、wlan1 ..."
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        echo "-e $OPT" >> /tmp/nmap/nmap-opt
    fi

    echo -e "    指定發送封包的IP"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        LHOST="$OPT"
        echo "-S $OPT" >> /tmp/nmap/nmap-opt
    fi

    echo -e "    指定發送封包的端口"
    echo -e "    輸入端口號"
    echo -e "    不指定端口，可直接ENTER略過"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        echo "-g $OPT" >> /tmp/nmap/nmap-opt
    fi
fi

clear
echo -e ""
echo -e "    偽造IP與MAC訊息"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "-D $FAKE_HOST,ME $LHOST" >> /tmp/nmap/nmap-opt
    echo "--spoof-mac $FAKE_MAC" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    使用TOR(洋蔥)代理"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    TOR='y'
fi

### 腳本設定
script_fun

### 使用 TCP 掃描
tcp_scan_fun

### 使用 Non TCP 掃描
non_tcp_scan_fun

clear
echo -e ""
echo -e "    設置時間模板"
echo -e ""
echo -e "    數值越高，速度越快。"
echo -e "    輸入範例 0-5 ，或直接按ENTER跳過。"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "0" ]; then
    echo "-T0" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "1" ]; then
    echo "-T1" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "2" ]; then
    echo "-T2" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "3" ]; then
    echo "-T3" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "4" ]; then
    echo "-T4" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "5" ]; then
    echo "-T5" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    啟用進階掃描功能 (-A)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "y" ]; then
    echo "-A" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    啟用OS檢測功能 (-O)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "y" ]; then
    echo "-O" >> /tmp/nmap/nmap-opt

    echo -e "    推測操作系統檢測 (--osscan-guess)"
    echo -e ""
    echo -e "    選項[y/n]"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ "$OPT" == "y" ]; then
        echo "--osscan-guess" >> /tmp/nmap/nmap-opt
    fi
fi

clear
echo -e ""
echo -e "    探測已開端口的服務器/版本信息 (-sV)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "-sV" >> /tmp/nmap/nmap-opt

    echo -e ""
    echo -e "    是否指定探測深度 (-sV)"
    echo -e ""
    echo -e "    選項[y/n]"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ "$OPT" == "y" ]; then
        echo -e "    設定探測深度 (0-9)"
        echo -e ""
        read OPT
        [[ "$OPT" ]]

        if [ ! "$OPT" == "" ]; then
            echo "--version-intensity $OPT" >> /tmp/nmap/nmap-opt
        fi
    fi
fi

clear
echo -e ""
echo -e "    啟用 Idle 掃描 (-sI)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "y" ]; then
    echo -e "    輸入格式: 網域或網域:port"
    echo -e "    範例: www.google.com 或 www.google.com:443"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        echo "-sI $OPT" >> /tmp/nmap/nmap-opt
    fi
fi

clear
echo -e ""
echo -e "    DNS 解析設定"
echo -e ""
echo -e "    1) 不做 DNS 解析"
echo -e "    2) 進行 DNS 反向解析"
echo -e "    *) 使用預設: 自動選擇"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "1" ]; then
    echo "-n" >> /tmp/nmap/nmap-opt
elif [ "$OPT" == "1" ]; then
    echo "-R" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    啟用 IPv6 掃描 (-6)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "-6" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    設置 PING 掃描 (-6)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    ping_scan_fun
fi

clear
echo -e ""
echo -e "    啟用快速掃描 (-F)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "-F" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    指定掃描端口 (-p)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo -e "    輸入範例: 80 或 80,93 或 25-80,93"
    echo -e ""
    read OPT
    [[ "$OPT" ]]
    if [ ! "$OPT" == "" ]; then
        echo "-p $OPT" >> /tmp/nmap/nmap-opt
    fi
fi

clear
echo -e ""
echo -e "    設置詳細級別 (-v)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    verbosity_fun
fi

clear
echo -e ""
echo -e "    設置除錯級別 (-d)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    debugging_fun
fi

clear
echo -e ""
echo -e "    啟用封包追蹤 (--packet-trace)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "--packet-trace" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    啟用追蹤目標路由 (--traceroute)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "--traceroute" >> /tmp/nmap/nmap-opt
fi

clear
echo -e ""
echo -e "    按順序掃描端口 (-r)"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    echo "-r" >> /tmp/nmap/nmap-opt
fi

}

############################
set_info_fun(){

CMD_CHECK=$(cat /tmp/nmap/nmap-opt -n | grep "     1" | awk '{print $1}')
if [ -z "$CMD_CHECK" ]; then
    RUN_CMD='n'
else
    RUN_CMD='y'
fi

clear
echo -e ""
echo -e "    掃描目標: $TARGET"
echo -e ""

if [ "$RUN_CMD" == "y" ]; then
    OPT_CMD=$(cat /tmp/nmap/nmap-opt | tr "\n" " ")
    echo -e "    選項參數: $OPT_CMD"
else
    echo -e "    選項參數: NULL"
fi
echo -e ""
if [ "$TOR" == "y" ]; then
    if [ "$RUN_CMD" == "y" ]; then
        echo -e "    執行命令: sudo proxychains nmap $OPT_CMD $TARGET"
    else
        echo -e "    執行命令: sudo proxychains nmap $TARGET"
    fi
else
    if [ "$RUN_CMD" == "y" ]; then
        echo -e "    執行命令: sudo nmap $OPT_CMD $TARGET"
    else
        echo -e "    執行命令: sudo nmap $TARGET"
    fi
fi

echo -e ""
echo -e "    開始掃描"
echo -e ""
echo -e "    選項[y/n]"
echo -e ""
read OPT
[[ "$OPT" ]]
if [ "$OPT" == "y" ]; then
    clear
    if [ "$TOR" == "y" ]; then
        if [ "$RUN_CMD" == "y" ]; then
            sudo proxychains nmap $OPT_CMD $TARGET -oN /tmp/nmap/scan-target.txt
        else
            sudo proxychains nmap $TARGET -oN /tmp/nmap/scan-target.txt
        fi
        xdg-open /tmp/nmap/scan-target.txt
    else
        if [ "$RUN_CMD" == "y" ]; then
            sudo nmap $OPT_CMD $TARGET -oN /tmp/nmap/scan-target.txt
        else
            sudo nmap $TARGET -oN /tmp/nmap/scan-target.txt
        fi
        xdg-open /tmp/nmap/scan-target.txt

    fi
elif [ "$OPT" == "" ]; then
    set_info_fun
fi

nmap_main_fun

}

############################
scan3_fun(){
clear
OPT=$(zenity --file-selection --title="選擇倒導入目標" --filename=$HOME/)
# echo -e "$OPT"

if [ "$OPT" == "" ]; then
    nmap_main_fun
else
    TARGET="-iL $OPT"
fi

scan_opt_fun
set_info_fun

}

############################
scan2_fun(){
clear
echo -e ""
echo -e "    輸入隨機掃描目標數量"
echo -e "    範例: 例如要隨機掃描1000個IP，則輸入1000。"
echo -e "    0 為窮舉 IP。"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "" ]; then
    scan2_fun
else
    TARGET="-iR $OPT"
fi

scan_opt_fun
set_info_fun

}
############################
scan1_fun(){
clear
echo -e ""
echo -e "    輸入網與或IP或網域與IP範圍"
echo -e "    範例: microsoft.com 或 microsoft.com/24"
echo -e "    或 192.168.0.1 或 10.0.0-255.1-254"
echo -e ""
read TARGET
[[ "$TARGET" ]]

if [ "$TARGET" == "" ]; then
    scan1_fun
fi

scan_opt_fun
set_info_fun

}

############################
nmap_main_fun(){
clear
echo -e ""
echo -e "    1) 掃瞄網域名稱或IP位址"
echo -e ""
echo -e "    2) 隨機選取掃描目標 (-iR)"
echo -e ""
echo -e "    3) 導入掃描列表文件 (-iL)"
echo -e ""
echo -e "    4) 查看本地路由資訊"
echo -e ""
echo -e "    5) 更新腳本資料庫"
echo -e ""
echo -e "    0) 退出"
echo -e ""
echo -e "    x) 返回"
echo -e ""
read MENU
[[ "$MENU" ]]
if [ "$MENU" == "1" ]; then
    scan1_fun
elif [ "$MENU" == "2" ]; then
    scan2_fun
elif [ "$MENU" == "3" ]; then
    scan3_fun
elif [ "$MENU" == "4" ]; then
    rm -rf /tmp/nmap/iflist.txt
    nmap --iflist > /tmp/nmap/iflist.txt
    xdg-open /tmp/nmap/iflist.txt
    nmap_main_fun
elif [ "$MENU" == "5" ]; then
    sudo nmap --script-updatedb
    nmap_main_fun
elif [ "$MENU" == "x" ]; then
    main_fun
else
    exit
fi

}

############################
nmap_sw_fun(){

clear
echo -e ""
echo -e "    1) 外網掃描"
echo -e ""
echo -e "    2) 內網掃描"
echo -e ""
echo -e "    x) 返回"

read SW
[[ "$SW" ]]
if [ "$SW" == "1" ]; then
    init_fun
    nmap_main_fun
elif [ "$SW" == "2" ]; then
    init_fun
    nmap_main_fun
elif [ "$SW" == "x" ]; then
    main_fun
fi
}

############################
main_fun(){
clear
echo -e ""
echo -e "    1) NMAP"
echo -e ""
echo -e "    2) NMAP GUI"
echo -e ""
echo -e "    0) EXIT"

read MAIN
[[ "$MAIN" ]]

if [ "$MAIN" == "1" ]; then
    nmap_sw_fun
elif [ "$MAIN" == "2" ]; then
    sudo zenmap &
    main_fun
else
    exit
fi

}
############################
main_fun